turking/373353	null	turn off my light bulb after showing weather where fog is NUMBER_0 and cloudiness is greater than NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter cloudiness >= NUMBER_1 && fog == NUMBER_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/373354	null	turn off my light once you have shown the weather where fog is NUMBER_0 and cloudiness is over NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter cloudiness >= NUMBER_1 && fog == NUMBER_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/373355	null	shut off my light if fog is NUMBER_0 and cloudiness is more than NUMBER_1 as you show me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter cloudiness >= NUMBER_1 && fog == NUMBER_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/373356	null	turn off lamp if the current weather for some place has fog of NUMBER_0 and cloudiness is bigger than NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter cloudiness >= NUMBER_1 && fog == NUMBER_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/373357	null	show the current weather and if the fog is NUMBER_0 and the cloudiness is above NUMBER_1 then turn off my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter cloudiness >= NUMBER_1 && fog == NUMBER_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/354476	null	if it is ever raining in a place increase the volume of my speakers .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354984	null	increase the volume of my speaker if the temperature on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354986	null	if the temperature on my thermostat changes , increase my speaker 's volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354990	null	decrease the volume on my speaker if my thermostat temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355211	null	increase my speaker 's volume if my thermostat reports a change in humidity .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355212	null	increase my speaker volume when the humidity changes on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355213	null	turn volume up if humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355214	null	if the humidity changes on my thermostat , increase the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/356623	null	if i move , turn up my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/356625	null	increase speaker volume when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/356627	null	raise speaker volume when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/356631	null	if i start moving , increase the volume on my speakers .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/373406	null	whenever it rains at some place decrease my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373407	null	if some place is raining have my speaker volume decrease	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373408	null	lower my speaker volume if some place 's weather report shows it 's raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373409	null	reduce the audio volume when it 's raining outside .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373410	null	when it rains in some place lower my speaker 's volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373411	null	quiet my speaker 's volume when it 's raining in some place	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373412	null	whenever it starts to rain at some place , make my speaker 's volume go down	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373810	null	speaker volume should decreased when there is a temperature change .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373811	null	temperature changes are to be met by the action of lowering the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373812	null	a lessening of volume on my speaker should be the usual means of letting me know the thermostat has changed position .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373814	null	the speaker volume should be decreased if the thermostat sees a temperature change .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373816	null	if the temperature changes then i want the speaker volume decreased	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373817	null	turn down the speaker anytime the temperature has a change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/373820	null	when the temperature changes turn the volume down	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1617507	null	show websites matching QUOTED_STRING_0 when i change locations .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617508	null	when i change locations show websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617509	null	gather the websites that match QUOTED_STRING_0 when there is a change in my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617510	null	fetch websites which have match of QUOTED_STRING_0 if i change my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617511	null	when my location changes get websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617512	null	i want to receive websites matching QUOTED_STRING_0 when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617762	null	if my location changes search bing for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617763	null	looks on bing for QUOTED_STRING_0 whenever my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617764	null	whenever my location changes , refresh my bing search with results from QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617765	null	update me with search results on bing from QUOTED_STRING_0 anytime my location changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617766	null	whenever my location changes get bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617767	null	get bing QUOTED_STRING_0 if my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620669	null	in the room tell me the temperature when at home the snow stops	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620670	null	tell me what the room temp is if it stops snowing at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620673	null	when at home the snow stops tell me the temperature in the room	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620674	null	when it stops snowing in home tell me the room temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620676	null	when it stops snowing in home tell me the temperature in the room	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620682	null	whenever it stops snowing , tell me what the room temp is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1621223	null	retrieve bing QUOTED_STRING_0 when it starts to snow in work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1621224	null	if it 's snowing at work then search bing for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1621225	null	do a bing search for QUOTED_STRING_0 if it starts to snow at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1621226	null	when the snow starts falling at work retrieve bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1621227	null	when the snow falls from the sky at my workplace bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1621803	null	as soon as i leave LOCATION_0 show me the weather at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1621809	null	show me the weather at work when i leave LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1621810	null	pick a random number for me when at home it stops snowing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1621811	null	when it stops snowing in home select a random number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1621812	null	when it is no longer snowing in home pick a random number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1621816	null	show me the weather at work whenever i leave LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1621817	null	pick any number when snow stops in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1621825	null	once it stops snowing in home choose a random number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1621902	null	retrieve my current location when it stops raining in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621907	null	if it stops raining in LOCATION_0 , show me the current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621908	null	show me my current location whenever it stops raining in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621912	null	send me my current location when the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621917	null	when the rain ends in LOCATION_0 then find my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1622186	null	if my location changes from work to anywhere else search bing for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1622187	null	show me results for QUOTED_STRING_0 on bing after i leave work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1622189	null	after i leave work , retrieve QUOTED_STRING_0 bing results .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1622190	null	whenever my location shows me going away from work , show me results from bing for the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1622192	null	search bing for QUOTED_STRING_0 if i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1622195	null	gather results that say QUOTED_STRING_0 when my location moves away from my work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1622420	null	show what that date is when it stops raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1622423	null	if it stops raining in work show me the current date	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1622426	null	if the rain stops at my work then tell me what the current date is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1622435	null	i want to see the date when it stops raining in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1622658	null	i want the current time when it starts raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622659	null	show me the current time whenever it starts to rain in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622665	null	i would like to know the current time if it begins to rain in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1623492	null	whenever the fog gets below NUMBER_0 in the weather at my current location send me an alert .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1623496	null	inform me if at my current location the fog goes under NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1623500	null	let me know if the fog dips below NUMBER_0 in the weather at my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1623502	null	if the fog goes under NUMBER_0 in my current location , please let me know .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1623503	null	tell me whenever the fog is under NUMBER_0 in my location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1623504	null	send me a notification if the fog goes under NUMBER_0 where i am .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1623797	null	when it stops snowing at home show me QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623798	null	show me QUOTED_STRING_0 on bing when the snow stops in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623802	null	bring up the QUOTED_STRING_0 on bing when it stops snowing at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1624910	null	if the weather is rainy at work , look up bing for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1624911	null	when it starts to rain at work get bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1624914	null	whenever it starts raining at work get bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1624915	null	when rain starts at work get bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1624916	null	retrieve bing QUOTED_STRING_0 when raining commences at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1624917	null	search bing for QUOTED_STRING_0 when it starts raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1625406	null	when i leave the area set the volume of the bluetooth speaker to NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1625413	null	change my bluetooth speaker volume to NUMBER_0 whenever i leave here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1625416	null	if i change locations then put my bluetooth speaker volume at NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1625418	null	when i move further from here set the volume of my bluetooth speaker to NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1625420	null	if i move from this location , set volume of bluetooth speaker to NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1625421	null	if i walk away set the volume to my bluetooth speaker to NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1625544	null	whenever the fog 's weather is other than NUMBER_0 at my current place , send me a note .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1625550	null	can you let me know if the fog is different than NUMBER_0 at my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1625551	null	if the weather is another number than NUMBER_0 for the fog in my latest position , send me a signal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1625552	null	if the fog is different than NUMBER_0 that is in weather in the location of my current location alert me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1625553	null	tell me if the fog is not NUMBER_0 in the weather in the location of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1625557	null	notify me if the fog in my current location is different from NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1626039	null	turn up the volume for the speakers if it starts raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1626045	null	turn my speaker up whenever it rains at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1626046	null	when rain begins to fall at home , turn up the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1626047	null	raise speaker volume when it start raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1626049	null	increase the volume of the speaker when it 's raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1626050	null	increase volume on speaker when rain starts at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1626856	null	turn my speaker down when the snowing in work stops	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1626857	null	if it 's no longer snowing at work then make my speaker a lower volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1626859	null	if it stops snowing at work then set my speaker to a lower volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1626862	null	set me speaker to a lower volume when it stops snowing at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1626869	null	when the snowing in work quits set my speaker so the volume is lower	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1627028	null	show my current location when it stops raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1627029	null	give me my current location after it stops raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1627030	null	give me my current location as soon as it stops raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1627031	null	when the rain stops at work show me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1627033	null	when the rain stops in work tell me where my location is currently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1627034	null	tell me where my current location is when it stops raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1628569	null	when i reach home i want you to get bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628571	null	when i get home show bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628574	null	display bing QUOTED_STRING_0 when i arrive home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628577	null	when i reach home get bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628585	null	bring bing QUOTED_STRING_0 when i reach home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628586	null	deliver bing QUOTED_STRING_0 when i reach home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628632	null	when it starts snowing in work get websites that have QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628633	null	if it begins snowing in work get websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628635	null	if it starts to snow , retrieve websites that match QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628638	null	when it starts snowing at work please show me websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628639	null	pull up websites matching QUOTED_STRING_0 if it starts snowing at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628647	null	websites that match QUOTED_STRING_0 should be fetched when it starts to snow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum snowy => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1628904	null	increase the volume of my speaker whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1628907	null	make my speaker go louder when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1628908	null	when my body moves set the volume on my speaker to be louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1628909	null	increase the volume on my speaker when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1628912	null	on my motion , turn up the speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1630072	null	set up an alert for when the wind speed is smaller than NUMBER_0 miles per hour in the weather of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed <= NUMBER_0 mph ;
turking/1630073	null	send me a notification when the wind speed is less than NUMBER_0 miles per hour at my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed <= NUMBER_0 mph ;
turking/1630074	null	please notify me if the wind speed at my current location drops below NUMBER_0 miles per hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed <= NUMBER_0 mph ;
turking/1630075	null	tell me whenever the wind speed is lower than NUMBER_0 miles per hour at my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed <= NUMBER_0 mph ;
turking/1630076	null	in my current location , show a notification if the wind speed should be less than NUMBER_0 miles per hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed <= NUMBER_0 mph ;
turking/1630081	null	can you tell me if the wind speed gets under NUMBER_0 miles per hour at my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed <= NUMBER_0 mph ;
turking/1630548	null	if my location changes get websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630549	null	get websites matching QUOTED_STRING_0 when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630550	null	get sites that match QUOTED_STRING_0 whenever my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630553	null	i need websites retrieved that contain QUOTED_STRING_0 when my location is changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630554	null	any time my location changes get sites that match QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630562	null	get websites for QUOTED_STRING_0 whenever i change locations	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631004	null	notify me whenever the temperature in my current location is over NUMBER_0 f	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631007	null	alert me when you see that the current location 's temperature is higher than NUMBER_0 f.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631008	null	show me an alert when the weather is higher than NUMBER_0 in my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631010	null	when the temperature in my current location is greater than NUMBER_0 f alert me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631016	null	tell me when the temperature is over NUMBER_0 f in my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631022	null	alert me when the weather is bigger than NUMBER_0 in my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631249	null	i want to know if the temperature is n't less than NUMBER_0 in my location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631286	null	can you notify me when the temperature of my current location is not less than NUMBER_0 fahrenheit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1631432	null	pull up QUOTED_STRING_0 on bing when it stops snowing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631435	null	get QUOTED_STRING_0 on bing if it stops snowing in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631436	null	after it stops snowing bring up QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631441	null	when it stops snowing in here get QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632088	null	when the snow stops at work then tell me my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632089	null	give me current location when the snow stops at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632090	null	at work , if the snow stops , please tell me my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632091	null	show me my current location when the snow stops at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632097	null	retrieve my current location when it stops snowing in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632099	null	tell me my current location when it stops snowing in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632901	null	show me QUOTED_STRING_0 related websites when i arrive at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632902	null	whenever i arrive at work show me websites that match QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632904	null	show me websites that have the words QUOTED_STRING_0 when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632905	null	once i 've arrived at work please show me sites that include QUOTED_STRING_0 in their content	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632907	null	display websites that match QUOTED_STRING_0 when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632913	null	once i arrive at work , show me websites that match QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633171	null	if the humidity gets below NUMBER_0 in the room then turn up the volume on my bluetooth speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1633182	null	when there is less than NUMBER_0 humidity , turn up my bluetooth speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1633184	null	if the room humidity goes below NUMBER_0 , turn up the volume on my bluetooth speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1633190	null	i want the volume on my bluetooth speaker to be increased if the room humidity sinks below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1633191	null	raise the volume level on my bluetooth speaker whenever the humidity in the room is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1633207	null	turn my bluetooth louder when there is less than NUMBER_0 humidity	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1633967	null	in LOCATION_0 when it starts snowing get my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum snowy => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633968	null	show my current location if it starts snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum snowy => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633970	null	show my current location when it starts snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum snowy => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633975	null	display my current location when it starts snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum snowy => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/357432	null	show the current weather then say QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/357438	null	show the current local weather then state : QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/357443	null	show the weather and say QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/354666	null	set volume to my speaker to some % if the title contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/354668	null	if something with the title containing QUOTED_STRING_0 is posted on the rss feed , set speaker volume to value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/354669	null	if something on the rss feed is posted with a title that contains QUOTED_STRING_0 then set the volume on my speaker to some value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355160	null	turn up the volume on my speaker when an rss feed is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355161	null	when something is posted on my rss feed , increase my speaker 's volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355162	null	when something is posted on the rss feed increase speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355163	null	increase speaker volume when my rss feed receives updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358600	null	turn my speaker up when something is posted in the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358604	null	turn my speaker up when something is posted on the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358607	null	increase volume when something is posted on the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358609	null	if posts appears on rss feed , turn up my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618180	null	when something is published on the rss feed , get the location of where i 'm at currently .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618181	null	find my current location when something is published on the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618182	null	when something gets published on the rss feed fetch my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618183	null	show my location when they put something on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618184	null	retrieve my current location whenever something on the rss feed is published	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618188	null	show my locations when new items are posted to the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619300	null	if the temperature in LOCATION_0 dips below freezing , give me the latest atom feed posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.rss . get_post ( ) ;
turking/1619301	null	i need updated posts on atom feed when LOCATION_0 's temperature is under freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.rss . get_post ( ) ;
turking/1619302	null	get me latest posts on an atom feed when the temperature is below freezing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.rss . get_post ( ) ;
turking/1619306	null	when the temperature in LOCATION_0 is below freezing give me latest posts on an atom feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.rss . get_post ( ) ;
turking/1619337	null	if it 's below freezing and LOCATION_0 then get my atom feed new posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.rss . get_post ( ) ;
turking/1622815	null	tell me a random xkcd when in LOCATION_0 it stops snowing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.xkcd . random_comic ( ) ;
turking/1622816	null	tell me a random xkcd when it stops snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.xkcd . random_comic ( ) ;
turking/1622819	null	when snow stops in LOCATION_0 tell random xkcd to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.xkcd . random_comic ( ) ;
turking/1622823	null	show me a random xkcd when it stops snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.xkcd . random_comic ( ) ;
turking/1623780	null	if my location changes show me the latest rss feed posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1623781	null	retrieve the newest rss feed 's posts when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1623782	null	when i am in motion show me latest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1623783	null	if i move show me latest posts on this rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1623784	null	when you notice my location change , give me the newest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1623785	null	display the latest rss feeds post when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1630950	null	get any xkcd comic after i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1630951	null	retrieve an xkcd comic at random if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1630954	null	if i move retrieve an xkcd comic at random	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1630961	null	get an xkcd comic at random when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1630964	null	please pick an xkcd comic at random whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.xkcd . random_comic ( ) ;
turking/333482	null	if the astronomy picture of the day concerns the QUOTED_STRING_0 , retrieve it and play something on my QUOTED_STRING_1 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/333483	null	if nasa 's astronomy picture of the day description contains QUOTED_STRING_0 , then my QUOTED_STRING_1 tv should play something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/333484	null	get nasa 's astronomy picture of the day if the description says QUOTED_STRING_0 and then put something on my QUOTED_STRING_1 tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/333485	null	get curiosity rover photos from the GENERIC_ENTITY_gov.nasa:curiosity_rover_camera_0 and lower the volume of my QUOTED_STRING_0 tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) filter camera_used == GENERIC_ENTITY_gov.nasa:curiosity_rover_camera_0 ; @org.thingpedia.volume-control ( name = QUOTED_STRING_0 ) . lower_volume ( ) ;
turking/333486	null	search twitter ask QUOTED_STRING_0 send on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/333487	null	search twitter with the query QUOTED_STRING_0 then send a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/333488	null	send a message on slack when finding QUOTED_STRING_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/333494	null	show a pop up message saying QUOTED_STRING_0 when retrieving curiosity rover photos from nasa .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/333498	null	show a pop up message saying QUOTED_STRING_0 when retrieving curiosity rover photos from nasa .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/333556	null	search giphy for a gif with the tag HASHTAG_0 , then play it on continuous loop on my device .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333557	null	look through giphy for a gif with the HASHTAG_0 tag then loop my light bulb colors	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333558	null	loop light bulb colors when HASHTAG_0 gif is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333559	null	loop colors on my light bulb after getting a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333567	null	post something on facebook with a gif from giphy with the tag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/333568	null	post gif with HASHTAG_0 to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/333578	null	loop light bulb colors when tag HASHTAG_0 gif comes from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333579	null	loop colors on my light bulb after getting a gif with the HASHTAG_0 tag from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333580	null	loop colors on my light bulb after getting a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/333581	null	decrease the volume on my QUOTED_STRING_0 tv and retrieve nasa 's astronomy picture of the day if the title is QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_1 ; @org.thingpedia.volume-control ( name = QUOTED_STRING_0 ) . lower_volume ( ) ;
turking/333582	null	if nasa 's astronomy picture of the day is titled QUOTED_STRING_0 , then retrieve the picture and decrease the volume on my QUOTED_STRING_1 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @org.thingpedia.volume-control ( name = QUOTED_STRING_1 ) . lower_volume ( ) ;
turking/333583	null	find a picture of the QUOTED_STRING_0 on nasa astronomy picture of the day then decrease the volume on my QUOTED_STRING_1 tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @org.thingpedia.volume-control ( name = QUOTED_STRING_1 ) . lower_volume ( ) ;
turking/333584	null	decrease the volume on my QUOTED_STRING_0 tv and retrieve nasa 's astronomy picture of the day if the title is QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_1 ; @org.thingpedia.volume-control ( name = QUOTED_STRING_0 ) . lower_volume ( ) ;
turking/333603	null	search HASHTAG_0 on twitter then turn off security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333604	null	turn off my security camera and lookup HASHTAG_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333605	null	first search for HASHTAG_0 on twitter , then second , turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333606	null	turn off my security camera after searching for HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/333638	null	update the purpose of slack channel to QUOTED_STRING_0 and search QUOTED_STRING_1 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_1 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/333639	null	search twitter for QUOTED_STRING_0 and update the the slack channel to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/333640	null	get nasa 's astronomy picture of the day , with the title QUOTED_STRING_0 and update the topic of slack channel something to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/333641	null	get nasa 's astronomy picture of the day and title is QUOTED_STRING_0 then update topic of slack channel to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/333642	null	retrieve nasa 's astronomy picture of the day with the title QUOTED_STRING_0 and update the topic of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/333655	null	search twitter for HASHTAG_0 and then turn my security camera on .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333656	null	turn on security camera while searching HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333657	null	turn on my security camera and search HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333658	null	turn on my security camera after searching for HASHTAG_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/333695	null	get my HASHTAG_0 pictures from instagram . set my thermostat at NUMBER_0 - NUMBER_1 fahrenheit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_minmax_temperature ( high = NUMBER_1 F , low = NUMBER_0 F ) ;
turking/333696	null	get recent instagram pictures with HASHTAG_0 and set thermostat between NUMBER_0 f and NUMBER_1 f.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_minmax_temperature ( high = NUMBER_1 F , low = NUMBER_0 F ) ;
turking/333697	null	send instagram photos filtered with the hashtag HASHTAG_0 and then adjust the thermostat within the parameters of NUMBER_0 to NUMBER_1 degrees fahrenheit	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_minmax_temperature ( high = NUMBER_1 F , low = NUMBER_0 F ) ;
turking/335803	null	if nasa posts a picture and the description contains the word QUOTED_STRING_0 on their astronomy picture of the day then play something on my QUOTED_STRING_1 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter description =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_1 ) . play_url ( ) ;
turking/335805	null	send a message on slack when finding QUOTED_STRING_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/335806	null	search QUOTED_STRING_0 on twitter and send it through slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . send ( ) ;
turking/335828	null	get a gif tagged HASHTAG_0 from giphy then loop colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/335830	null	post something on facebook when giphy gifs tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/335831	null	post something on facebook after getting a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @com.facebook . post ( ) ;
turking/335834	null	find a gif with tag HASHTAG_0 then loop light bulb colors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/335835	null	get a gif with the tag HASHTAG_0 from giphy then loop colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/335836	null	if nasa 's picture of the day is titled QUOTED_STRING_0 , then turn down the volume on my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/335842	null	post QUOTED_STRING_0 on facebook after searching for HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/335843	null	find HASHTAG_0 on twitter . post QUOTED_STRING_0 to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/335844	null	turn off my security camera after searching for HASHTAG_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/335857	null	search on twitter for the query QUOTED_STRING_0 then update the purpose of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/335858	null	search for QUOTED_STRING_0 on twitter and then update the channel on slack to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/335859	null	search on twitter for the query QUOTED_STRING_0 then update the purpose of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_1 ) ;
turking/335860	null	nasa 's astronomy picture of the day titled QUOTED_STRING_0 then update slack channel QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/335861	null	retrieve nasa 's astronomy picture of the day with the title QUOTED_STRING_0 and update the topic of my slack channel to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title == QUOTED_STRING_0 ; @com.slack . updateChannelTopic ( topic = QUOTED_STRING_1 ) ;
turking/335874	null	search HASHTAG_0 on twitter and turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350571	null	when the moon changes at home change the name to QUOTED_STRING_0 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . home ) ; @com.dropbox . move ( new_name = QUOTED_STRING_0 ) ;
turking/350583	null	create a meme with the word QUOTED_STRING_0 at the top and QUOTED_STRING_1 at the bottom using imgflip , then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350584	null	create imgflip meme with text QUOTED_STRING_0 at the top and QUOTED_STRING_1 at the bottom , then turn on security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350585	null	generate the meme QUOTED_STRING_0 with a specified message at the top and QUOTED_STRING_1 at the bottom using imgflip , then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350587	null	using imgflip generate the meme QUOTED_STRING_0 with something at the top and QUOTED_STRING_1 at the bottom , and then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350599	null	make github post on issue NUMBER_0 after getting eta for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @com.github . comment_issue ( issue_number = NUMBER_0 ) ;
turking/350600	null	first look somewhere to find the eta for an uber , and then comment on uber 's issue NUMBER_0 in github	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @com.github . comment_issue ( issue_number = NUMBER_0 ) ;
turking/350645	null	turn on my security camera after getting etas for uber services .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350646	null	turn on security camera after getting etas for uber services here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350647	null	see how long an uber will take to get here and then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350649	null	identify uber eta from here and turn on security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/350710	null	if the latest email on gmail is labeled QUOTED_STRING_0 , update the purpose of slack HASHTAG_0 to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350712	null	if the label is QUOTED_STRING_0 on an email in gmail then update the purpose of slack channel HASHTAG_0 to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350714	null	if my newest gmail e-mail is labeled QUOTED_STRING_0 , the update the purpose of the slack channel HASHTAG_0 to QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350718	null	if i get a gmail email with subject QUOTED_STRING_0 then update slack channel HASHTAG_0 to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_1 ) ;
turking/350836	null	search on bing images for an image that has the title QUOTED_STRING_0 then rename the image as QUOTED_STRING_1 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_0 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 ) ;
turking/350837	null	search QUOTED_STRING_0 on bing images and save file as QUOTED_STRING_1 to my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_0 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 ) ;
turking/350838	null	search bing images for QUOTED_STRING_0 and rename them to QUOTED_STRING_1 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_0 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 ) ;
turking/350840	null	search and rename to QUOTED_STRING_0 bing image title with QUOTED_STRING_1 in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . image_search ( ) filter title == QUOTED_STRING_1 ; @com.dropbox . move ( new_name = QUOTED_STRING_0 ) ;
turking/350841	null	make meme beginning with QUOTED_STRING_0 and ending with imgflip then turn off security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/350844	null	using imgflip , make a meme with QUOTED_STRING_0 at the top and something at the bottom and turn off the security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/350845	null	generate a meme with the word QUOTED_STRING_0 on top with a random flip image and then turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/351085	null	send a message on slack with a random number from NUMBER_0 to NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351086	null	give me a random number between NUMBER_0 and NUMBER_1 and send it on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351087	null	generate a random integer between NUMBER_0 and NUMBER_1 and send a message on slack saying anything .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351088	null	pick a random number between NUMBER_0 and NUMBER_1 and send a message on slack to saying something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ; @com.slack . send ( ) ;
turking/351099	null	scan twitter for the hashtag HASHTAG_0 and then set my slack presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.slack . setPresence ( presence = enum away ) ;
turking/351101	null	search for HASHTAG_0 on twitter and set my presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.slack . setPresence ( presence = enum away ) ;
turking/351105	null	find HASHTAG_0 on twitter then set my slack presence to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @com.slack . setPresence ( presence = enum away ) ;
turking/351122	null	get uber rates from home and show colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351123	null	get the estimate for an uber from home to here and then loop colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351124	null	get me the cost of uber from home to there and then loop colors on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351125	null	find estimates for uber from home to here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351126	null	loop colors in my light bulb to let me know when you get price estimates from uber for rides from home to here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location , start = $location . home ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/351129	null	if the estimate is less than DURATION_0 , get etas for uber services to places and turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) filter estimate <= DURATION_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/351130	null	get uber estimates and turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/351131	null	turn on light bulb if uber eta is less than DURATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) filter estimate <= DURATION_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/351438	null	get estimated prices for uber from some place to here and then create a folder called QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/351852	null	change my thermostat to a specific setting after getting a HASHTAG_0 gif from giphy .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/351855	null	collect a gif tagged HASHTAG_0 from giphy , then set my thermostat to a value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/351858	null	get a HASHTAG_0 gif from giphy , and then set my thermostat to some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/351861	null	set my thermostat to some value and then get a gif with the tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/351864	null	find a gif with a HASHTAG_0 tag on giphy , then set my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.giphy . get ( tag = HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/352798	null	get estimate uber prices for routes from work to some place . put the estimates in a new folder labeled something in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) ; @com.dropbox . create_new_folder ( ) ;
turking/352801	null	get prices for ubering from work to some place then make a file in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) ; @com.dropbox . create_new_folder ( ) ;
turking/352807	null	get estimate price for uber from work to the corner market then create a folder called traveling in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) ; @com.dropbox . create_new_folder ( ) ;
turking/352812	null	search for the phrase HASHTAG_0 on twitter and then set my thermostat to a random temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/352818	null	search HASHTAG_0 on twitter . set my thermostat to number degrees .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/352820	null	set my thermostat and search for HASHTAG_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/352900	null	if my dropbox quota total is less than NUMBER_0 mb retrieve it and create a file on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_0 MB ; @com.google.drive . create_new_drive_file ( ) ;
turking/352902	null	if quota on dropbox is less than NUMBER_0 mb then create a file named something on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_0 MB ; @com.google.drive . create_new_drive_file ( ) ;
turking/352904	null	create file with name something on google drive if dropbox quota info is less than NUMBER_0 mb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_0 MB ; @com.google.drive . create_new_drive_file ( ) ;
turking/353340	null	use imgflip to create a meme with something with something at the top and QUOTED_STRING_0 at the bottom then put it on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 ) ; @com.google.drive . create_new_drive_file ( ) ;
turking/353356	null	generate meme with something at top and QUOTED_STRING_0 at bottom	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_hvac_mode ( mode = enum cool ) ;
turking/353362	null	generate a meme with imgflip something with something on the top and then add QUOTED_STRING_0 at the bottom then set my hvac on the cool setting	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_hvac_mode ( mode = enum cool ) ;
turking/353564	null	after searching for QUOTED_STRING_0 on bing , turn on light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353565	null	turn on my light bulb after searching for QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353566	null	search QUOTED_STRING_0 on bing and turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353567	null	do a bing search for QUOTED_STRING_0 and then switch my light bulb on	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353568	null	search for QUOTED_STRING_0 on bing , then turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.bing . web_search ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/353569	null	get a random integer between NUMBER_0 and some value . send an email with the subject something on gmail with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/353571	null	generate a number between NUMBER_0 and some random number , then send an email with subject line gmail and message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/353572	null	pick a random integer between NUMBER_0 and some value then email it from gmail to something with the subject something and message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/354280	null	if label of gmail email is QUOTED_STRING_0 then make QUOTED_STRING_1 google drive file	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_1 ) ;
turking/354414	null	get estimated prices for uber between two places and with duration less than hour , increase the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) filter duration <= 1 h ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354416	null	get estimated prices on uber from my current location to a specified destination ; if it will take less than an hour , increase the volume of my computer .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . current_location ) filter duration <= 1 h ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354417	null	get estimated price for uber and if duration is less than DURATION_0 , raise volume on speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) filter duration <= 1 h ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354587	null	yandex translate QUOTED_STRING_0 to something and turn my speaker volume down	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354588	null	translate QUOTED_STRING_0 with yandex and reduce my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354589	null	translate QUOTED_STRING_0 using yandex , then turn down the volume of my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354590	null	use yandex to translate QUOTED_STRING_0 and turn down the volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354621	null	use yandex to detect the language of QUOTED_STRING_0 and increase the volume of the speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354628	null	turn up my speaker volume when yandex hears QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355495	null	if title is QUOTED_STRING_0 , get xkcd comic and follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/355530	null	if QUOTED_STRING_0 is organizing and sequence is under NUMBER_0 create new folder called QUOTED_STRING_1 in my list off calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 && sequence <= NUMBER_0 ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_1 ) ;
turking/355531	null	please list singular events in my calendar that are created by QUOTED_STRING_0 and insert them into a created file with the name QUOTED_STRING_1 on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_1 ) ;
turking/355533	null	create a file named QUOTED_STRING_0 on google drive and list any events from my calendar where the organizer of the event is named QUOTED_STRING_1 and the sequence is less than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 && sequence <= NUMBER_0 ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_0 ) ;
turking/355539	null	generate a random number between 0 and 1 then comment not he issue number on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ; @com.github . comment_issue ( ) ;
turking/355560	null	show the current weather for work if the weather is sunny then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . work ) filter status == enum sunny ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/355561	null	show the current weather for at work if it is sunny then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . work ) filter status == enum sunny ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/355818	null	get a random integer between NUMBER_0 and some value . update the purpose of slack channel something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.slack . updateChannelPurpose ( ) ;
turking/355821	null	update the purpose of slack channel to a random integer between NUMBER_0 and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.slack . updateChannelPurpose ( ) ;
turking/355873	null	generate meme QUOTED_STRING_0 with something at top and QUOTED_STRING_1 on bottom using imgflip and tweet with picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 , text_bottom = QUOTED_STRING_1 ) ; @com.twitter . post_picture ( ) ;
turking/356169	null	set my hvac to heat and search for youtube videos matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_hvac_mode ( mode = enum heat ) ;
turking/356172	null	search for QUOTED_STRING_0 on youtube videos , then set hvac to heat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_hvac_mode ( mode = enum heat ) ;
turking/356175	null	turn on my heart when searching youtube for videos with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_hvac_mode ( mode = enum heat ) ;
turking/356178	null	set my hvac to heat after searching videos on youtube matching QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_hvac_mode ( mode = enum heat ) ;
turking/356186	null	show the weather , then turn off the security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/356189	null	show the current weather for my home then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356192	null	show the current weather for home then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356194	null	show weather then turn on my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . home ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356405	null	turn on my security camera if a random number between 0 and 1 is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) filter random <= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/356511	null	get estimated prices for uber for traveling from home to work . if the estimate is greater than CURRENCY_0 , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . work , start = $location . home ) filter high_estimate >= CURRENCY_0 ; @com.github . add_email ( ) ;
turking/356523	null	find the sun time information for my location then set the volume on my speakers to a percent of the value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( location = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( ) ;
turking/356524	null	find out sun time info here , then turn volume on my speaker to some percent .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( location = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( ) ;
turking/356525	null	set speaker to some value when getting sun time info	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( ) ; @org.thingpedia.volume-control . set_volume ( ) ;
turking/356732	null	create a file named QUOTED_STRING_0 on google drive after searching youtube channels matching QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_channel ( query = QUOTED_STRING_1 ) ; @com.google.drive . create_new_drive_file ( file_name = QUOTED_STRING_0 ) ;
turking/357184	null	use yandex to translate QUOTED_STRING_0 and send a message titled QUOTED_STRING_1 to twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357189	null	translate something to QUOTED_STRING_0 using yandex , and then send a direct message on twitter to something saying QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357194	null	send QUOTED_STRING_0 a message on twitter saying QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357199	null	using yandex , auto correct the word QUOTED_STRING_0 on twitter to the word QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/357302	null	get uber etas and comment on issue some value in QUOTED_STRING_0 on github with QUOTED_STRING_1 as the body	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @com.github . comment_issue ( body = QUOTED_STRING_0 , repo_name = QUOTED_STRING_1 ) ;
turking/357314	null	if a random xkcd comic contains QUOTED_STRING_0 adjust thermostat to NUMBER_0 c	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357319	null	if the title contains QUOTED_STRING_0 pick a random xkcd comic and set my thermostat to NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357328	null	select a random xkcd comic and if the title contains QUOTED_STRING_0 set my thermostat to NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357333	null	set my thermostat to NUMBER_0 c after getting a random xkcd comic with title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357363	null	create an event that has an end date of DATE_0 and on that date set my thermostat NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ; @org.thingpedia.iot.climate . set_minmax_temperature ( high = NUMBER_0 C ) ;
turking/357368	null	list event in my calendar if end date is DATE_0 then set thermostat to NUMBER_0 c	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ; @org.thingpedia.iot.climate . set_target_temperature ( value = NUMBER_0 C ) ;
turking/357373	null	lust the event in my calendar eighth end date if wednesday , DATE_0 . then set my thermostat at NUMBER_0 c.	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ; @org.thingpedia.iot.climate . set_minmax_temperature ( high = NUMBER_0 C ) ;
turking/357618	null	show weather if wind speed is NUMBER_0 kph and create new folder called something in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed == NUMBER_0 kmph ; @com.dropbox . create_new_folder ( ) ;
turking/357628	null	if wind speed here is less than NUMBER_0 kph , create a new dropbox folder called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . current_location ) filter wind_speed == NUMBER_0 kmph ; @com.dropbox . create_new_folder ( ) ;
turking/357633	null	if wind speed is more than NUMBER_0 kph , show the current weather and create new file something in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed == NUMBER_0 kmph ; @com.dropbox . create_new_folder ( ) ;
turking/357637	null	loop the colors on my light bulb if humidity is less than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357642	null	check and notate the thermostat 's reported humidity level in the case of value dropping below NUMBER_0 and when that 's done , start looping my light bulb colors	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357647	null	if humidity on my thermostat reads under NUMBER_0 then adjust my light bulb to loop colors	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357651	null	if the humidity reported by the thermostat is less than NUMBER_0 , loop the colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357656	null	if the thermostat 's value is less than NUMBER_0 , record the humidity and loop the light bulb 's colors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.iot.humidity . humidity ( ) filter value <= NUMBER_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/357686	null	get prices from uber from here to someone and set volume on my speaker to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/357688	null	find moon phase for work and turn on my camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357691	null	set my speaker volume to NUMBER_0 % when you get estimated prices from some place to here	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/357693	null	turn off my security camera after getting the moon phase for at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357698	null	get the moon phase and turn on my security camera at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357701	null	estimate uber price from someplace to here , then set the volume on my speaker to NUMBER_0 percent .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/357706	null	set the volume on my speaker to NUMBER_0 % after getting estimated prices from uber .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/357812	null	recover my current instagram pictures if area is here and afterward set my indoor regulator to some esteem .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/357817	null	if location on a recent instagram picture is here , set my thermostat to some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/357822	null	set my thermostat and get my recent instagram pictures if the location is here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/357829	null	if my location is here , get my instagram pictures and set my thermostat to a value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . current_location ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/357862	null	generate a meme with the caption , QUOTED_STRING_0 at the top and something at the bottom using imgflip and then set my thermostat between NUMBER_0 f and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/357867	null	while generating the meme QUOTED_STRING_0 at the top and something else at the bottom , using imgflip , then set my thermostat NUMBER_0 f and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/357872	null	using imgflip create a meme that says QUOTED_STRING_0 at the top and put something at the bottom , then change my thermostat to NUMBER_0 degrees	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.climate . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/357908	null	get a xkcd comic and tweet with pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) ; @com.twitter . post_picture ( ) ;
turking/357968	null	list the content of QUOTED_STRING_0 in my dropbox , then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357976	null	turn on my security camera after listing the contests of QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357979	null	read the file QUOTED_STRING_0 from dropbox and turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357983	null	turn on camera after listing content of QUOTED_STRING_0 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/357991	null	yandex translate QUOTED_STRING_0 and turn the speaker volume down .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/357996	null	using yandex , translate something to QUOTED_STRING_0 and then turn down the volume for the speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358001	null	use yandex to translate something to QUOTED_STRING_0 , and lower speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( target_language = QUOTED_STRING_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358012	null	report the sun time info at work for the date DATE_0 and then turn on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( date = DATE_0 , location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/358020	null	turn on my security camera after getting the sun time info for work on DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . sunrise ( date = DATE_0 , location = $location . work ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/358055	null	when a listed event in my calendar 's organizer is QUOTED_STRING_0 then increases the volume of my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358065	null	turn up my volume when an event called QUOTED_STRING_0 is added to my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358070	null	increase speaker volume for QUOTED_STRING_0 events	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358075	null	if the organizer is QUOTED_STRING_0 list the event in my calendar and increase the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358087	null	get price estimates from place to place for uber . if the distance is more than NUMBER_0 then create a folder titled QUOTED_STRING_0 in by dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) filter distance >= NUMBER_0 m ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/358097	null	get estimated prices for uber from here to there , if the distance is more than NUMBER_0 m create a new folder called QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . current_location ) filter distance >= NUMBER_0 m ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/358279	null	get arrival time for uber for uber x and turn off security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) filter uber_type == enum uber_x ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/358389	null	turn on light after translating QUOTED_STRING_0 using yandex .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358394	null	translate QUOTED_STRING_0 to something with yandex before turning off light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/358403	null	please translate QUOTED_STRING_0 using spandex then turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358408	null	translate QUOTED_STRING_0 using yandex and then turn on my light .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . translate ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358563	null	when twitter query is QUOTED_STRING_0 increase my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358566	null	if a twitter search is done for QUOTED_STRING_0 then turn up my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358572	null	search on twitter and if the query is QUOTED_STRING_0 , then increase the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358577	null	use the meme QUOTED_STRING_0 with something at the top and bottom using imgflip	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358578	null	make a meme titled QUOTED_STRING_0 on imgflip with top and bottom captions and turn off the light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/358579	null	make QUOTED_STRING_0 meme with top and bottom using imgflip and turn on light .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358580	null	create a meme with QUOTED_STRING_0 with images on the top and bottom , then turn off light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum off ) ;
turking/358581	null	generate an QUOTED_STRING_0 meme with text at the top and bottom using imgflip then turn on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( template = QUOTED_STRING_0 ) ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/358718	null	if xkcd comic is entitled QUOTED_STRING_0 then create a comment in issue NUMBER_0 on QUOTED_STRING_1 on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( issue_number = NUMBER_0 , repo_name = QUOTED_STRING_1 ) ;
turking/358722	null	get random xkcd comic if title is QUOTED_STRING_0 comment on issue in QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( repo_name = QUOTED_STRING_1 ) ;
turking/358726	null	choose an xkcd comic and if the title is QUOTED_STRING_0 comment on issue NUMBER_0 in the QUOTED_STRING_1 thread in github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( issue_number = NUMBER_0 , repo_name = QUOTED_STRING_1 ) ;
turking/358730	null	if the title is QUOTED_STRING_0 get a random xkcd comic , then post comment on issue NUMBER_0 in QUOTED_STRING_1 on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title == QUOTED_STRING_0 ; @com.github . comment_issue ( issue_number = NUMBER_0 , repo_name = QUOTED_STRING_1 ) ;
turking/358744	null	if summary contains QUOTED_STRING_0 , list event in calendar . if description is QUOTED_STRING_1 , and sequence is above NUMBER_0 , mute QUOTED_STRING_2 tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter description =~ QUOTED_STRING_1 && sequence >= NUMBER_0 && summary =~ QUOTED_STRING_0 ; @org.thingpedia.iot.tv ( name = QUOTED_STRING_2 ) . mute ( ) ;
turking/358750	null	list the event in my calendar . play music on my speaker if the sequence is less than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence <= NUMBER_0 ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/358751	null	play music on speaker if event on calendar sequence is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence <= NUMBER_0 ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/358756	null	find a random integer starting from the number NUMBER_0 . decrease my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358954	null	if my recent instagram picture 's location is work , increase my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358958	null	raise speaker volume after getting instagram pics with work as location	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358962	null	can my recent instagram pictures and increase the volume on my speakers if any of the pictures are from work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358966	null	i would like to look at my newest instagram photos and turn up my speaker volume when at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358970	null	get photos for instagram if the are about work and increase speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . work ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359195	null	set speaker volume to NUMBER_0 % after getting estimated prices for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/359199	null	set volume to NUMBER_0 % after getting uber estimated here to there price	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/359203	null	set the volume on my speaker to NUMBER_0 % after you get the estimates from uber for a trip from here to xxx .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( end = $location . current_location ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/359211	null	get quotes for uber and then set my speaker volume at NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( ) ; @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/359497	null	lower volume on my speaker after getting a random integer between some value and NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359500	null	find a random integer between NUMBER_0 and another value then decrease the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_0 ) ; @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359754	null	if there is a curiosity rover photo from nasa is uploaded on wed , DATE_0 , turn the volume of my speaker up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359759	null	if it 's DATE_0 get curiosity rover photos from nasa and turn my speaker volume up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359767	null	increase the volume on my speaker if the curiosity rover photos retrieved are from DATE_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359772	null	open curiosity rover photos from nasa on DATE_0 and turn up the volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/372146	null	if the title of an xkcd comic is QUOTED_STRING_0 follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/372147	null	if headline is QUOTED_STRING_0 on an xkcd then share something on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . post ( ) ;
turking/372148	null	if an xkcd comic is titled QUOTED_STRING_0 follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/372149	null	if an xkcd comic has a title of QUOTED_STRING_0 follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . get_comic ( ) filter title == QUOTED_STRING_0 ; @com.twitter . follow ( ) ;
turking/372150	null	retrieve etas for uber then set thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/372151	null	set thermostat after eta is received from uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/372152	null	find eta 's for uber services in this area and then change my thermostat to some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . current_location ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/372153	null	after getting eta for uber set thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/372154	null	set thermostat after finding uber eta	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( ) ; @org.thingpedia.iot.climate . set_target_temperature ( ) ;
turking/372439	null	if youtube videos are QUOTED_STRING_0 and have a description of QUOTED_STRING_1 rename the QUOTED_STRING_2 files to QUOTED_STRING_3 in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) filter description == QUOTED_STRING_1 ; @com.dropbox . move ( new_name = QUOTED_STRING_3 , old_name = QUOTED_STRING_2 ) ;
turking/372440	null	look up youtube videos matching QUOTED_STRING_0 if QUOTED_STRING_1 is description then rename file QUOTED_STRING_2 to QUOTED_STRING_3 in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_0 ) filter description == QUOTED_STRING_1 ; @com.dropbox . move ( new_name = QUOTED_STRING_3 , old_name = QUOTED_STRING_2 ) ;
turking/372441	null	rename QUOTED_STRING_0 to QUOTED_STRING_1 in my dropbox if description in youtube videos search matching QUOTED_STRING_2 is QUOTED_STRING_3	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_2 ) filter description == QUOTED_STRING_3 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 , old_name = QUOTED_STRING_0 ) ;
turking/372442	null	in my dropbox rename QUOTED_STRING_0 to QUOTED_STRING_1 if description in youtube videos search matching QUOTED_STRING_2 is QUOTED_STRING_3	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.youtube . search_videos ( query = QUOTED_STRING_2 ) filter description == QUOTED_STRING_3 ; @com.dropbox . move ( new_name = QUOTED_STRING_1 , old_name = QUOTED_STRING_0 ) ;
turking/372483	null	make a new dropbox folder entitled something and add the event to my calendar , whenever there 's an event that begins on the DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372484	null	show the event in my calendar if it starts on the DATE_0 , then make me a new folder in my dropbox and call it something	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372485	null	make me a folder named something in my dropbox when there 's an event beginning on DATE_0 after first adding the event to my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372487	null	look for start date DATE_0 , list event in my calendar , then create folder named something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372490	null	make a new folder in my dropbox for any event in my calendar that starts DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter start_date == DATE_0 ; @com.dropbox . create_new_folder ( ) ;
turking/372689	null	if USERNAME_0 is in the reply to of any returned result of a twitter search , change the QUOTED_STRING_0 file name to something in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372690	null	look at twitter and see if there is something that says USERNAME_0 and if so rename QUOTED_STRING_0 to drop box .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372691	null	search on twitter for USERNAME_0 and rename QUOTED_STRING_0 to dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372692	null	find USERNAME_0 on twitter and rename QUOTED_STRING_0 to drop box .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372693	null	search twitter for replies to USERNAME_0 , rename to QUOTED_STRING_0 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372694	null	in dropbox rename replies to USERNAME_0 to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter in_reply_to == USERNAME_0 ; @com.dropbox . move ( old_name = QUOTED_STRING_0 ) ;
turking/372712	null	activate security camera after using dropbox to open QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372714	null	turn the security camera on after opening QUOTED_STRING_0 on dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372715	null	open QUOTED_STRING_0 on dropbox ; power up my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372718	null	go to my dropbox and open QUOTED_STRING_0 and then turn my security camera on	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372719	null	open the file QUOTED_STRING_0 that 's in my dropbox and turn the security camera on too	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372721	null	switch on my security camera , after you show me QUOTED_STRING_0 , located in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372722	null	retrieve QUOTED_STRING_0 , which can be found in my dropbox , and afterwards switch on my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @org.thingpedia.iot.security-camera . set_power ( power = enum on ) ;
turking/372783	null	check nasa 's astronomy picture of the day , if title contains QUOTED_STRING_0 an email should be sent to something with the subject of something at gmail , message should read QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_0 ; @com.gmail . send_email ( message = QUOTED_STRING_1 ) ;
turking/372784	null	if nasa 's astronomy picture of the day title has QUOTED_STRING_0 in it , email something use subject something and use message QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_0 ; @com.gmail . send_email ( message = QUOTED_STRING_1 ) ;
turking/372785	null	check nasa 's pic of the day title for QUOTED_STRING_0 , if it is QUOTED_STRING_1 email something subject something message QUOTED_STRING_2	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_0 ; @com.gmail . send_email ( message = QUOTED_STRING_2 ) ;
turking/372786	null	use gmail to send the message QUOTED_STRING_0 to something , subject something , if the word QUOTED_STRING_1 is in nasa 's astronomy picture of the day .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . apod ( ) filter title =~ QUOTED_STRING_1 ; @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/372844	null	estimate prices for uber from work to some place if surge is greater than NUMBER_0 then turn off my security camera	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) filter surge >= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/372846	null	if the surge is higher than NUMBER_0 , then get estimated prices for uber from my job to a destination and then turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) filter surge >= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/372847	null	for surges that are greater than NUMBER_0 for uber ride prices from my job to a certain destination please turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . work ) filter surge >= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/372930	null	list QUOTED_STRING_0 content in my dropbox and set presence on slack to auto	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.slack . setPresence ( presence = enum auto ) ;
turking/372935	null	my QUOTED_STRING_0 folder needs to have its contents listing , and my slack account needs to be set to auto .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.slack . setPresence ( presence = enum auto ) ;
turking/372936	null	list what is in my QUOTED_STRING_0 in the dropbox and put auto as my slack presence .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.slack . setPresence ( presence = enum auto ) ;
turking/373129	null	all recent ig post labeled QUOTED_STRING_0 should be retrieved and next set my status on slack to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373130	null	i want all post on instagram captioned QUOTED_STRING_0 to be pulled up and then my status on slack set to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373132	null	set my slack to away and get my recent insta picture when the caption says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373133	null	get my recent insta pic if the caption has QUOTED_STRING_0 in it and set my slack status to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373135	null	make dropbox folder named QUOTED_STRING_0 after getting random integer between NUMBER_0 and some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373136	null	after getting random integer between NUMBER_0 and some value make dropbox folder entitled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373140	null	browse twitter QUOTED_STRING_0 text under HASHTAG_0 then send out email using gmail with subject QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373141	null	create a dropbox folder named QUOTED_STRING_0 but only after select a random integer between NUMBER_0 and some value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373143	null	search twitter for HASHTAG_0 , if you find the text QUOTED_STRING_0 then compose and send a new gmail message to something with the subject , QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373144	null	if QUOTED_STRING_0 is found when searching twitter for HASHTAG_0 , then send a message to something via gmail with the subject QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373145	null	get a random integer between NUMBER_0 and some other number and then make a new folder named QUOTED_STRING_0 in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( low = NUMBER_0 ) ; @com.dropbox . create_new_folder ( folder_name = QUOTED_STRING_0 ) ;
turking/373147	null	run a search for HASHTAG_0 on twitter . if the text reads QUOTED_STRING_0 then use gmail to send an email to something with the subject QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373148	null	on twitter , search for HASHTAG_0 if the text says QUOTED_STRING_0 then send an email to something using gmail , use QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && text == QUOTED_STRING_0 ; @com.gmail . send_email ( subject = QUOTED_STRING_1 ) ;
turking/373314	null	when uber estimated price from here to place is greater than CURRENCY_0 , turn off security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . current_location ) filter low_estimate >= CURRENCY_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/373337	null	flash an alert with my light bulb after you check dropbox for a list of the content QUOTED_STRING_0 and QUOTED_STRING_1 content is sized NUMBER_0 kb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) filter file_size == NUMBER_0 KB ; @org.thingpedia.iot.light-bulb . alert_long ( ) ;
turking/373506	null	update the topic on HASHTAG_0 on slack to something is the url is URL_0 when an xkcd is pulled randomly	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter link == URL_0 ; @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/373516	null	look for an xkcd comic that includes QUOTED_STRING_0 in the title and change my thermostat to a value between NUMBER_0 and some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/373522	null	set the temperature above NUMBER_0 degrees after getting me an xkcd comic that contains the word QUOTED_STRING_0 in the title	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/373524	null	program thermostat between NUMBER_0 and some value after finding xkcd comic with QUOTED_STRING_0 in the title	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter title =~ QUOTED_STRING_0 ; @org.thingpedia.iot.climate . set_minmax_temperature ( low = NUMBER_0 F ) ;
turking/373555	null	if the number is below NUMBER_0 then grab the random xkcd comic and turn off my security camera .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.xkcd . random_comic ( ) filter number <= NUMBER_0 ; @org.thingpedia.iot.security-camera . set_power ( power = enum off ) ;
turking/373800	null	please show the current weather and if fog it at NUMBER_0 , then turn the volume up on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter fog == NUMBER_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/373801	null	look up the weather , if fog is at NUMBER_0 , turn the volume up on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter fog == NUMBER_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/373802	null	when fog for my locations is NUMBER_0 , turn my speaker up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( location = $location . current_location ) filter fog == NUMBER_0 ; @org.thingpedia.volume-control . raise_volume ( ) ;
turking/373803	null	get the curiosity rover pics from nasa that were shot DATE_0 then play some tunes though the speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373804	null	grab the curiosity rover pictures from nasa that were taken DATE_0 , then have my speakers play some music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373805	null	get the nasa curiosity rover shots that were taken on DATE_0 , then set up my speakers to play music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373807	null	load nasa photos of curiosity rover on DATE_0 , then use speakers to play some music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373808	null	if nasa curiosity rover takes a photo on DATE_0 , play music on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( date_taken = DATE_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/373862	null	if sequence is NUMBER_0 and summary contains QUOTED_STRING_0 while listing event in my calendar set my presence on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence == NUMBER_0 && summary =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373863	null	see my calendar and if any QUOTED_STRING_0 is scheduled for NUMBER_0 then set my nearness on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence == NUMBER_0 && summary =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/373865	null	mark me as away on slack if sequence is NUMBER_0 and summary has the word QUOTED_STRING_0 and put the event in my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter sequence == NUMBER_0 && summary =~ QUOTED_STRING_0 ; @com.slack . setPresence ( presence = enum away ) ;
turking/374476	null	if a location contains QUOTED_STRING_0 , list the event in my calendar and loop colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374477	null	if language of QUOTED_STRING_0 is detected by yandex , play music on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374478	null	add all calendar events if QUOTED_STRING_0 is the location display all colors on light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374479	null	loop colors on my light bulb every time the location in my calendar for an event contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374480	null	use yandex to detect the language of QUOTED_STRING_0 and then play music on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374481	null	when language of QUOTED_STRING_0 is detected through yandex , play music on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374483	null	when QUOTED_STRING_0 is posted to a location , add an event to my calendar and loop through my light bulb 's colors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374484	null	p ; ay music on my speaker when yandex find QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374487	null	if the phrase QUOTED_STRING_0 is in the location , then list the event in my calendar and loop the colors on my light bulb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . color_loop ( ) ;
turking/374488	null	using yandex , detect the language of QUOTED_STRING_0 and play some music on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374566	null	update the moon cycle for some place and post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . moon ( ) ; @com.facebook . post ( ) ;
turking/374606	null	play music but only after generating a meme with QUOTED_STRING_0 at the top and QUOTED_STRING_1 at the bottom on imgflip .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374607	null	generate with imgflip a meme with QUOTED_STRING_0 under QUOTED_STRING_1 and then use my speaker to play some music	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_0 , text_top = QUOTED_STRING_1 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374608	null	with the help of imgflip , create a meme with the captions QUOTED_STRING_0 above and QUOTED_STRING_1 underneath , then play songs on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374609	null	use imgflip to generate QUOTED_STRING_0 / QUOTED_STRING_1 memes while playing music .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/374610	null	imgflip plays music on my speaker when i generate QUOTED_STRING_0 / QUOTED_STRING_1 memes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . generate ( text_bottom = QUOTED_STRING_1 , text_top = QUOTED_STRING_0 ) ; @org.thingpedia.iot.speaker . play_music ( ) ;
turking/351133	null	open QUOTED_STRING_0 from dropbox , then share QUOTED_STRING_1 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/351134	null	open QUOTED_STRING_0 file on dropbox then post QUOTED_STRING_1 on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/351135	null	in dropbox , open QUOTED_STRING_0 , then share QUOTED_STRING_1 in linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/351136	null	open the file QUOTED_STRING_0 in dropbox and share the message QUOTED_STRING_1 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . open ( file_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/357821	null	get uber estimates from home and if it 's below CURRENCY_0 , share QUOTED_STRING_0 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . price_estimate ( start = $location . home ) filter high_estimate <= CURRENCY_0 ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372709	null	share QUOTED_STRING_0 on linkedin if my recent instagram pics have QUOTED_STRING_1 as the caption and hashtags HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_1 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372710	null	if my recent insta photos have a caption containing QUOTED_STRING_0 and a HASHTAG_0 hashtag use linkedin to share QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372711	null	if instagram photos with QUOTED_STRING_0 captions and HASHTAG_0 hashtags are recent update linkedin to QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372716	null	find my recent instagram picture that has caption QUOTED_STRING_0 and has hashtag HASHTAG_0 and put it on linkedin with the caption QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372717	null	go to my instagram and find the picture with the caption QUOTED_STRING_0 that has the hashtag HASHTAG_0 and share via linkedin and write QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372720	null	i want to share the term QUOTED_STRING_0 , on my linkedin , whenever photos on my instagram account contain the caption QUOTED_STRING_1 and also have the hashtag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_1 && contains ( hashtags , HASHTAG_0 ) ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/373042	null	share QUOTED_STRING_0 on linkedin once you get etas for uber service at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.uber . time_estimate ( start = $location . home ) ; @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/373095	null	share something on linkedin when QUOTED_STRING_0 content listed in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373096	null	share on linkedin when content from QUOTED_STRING_0 listed in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373097	null	list my QUOTED_STRING_0 in dropbox and share on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373098	null	make a list of dropbox 's QUOTED_STRING_0 content . after that , share something on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373099	null	share something on linkedin after listing the stuff from QUOTED_STRING_0 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/373101	null	share something on my linkedin after the QUOTED_STRING_0 content is listed in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . list_folder ( folder_name = QUOTED_STRING_0 ) ; @com.linkedin . share ( ) ;
turking/333495	null	retrieve all curiosity rover photos from nasa and show an alert on my phone with the text QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/333497	null	show a popup on my phone with the message QUOTED_STRING_0 of curiosity rover photos from nasa	$dialogue @org.thingpedia.dialogue.transaction . execute ; @gov.nasa . rover ( ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/333725	null	update the topic of slack channel when the thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333726	null	when the temperature changes on the thermostat update the topic of the slack channel to something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333727	null	update topic of slack channel when thermostat temperature changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333746	null	play something on my lg webos tv is my thermostat reports a humidity change .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333747	null	play something on my lg webos tv if humidity change is reported by thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333748	null	if humidity changes play something on my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv . play_url ( ) ;
turking/333749	null	play something on my lg webos tv if thermostat 's humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333750	null	unmute my lg webos tv when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333751	null	when i receive a message on slack , unmute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333752	null	when i receive message on slack unmute my lg webos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/333753	null	unmute my lg webos tv when i get messaged on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333754	null	unmute my tv when i get a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/333755	null	turn up the sound on my lg webos tv whenever i get an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333756	null	increase volume on lg webos tv if i get an email in primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333757	null	increase the volume on my lg webos tv if receive an email in category primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333758	null	if an email is received , in category primary , increase the volume on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333776	null	share something on my linkedin when the temperature on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( ) ;
turking/333777	null	share something on linkedin when the temperature on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( ) ;
turking/333778	null	share something on linkedin if temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( ) ;
turking/333782	null	if the humidity on my thermostat changes , post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333783	null	post on facebook when the humidity on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333784	null	post to facebook if humidity changes on thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333785	null	post on my facebook if the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333786	null	if my thermostat detects a change in humidity , post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333796	null	play something on my lg web os tv when i receive an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv . play_url ( ) ;
turking/333797	null	play something on my lg webos tv if i get an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333798	null	play something on my lg webos tv if i receive an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333799	null	play something on my lg webos tv when i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333800	null	play something on my lg webos tv anytime i receive a gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/333802	null	increase the volume on my lg webos tv if i receive a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333803	null	increase the volume on my lg webos tv when i receive direct messages on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333804	null	increase the volume on the lg webos tv anytime i get a direct twitter message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333808	null	post something to facebook when the humidity reported by my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333809	null	post something on facebook when the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333810	null	post something on facebook when humidity on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/333819	null	unmute my lg webos tv if i receive an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333820	null	unmute my lg webos tv when received email is categorized as primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333821	null	if i get an email in my primary inbox , unmute my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/333832	null	post so meeting to facebook when the temperature on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( ) ;
turking/333833	null	post on facebook when my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( ) ;
turking/333834	null	post something on facebook whenever the temperature on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( ) ;
turking/333875	null	tweet something when an asteroid passes close by earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( ) ;
turking/333876	null	send a tweet if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( ) ;
turking/333894	null	if my thermostat changes temperature send a message to one of my gmail contacts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/333895	null	email someone on gmail when my thermostat temperature changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/333896	null	if temperature on thermostat changes , send an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/333912	null	if i get an email through gmail then follow someone using twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . follow ( ) ;
turking/333913	null	if i get a gmail email follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . follow ( ) ;
turking/333914	null	unfollow someone on twitter if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . unfollow ( ) ;
turking/333915	null	unfollow someone on twitter when an asteroid is code	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . unfollow ( ) ;
turking/333916	null	whenever an asteroid is passing close to earth , i then unfollow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . unfollow ( ) ;
turking/333917	null	if there is an asteroid that comes close to earth unfollow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . unfollow ( ) ;
turking/333918	null	unfollow someone on twitter when an asteroid is passing by earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . unfollow ( ) ;
turking/333929	null	if i receive a new gmail message marked as important then update the slack channel topic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333930	null	update slack channel if i receive an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333931	null	update topic of slack channel if i get an important gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333932	null	update the topic of slack channel if i get an important message on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( ) ;
turking/333933	null	with important marked gmails follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333934	null	follow someone on twitter and you 'll get an email marked important from gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333935	null	follow twitter if important email received .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333949	null	send an email to someone with subject something on gmail if i receive a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.gmail . send_email ( ) ;
turking/333950	null	send a gmail if i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.gmail . send_email ( ) ;
turking/333955	null	when i receive an important gmail , follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333956	null	follow someone on twitter if my gmail account receives an email marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333957	null	if i receive an important email on gmail , follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333958	null	when i get an email marked as important , follow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/333959	null	follow someone on twitter if message is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . follow ( ) ;
turking/333960	null	follow someone on twitter with new slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . follow ( ) ;
turking/333961	null	follow someone on twitter if i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . follow ( ) ;
turking/333962	null	follow someone on twitter for every slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . follow ( ) ;
turking/333966	null	if asteroid is near follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . follow ( ) ;
turking/333967	null	follow someone on twitter when an asteroid is passing close to the earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . follow ( ) ;
turking/333968	null	follow someone on twitter if an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . follow ( ) ;
turking/333969	null	if an asteroid is passing by , follow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . follow ( ) ;
turking/333980	null	increase the volume of my lg webos tv if there is a temperature change on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333981	null	increase the volume on my lg webos tv when the temperature on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333982	null	if the thermostat changes raise the volume of the tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/333983	null	raise the volume on my lg webos tv when i get a email in the category labeled primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/333984	null	if i get an email under the primary category then share something on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.linkedin . share ( ) ;
turking/333985	null	share on linkedin when email is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.linkedin . share ( ) ;
turking/333986	null	share something on linkedin when i receive an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.linkedin . share ( ) ;
turking/333987	null	if i receive an email in my primary category , share it on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.linkedin . share ( ) ;
turking/333988	null	share something on my linkedin when i get an email in the category labeled primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.linkedin . share ( ) ;
turking/333989	null	message received on slack , set volume on tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/333990	null	set the volume on my lg webos tv to some value % when i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/333991	null	set tv volume when a message is received on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/333992	null	lower the volume on my lg webos tv when i post a new instagram pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/333993	null	decrease the volume on my lg tv when i post a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/333994	null	when i upload a new picture on instagram , turn down the lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/333995	null	lower the volume on my lg webos tv when i upload a new picture onto instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/333996	null	unmute my lg webos tv if i upload a new picture to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333997	null	unmute my lg webos tv if i upload a new picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333998	null	unmute my lg webos tv upload a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/333999	null	un-mute my lg webos tv when i upload a new picture to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334000	null	unmute my lg webos tv when i post a new pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334001	null	mute my lg webos tv if receive an email in category labeled primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334002	null	when i get an email under the primary category mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334003	null	mute lg webos tv when primal email is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334004	null	mute my lg webos tv if i receive an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334005	null	if an asteroid passes close to earth then turn off mute on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334006	null	unmute my lg webos tv when an asteroid is passing near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334007	null	unmute my tv when an asteroid is passing by earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/334008	null	unmute my lg webos tv if an asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334009	null	unmute my lg tv when there is a asteroid passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/334024	null	unmute my tv if my thermostat reports humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/334025	null	unmute my lg webos tv when humidity reported on thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334026	null	if the thermostat reports a change in humidity , unmute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334032	null	set the volume on my lg webos tv if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334033	null	set the volume on my lg webos tv to some value % when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334034	null	set the volume of my lg webos tv to -lrb- x -rrb- % whenever i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334035	null	if i move , adjust the volume on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334036	null	set the volume on my tv to a specified level when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/334049	null	unmute my lg webos tv when i get an email marked important on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334050	null	set the volume on my lg webos tv to mute whenever i receive a new gmail message marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334051	null	unmute my lg webos tv when i receive an important email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334052	null	unmute my lg webos tv when i get marked important gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334057	null	post something on facebook when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post ( ) ;
turking/334058	null	post something on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post ( ) ;
turking/334059	null	post something on facebook when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post ( ) ;
turking/334085	null	share something on my linkedin when humidity on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( ) ;
turking/334086	null	share on linkedin if the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( ) ;
turking/334087	null	if the humidity changes share something to linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( ) ;
turking/334088	null	mute my tv if i upload a picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/334089	null	mute lg webos tv when i upload new pictures on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334093	null	set the volume on my lg webos tv to -lrb- x -rrb- % whenever i receive a new direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334094	null	set tv volume if i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/334095	null	change tv volume if i receive a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/334096	null	if a direct message comes through twitter than set my lg webos tv volume to x %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334097	null	set the volume on my lg webos tv to some value when i get a message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334102	null	decrease the volume on my lg webos tv when i receive a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334103	null	decrease my tv volume if i get a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/334104	null	decrease the volume on my lg webos tv is i receive a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334105	null	decrease the volume on my lg webos tv if i get a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334106	null	increase the volume on my lg webos tv if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334107	null	increase the volume of my lg webos tv if an asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334108	null	increase the volume on my lg webos tv if an asteroid is passing near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334109	null	lower the volume on my lg webos tv if a new youtube video is uploaded .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334110	null	decrease tv volume when there is a new youtube upload .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/334113	null	if i post a picture to instagram set the volume on my tv to some value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/334114	null	when i put a new ig pic , set the volume on my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/334115	null	set lg webos tv volume to some value % when i upload new instagram photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334116	null	set the volume on my lg webos tv to some value % if i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334164	null	if humidity changes , send email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/334165	null	send an email to EMAIL_ADDRESS_0 via gmail if the humidity on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/334174	null	send a message on slack to HASHTAG_0 if my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/334175	null	send a message to HASHTAG_0 on sack when the temperature on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/334186	null	if i receive a message containing QUOTED_STRING_0 on slack send a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( ) ;
turking/334194	null	unfollow someone on twitter if a youtube video is uploaded with channel title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title == QUOTED_STRING_0 ) => @com.twitter . unfollow ( ) ;
turking/334195	null	when a new video is uploaded on youtube entitled QUOTED_STRING_0 , unfollow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title == QUOTED_STRING_0 ) => @com.twitter . unfollow ( ) ;
turking/334196	null	when a new video by the channel QUOTED_STRING_0 is uploaded , unfollow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title == QUOTED_STRING_0 ) => @com.twitter . unfollow ( ) ;
turking/334198	null	send temperature change via gmail with message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/334199	null	if the temperature on my thermostat changes send an email that says : QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/334208	null	when a new article posts on the fix blog of the washington post , follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.twitter . follow ( ) ;
turking/334209	null	follow someone on twitter when a new article is posted to the washington post 's the fix blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.twitter . follow ( ) ;
turking/334210	null	when a new washington post the fix blog is published follow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.twitter . follow ( ) ;
turking/334211	null	follow someone on twitter when a new article is published in the fix blog on the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.twitter . follow ( ) ;
turking/334212	null	follow someone on twitter when a new article is published in the washington post the fix blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.twitter . follow ( ) ;
turking/334213	null	update the purpose of my slack channel to something containing the subject of my important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelPurpose ( purpose = subject ) ;
turking/334214	null	if an important email is received in gmail then update slack with its subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelPurpose ( purpose = subject ) ;
turking/334215	null	when an important email is received on gmail , update the purpose of slack channel .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelPurpose ( purpose = subject ) ;
turking/334216	null	when i receive an emailed marked important on gmail , update the purpose of slack channel to the subject	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelPurpose ( purpose = subject ) ;
turking/334224	null	send a message to HASHTAG_0 on slack if a new video is uploaded to youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/334225	null	send a message on slack to HASHTAG_0 if a new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/334226	null	send a message on slack to HASHTAG_0 if a new video is uploaded to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/334227	null	send a message on slack HASHTAG_0 if new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/334255	null	tweet the channel title of any new video on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334256	null	tweet channel title of new uploaded youtube videos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334257	null	tweet channel titles of newly uploaded youtube videos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334258	null	tweet the channel title if a new video is uploaded to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334259	null	if i upload a picture to ig and caption is QUOTED_STRING_0 then tweet something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/334260	null	tweet something if i upload a new picture on instagram and the caption is QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/334261	null	tweet something for instagram pictures captioned QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/334270	null	set my lg webos to some value after an QUOTED_STRING_0 gmail message is received .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/334271	null	set the volume on my lg webos tv to some value % if i receive an email on gmail with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/334273	null	turn the sound off on my lg webos tv when i receive a message from USERNAME_0 on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter sender == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334274	null	mute my lg webos tv if i receive a message on slack and from is USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter sender == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334275	null	if i receive any message on slack and its from USERNAME_0 , mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter sender == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334279	null	unmute my lg webos tv when the washington post publishes an article in the business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334280	null	unmute my lg webos tv whenever the washington post publishes a new article in the business section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334281	null	when there are new articles in business of the washington post to unmute the tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/334282	null	unmute my lg webos tv when a new article is published in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334287	null	when there is a new video on youtube , put QUOTED_STRING_0 on fb .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334288	null	post QUOTED_STRING_0 on facebook when a new youtube video is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334290	null	share QUOTED_STRING_0 on my linkedin for new slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334291	null	if i get a slack message , post QUOTED_STRING_0 on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334292	null	share the message QUOTED_STRING_0 on my linkedin is i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334293	null	when the humidity reported by my thermostat changes turn on my lg lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/334294	null	turn on my tv when the thermostat says the humidity has changed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum on ) ;
turking/334295	null	if the humidity on my thermostat changes , turn on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/334296	null	when the humidity on my thermostat changes , turn on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/334297	null	when the humidity reported by my thermostat changes turn on lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/334300	null	post QUOTED_STRING_0 on facebook when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334301	null	post QUOTED_STRING_0 on facebook when a new slack message is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334302	null	post QUOTED_STRING_0 on facebook when i receive a slack message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334316	null	post QUOTED_STRING_0 on facebook if a new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334317	null	post QUOTED_STRING_0 on facebook if a new youtube video is uploaded .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334318	null	if a new video is uploaded on youtube , post QUOTED_STRING_0 on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334319	null	if new video posted on youtube post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/334323	null	if new article posts to plum line blog in the washington post mute my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/334324	null	mute my lg webos tv if a new article is published in the plum line blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334325	null	turn up the volume on my lg webos tv when there 's a new article on the washington post under the business section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334326	null	if the washington post publishes an article in the business section , increase the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334327	null	increase the volume on my lg webos tv when a new article is published in the business section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334328	null	increase the volume on my lg webos tv if a new article is published in the business section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/334329	null	if there is an asteroid near earth , put QUOTED_STRING_0 on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334330	null	share QUOTED_STRING_0 on my linkedin if an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334334	null	turn off my lg webos tv when the thermostat says the humidity has changed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334335	null	if the humidity changes , turn off my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum off ) ;
turking/334336	null	turn off my lg webos tv if the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334341	null	if i put a new picture on ig and i 'm at work , play something on my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . work ) => @org.thingpedia.iot.tv . play_url ( ) ;
turking/334342	null	play something on my lg webos tv if i upload a new picture to instagram and my location is at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . work ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/334343	null	play something on my lg webos tv if i upload a new picture on instagram and location is at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . work ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/334349	null	if an asteroid is coming close to earth , share QUOTED_STRING_0 on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334350	null	share QUOTED_STRING_0 on linkedin if an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334351	null	share QUOTED_STRING_0 on linkedin when an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334352	null	share QUOTED_STRING_0 on linkedin when asteroids pass close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334353	null	post the channel title on facebook of any new video uploaded to youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334354	null	post the channel title on facebook for new youtube videos .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334355	null	post new youtube videos ' channel titles on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334356	null	post newly uploaded youtube channel titles on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334357	null	if a new video shows on youtube post the channel name on youtube from facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334358	null	unmute my lg webos tv if i upload a new picture to instagram with the caption of QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334359	null	unmute my lg webos tv if i upload a new picture on instagram with the captain QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334360	null	turn the volume back up on my lg webos tv whenever i post a new instagram with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/334409	null	share QUOTED_STRING_0 on linkedin if an asteroid is passing near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334410	null	during asteroid near ear , share QUOTED_STRING_0 on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334412	null	share QUOTED_STRING_0 on linkedin when an asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334426	null	if an asteroid passes close to earth , post the satellite data on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334427	null	share the orbiting body from nasa on linkedin when an asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334428	null	share on my linkedin the name of an asteroid if it is passing close to earth according to nasa .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334433	null	share QUOTED_STRING_0 on my linkedin if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334434	null	when i move , share QUOTED_STRING_0 on my linkedin account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334435	null	share QUOTED_STRING_0 on linkedin if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334436	null	share QUOTED_STRING_0 on my linkedin if i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334438	null	share the orbiting body from nasa on my linkedin if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334439	null	when there is a nearby asteroid passing earth , share the orbiting body from nasa on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334440	null	send direct message to nasa via linkedin when asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334441	null	share the orbiting body from nasa on my linkedin if an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334462	null	set presence on slack to auto if temp changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/334463	null	set slack presence to auto if temperature on thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/334469	null	share on linkedin , asteroids name who is passing close to earth from nasa .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334470	null	if an asteroid is passing close to earth share the name of it on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334471	null	if asteroid passes close to earth share nasa name via linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334472	null	share the name of any asteroid that passes close to earth on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334473	null	share name of passing asteroid on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334479	null	when an asteroid passes close to the earth share the name on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334480	null	when an asteroid passes near earth , share its name from nasa on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334481	null	when an asteroid is passing close to earth , share its name from nasa on my linked in .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334491	null	when getting primary category emails change the slack channel topic of something to the gmail subject	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . updateChannelTopic ( topic = subject ) ;
turking/334507	null	send a direct message using twitter to someone saying the from name of any email i get in the category labeled primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . send_direct_message ( message = sender_name ) ;
turking/334508	null	send message on twitter if i receive an email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . send_direct_message ( message = sender_name ) ;
turking/334509	null	when receiving a primary email send someone a direct message on twitter stating the from name	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . send_direct_message ( message = sender_name ) ;
turking/334510	null	whenever i receive a new email in the primary category , send a direct message on twitter with the email sender as the text .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . send_direct_message ( message = sender_name ) ;
turking/334526	null	if i get a email on gmail send a message using slack to something saying the from name from gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . send ( message = sender_name ) ;
turking/334527	null	send slack message when email is received on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . send ( message = sender_name ) ;
turking/334528	null	send a message on slack saying the name of the g-mail account when i receive an e-mail from gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . send ( message = sender_name ) ;
turking/334539	null	send a direct message on twitter to someone saying its orbiting body if an asteroid is passing near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = orbiting_body ) ;
turking/334540	null	send a direct message on twitter if an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = orbiting_body ) ;
turking/334541	null	send a direct message on twitter to someone if an asteroid is passing close to earth telling them the orbiting body	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = orbiting_body ) ;
turking/334542	null	if an asteroid is passing close to earth then direct message its orbiting body on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = orbiting_body ) ;
turking/334546	null	if i get a gmail email marked important , share the from name on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.linkedin . share ( status = sender_name ) ;
turking/334547	null	if i get an important message on gmail share the person 's name on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.linkedin . share ( status = sender_name ) ;
turking/334548	null	whenever i receive a new gmail message marked as important , create a new post on linkedin with the sender 's name as the text .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.linkedin . share ( status = sender_name ) ;
turking/334561	null	update the topic of slack channel HASHTAG_0 to something if i get an important message on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334562	null	update the topic of slack channel to something HASHTAG_0 if i get an email marked important on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334563	null	update the topic of my slack channel to HASHTAG_0 if i receive an email marked as important on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334564	null	update slack channel topic HASHTAG_0 to something when i get an important gmail email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334565	null	when a new video is put on youtube , unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/334566	null	unfollow USERNAME_0 on twitter hen new videos are uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/334567	null	when a new video is uploaded unfollow USERNAME_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/334568	null	when a new video is uploaded on youtube unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/334569	null	unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/334570	null	when receiving important emails on gmail , send a message on slack to someone saying it 's own name .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . send ( message = sender_name ) ;
turking/334571	null	send me messages on slack when i get a message marked as important in gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . send ( message = sender_name ) ;
turking/334572	null	send slack message based on important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . send ( message = sender_name ) ;
turking/334573	null	send a gmail email to someone with the message QUOTED_STRING_0 when there 's a temperature change on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/334574	null	when temp changes on thermostat send gmail message QUOTED_STRING_0 to someone	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/334575	null	send email with the message QUOTED_STRING_0 when the thermostat temperature changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/334576	null	when the temperature on my thermostat changes send a email using gmail with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/334581	null	tweet the channel title from youtube when a new video is uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334582	null	when youtube gets a new video uploaded , tweet the youtube channel title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334583	null	tweet channel title of new youtube video upload .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/334611	null	if anyone i follow on twitter posts a new tweet then update the topic of the slack channel HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334612	null	when someone i 'm following posts a tweet , update the topic of the slack channel HASHTAG_0 to something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334613	null	update the topic of slack channel HASHTAG_0 to something if anyone i follow on twitter tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/334627	null	when i post a new instagram picture send it to someone on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/334628	null	send my new instagram picture to someone on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/334636	null	share new picture uploads on instagram with it 's caption on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/334637	null	share instagram photo and caption on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/334638	null	if i post a new instagram picture share its caption on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/334646	null	if i get a slack message , show a notification on my phone with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/334647	null	my slack triggers QUOTED_STRING_0 when messaged	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/334648	null	give me a popup message on my phone that says QUOTED_STRING_0 when i get a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/334683	null	if i get an email under the primary category then set my slack presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334684	null	set my presence on slack to away if i get an email in category labeled primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334685	null	set slack presence to away when i get a primary email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334686	null	set my slack presence to away if i receive a primary category email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334710	null	if an asteroid passes near earth , share its name on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334711	null	share name of new asteroids passing close to earth on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334712	null	share my name on linkedin when an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334713	null	when an asteroid is passing close to earth share the name of the asteroid on my linkedin account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334714	null	share name of asteroid passing by on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/334731	null	share its orbiting body value on linkedin if an asteroid is passing near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334732	null	if an asteroid passes close to earth , then post a comment on my linkedin with its orbiting body value as the text .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334733	null	if an asteroid passes close to earth , share its orbiting body value on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/334746	null	set my slack presence to away if my thermostat temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334747	null	set my presence on slack to away if the temperature changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334748	null	set my status on slack to away if the temperature on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334750	null	share QUOTED_STRING_0 on my linkedin after i upload a picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334751	null	when i upload a picture to instagram , share a post on linkedin with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334752	null	i uploaded an instagram pic on linkedin called QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334753	null	when i post a new instagram picture , share QUOTED_STRING_0 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334761	null	share QUOTED_STRING_0 on my linkedin if the humidity reported by my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334762	null	update my linkedin with QUOTED_STRING_0 if my thermostats humidity rating changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334767	null	set my presence on slack to away whenever an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334768	null	when an asteroid is passing close to the earth , set my status on slack to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334769	null	set my presence to away on slack when an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334770	null	set my presence on slack to away when an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334771	null	when my temp changes on my thermostat , let me know on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/334772	null	share on linkedin if thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/334773	null	if the temperature changes , share it on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/334774	null	whenever the temperature on my thermostat changes , share the information on my linkedin account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/334783	null	post new youtube video title on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = title ) ;
turking/334784	null	post the title from any new video from youtube on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = title ) ;
turking/334794	null	changes turn on my lg webos tv when humidity on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/334795	null	turn my lg webos tv on if my thermostat reports a humidity change .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/334796	null	mute my lg webos tv if the washington post 's fact checker blog is updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334797	null	mute my lg webos tv if the washington post 's fact checker blog publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334798	null	mute my lg webos tv if a new article is published in the fact checker blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334799	null	mute my lg webos tv if a new article is published in the fact checker blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/334800	null	turn off my lg webos tv when humidity reported on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334801	null	turn off my lg webos tv if there 's a humidity change reported by my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334802	null	turn off my lg webos tv when the humidity report changes on my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334803	null	turn off lg webos tv when humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334804	null	if my thermostat shows a change in humidity , turn off my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334838	null	when new articles are published in world views blog of the washington post lower the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334839	null	decrease the volume on my lg webos tv when there 's a new article in the washington post 's world views blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334840	null	lower the volume on my lg webos tv if a new article is published in the world views blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334841	null	decrease the volume on my lg webos tv when a new article is published in the business section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334842	null	decrease the volume on my lg webos tv when a new article is published in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334843	null	decrease the volume on my tv when a new article is published in the business section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/334844	null	turn the volume on my lg webos tv down when a business article is published with the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/334849	null	when someone i 'm following posts a tweet , upload a facebook picture with caption the text	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/334850	null	upload a picture on my facebook with the caption of my followers when they tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/334851	null	if someone i follow tweets something upload a pic on facebook of the text	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/334855	null	when i get a slack message , post it with a picture to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/334859	null	when i get a message from slack post it on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/334860	null	post slack message on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/334861	null	whenever i receive a message on slack , i then repost the message from slack on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/334862	null	post any received messages on slack to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/334863	null	post received message from slack on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/334864	null	if an asteroid is passing close to earth post the name of the asteroid on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = name ) ;
turking/334865	null	post the name of a passing asteroid on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = name ) ;
turking/334866	null	if an asteroid is passing close to earth , post the name of the asteroid on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = name ) ;
turking/334867	null	post the name of asteroids on facebook when they are passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = name ) ;
turking/334868	null	post name of passing asteroid on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = name ) ;
turking/334869	null	post the channel title value on facebook when a new video is uploaded on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334870	null	when a new video is uploaded to youtube , post the channel on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334871	null	if a new video is uploaded on youtube , post its channel title value on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334872	null	when a new video is uploaded to youtube make a facebook post with its channel title value	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334873	null	post new youtube video on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = channel_title ) ;
turking/334878	null	set tv volume to NUMBER_0 % if slack message is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/334879	null	set my lg webos tv 's volume to NUMBER_0 % if i get a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/334880	null	set volume on my lg webos tv to NUMBER_0 % when i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/334881	null	with new mix blog articles on washington post , post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @com.facebook . post ( ) ;
turking/334882	null	post something on facebook when a new article is posted on the washington post 's morning mix blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @com.facebook . post ( ) ;
turking/334883	null	post on facebook if the washington post posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.facebook . post ( ) ;
turking/334884	null	turn off my lg webos tv when i post a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334885	null	turn off lg webos tv when i upload new instagram pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/334910	null	send the picture to someone with subject QUOTED_STRING_0 on gmail if i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url , subject = QUOTED_STRING_0 ) ;
turking/334911	null	send new instagram picture to someone via gmail with subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url , subject = QUOTED_STRING_0 ) ;
turking/334912	null	if i upload a new ig picture send it to someone with subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url , subject = QUOTED_STRING_0 ) ;
turking/334922	null	change purpose of slack channel HASHTAG_0 to QUOTED_STRING_0 if a direct message is received on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/334923	null	update the purpose of slack channel HASHTAG_0 to QUOTED_STRING_0 if i receive a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/334945	null	if i upload a new instagram picture from home then set my slack presence to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334946	null	when i upload a new picture on instagram and the location is home set my presence on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334947	null	when i upload a new picture on instagram and location is at home set my presence on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334948	null	whenever i 'm at home and i post an instagram , set my slack presence to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334949	null	set slack to away when i upload a picture to ig from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.slack . setPresence ( presence = enum away ) ;
turking/334950	null	send a picture on slack if an asteroid passing close to earth with a relative velocity less than NUMBER_0 kph and include the caption QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter relative_velocity <= NUMBER_0 kmph => @com.slack . send_picture ( caption = QUOTED_STRING_0 ) ;
turking/334951	null	send picture on slack with the caption of QUOTED_STRING_0 when an asteroid is less than NUMBER_0 kph and close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter relative_velocity <= NUMBER_0 kmph => @com.slack . send_picture ( caption = QUOTED_STRING_0 ) ;
turking/334963	null	when a new article is published in the world section of the washington post , send an email of the description of that article via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.gmail . send_email ( message = description ) ;
turking/334964	null	send the description of any new article in the world section of the washington post via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.gmail . send_email ( message = description ) ;
turking/334965	null	send an email on gmail if a new article is published in the world section of the washing post and message the description .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.gmail . send_email ( message = description ) ;
turking/334966	null	share QUOTED_STRING_0 on my linkedin if i receive a message in the HASHTAG_0 slack channel .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334967	null	share QUOTED_STRING_0 on my linkedin whenever i get a message on slack from the HASHTAG_0 channel .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/334998	null	when i get an important gmail from QUOTED_STRING_0 with the label QUOTED_STRING_1 share a linkedin status	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 ) => @com.linkedin . share ( ) ;
turking/334999	null	share something on my linkedin if QUOTED_STRING_0 sends me an important email on gmail labeled QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 ) => @com.linkedin . share ( ) ;
turking/335000	null	when i get an important gmail from QUOTED_STRING_0 labeled QUOTED_STRING_1 , share it on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 ) => @com.linkedin . share ( ) ;
turking/335005	null	set my presence on slack to away when a new article is published in the local section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335006	null	set my presence on slack to away if a new article is published in the local section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335007	null	set my presence on slack to away when an article is published in the local section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335008	null	set the n set of my presence of slack to away when a new article is published in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335009	null	when a new is published in the local section of the washington post tweet its title with an attached picture .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.twitter . post_picture ( caption = title ) ;
turking/335010	null	tweet the title of any new article published in the local section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.twitter . post ( status = title ) ;
turking/335011	null	when a new article is published in the local section of the washington post tweet its title with an attached picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.twitter . post_picture ( caption = title ) ;
turking/335017	null	if a new video is uploaded on youtube send a message using slack to HASHTAG_0 with its title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/335018	null	send a message on slack to HASHTAG_0 of the new video uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/335019	null	send message to HASHTAG_0 on slack with title of any new youtube video .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/335020	null	send an email using gmail to someone with the title as the subject when a new article is published in the politics blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) ) => @com.gmail . send_email ( subject = title ) ;
turking/335021	null	if a new article is published in the politics blog of the washington post , send a gmail e-mail to someone with the title of that article as the subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) ) => @com.gmail . send_email ( subject = title ) ;
turking/335046	null	if i receive a message on slack , forward it directly to USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = USERNAME_0 ) ;
turking/335047	null	forward exact slack messages to twitter message to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = USERNAME_0 ) ;
turking/335048	null	send dm to USERNAME_0 when i receive a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = USERNAME_0 ) ;
turking/335049	null	send a direct message on twitter to USERNAME_0 when i get a message on slack replaying the message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = USERNAME_0 ) ;
turking/335050	null	when i receive a slack message , direct message USERNAME_0 on twitter with the message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = USERNAME_0 ) ;
turking/335065	null	update topic of slack channel to QUOTED_STRING_0 when washington post publishes new article in national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/335066	null	update the topic of the slack channel to QUOTED_STRING_0 when the new article of the washington post in the national section is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/335067	null	the washington post has new national article , please post update to the picture of slack channel under QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/335068	null	if the washington post publishes a new article in the national section update the topic of slack channel something to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/335085	null	set my status on slack to away if a new youtube video is uploaded with the title of QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title =~ QUOTED_STRING_0 ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335086	null	set my presence on slack to away is a video contains QUOTED_STRING_0 on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title =~ QUOTED_STRING_0 ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335087	null	when there is a new youtube video with the words QUOTED_STRING_0 set me as away on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title =~ QUOTED_STRING_0 ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335088	null	when QUOTED_STRING_0 uploads a new video on youtube , set slack to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title =~ QUOTED_STRING_0 ) => @com.slack . setPresence ( presence = enum away ) ;
turking/335093	null	if a new youtube video is uploaded with the text QUOTED_STRING_0 , then unfollow USERNAME_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/335094	null	unfollow USERNAME_0 if new video on youtube is titled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/335095	null	if a video is uploaded on youtube containing QUOTED_STRING_0 , unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/335101	null	when i move and am at home send email to someone and subject is QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/335102	null	when i move and am at home , send an email to someone on gmail with the subject line QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/335103	null	if i am at home and i move send an email to someone with the subject QUOTED_STRING_0 on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/335104	null	when i go home send an email to someone with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/335187	null	when i get a new twitter direct message , email EMAIL_ADDRESS_0 on gmail with the subject the message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.gmail . send_email ( subject = message , to = EMAIL_ADDRESS_0 ) ;
turking/335188	null	send an email to EMAIL_ADDRESS_0 with subject the message on gmail when i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.gmail . send_email ( subject = message , to = EMAIL_ADDRESS_0 ) ;
turking/335189	null	send an email to EMAIL_ADDRESS_0 an email via gmail when a twitter message is received with it as the subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.gmail . send_email ( subject = message , to = EMAIL_ADDRESS_0 ) ;
turking/335190	null	send my direct messages from twitter to EMAIL_ADDRESS_0 by gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.gmail . send_email ( subject = message , to = EMAIL_ADDRESS_0 ) ;
turking/335199	null	if i upload a new picture on instagram , send the picture to someone , via gmail , with the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url , subject = QUOTED_STRING_0 ) ;
turking/335205	null	share title on linkedin when a new article is published in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( status = title ) ;
turking/335206	null	new opinion article in the washington post , always share on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( status = $result ) ;
turking/335207	null	share opinion pieces from the washington post on my linkedin using the article title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( status = title ) ;
turking/335208	null	whenever a new article is posted in the opinions section of the washington post , then post the article title as an update on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( status = title ) ;
turking/335209	null	share QUOTED_STRING_0 on my linkedin when a new article is published in the world views blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/335210	null	whenever a new entry is posted in the washington post world views blog , post an update on my linkedin with the text QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/335211	null	share any new article published in the world views blog of the washington post on my linkedin with the title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/335219	null	if EMAIL_ADDRESS_0 send me an email can then share his name on to my linked in page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.linkedin . share ( status = sender_name ) ;
turking/335220	null	if i get an email in primary inbox from EMAIL_ADDRESS_0 share from gmail to linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.linkedin . share ( status = sender_name ) ;
turking/335221	null	when i receive primary category emails from EMAIL_ADDRESS_0 , share the from name on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.linkedin . share ( status = sender_name ) ;
turking/335222	null	if EMAIL_ADDRESS_0 sends an email in category primary share on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.linkedin . share ( status = sender_name ) ;
turking/335223	null	if i receive an email from EMAIL_ADDRESS_0 , share the from name to linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.linkedin . share ( status = sender_name ) ;
turking/335235	null	check my thermostat for changes in humidity and post to facebook if it is more that NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.facebook . post ( status = $result ) ;
turking/335236	null	if my humidity goes above NUMBER_0 , post it to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.facebook . post ( status = $result ) ;
turking/335237	null	post the humidity on facebook if it rises higher than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.facebook . post ( status = $result ) ;
turking/335238	null	if the humidity on my thermostat is over NUMBER_0 post it on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.facebook . post ( status = $result ) ;
turking/335249	null	when the washington post publishes a new article in the business section send an email to someone on gmail with subject and description as QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = description ) ;
turking/335250	null	when a article is published in the business section of the washington post , send and email with the subject QUOTED_STRING_0 via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = description ) ;
turking/335251	null	if a new article is published in the business section of the washington post using gmail send an email to someone with subject the description and the massage as QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = description ) ;
turking/335252	null	when the washington post has a new article in the business section , send an email using gmail with the subject as the description and the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = description ) ;
turking/335257	null	send new lifestyle articles from the washington post via email to gmail with the title of the article as the email subject and the article itself in the message body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( message = description , subject = title ) ;
turking/335258	null	send a gmail with the subject in the title when you see a new article published in the lifestyle section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( subject = title ) ;
turking/335259	null	when a new article is published to the washington post , send an email from gmail to anyone about it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( message = $result ) ;
turking/335260	null	if a new article is published in the lifestyle section of the washington post , send an email through gmail to someone with the article title as the email subject and the article description as the body of the message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( message = description , subject = title ) ;
turking/335264	null	send a QUOTED_STRING_0 message to USERNAME_0 of new video is uploaded on youtube and title contains QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_1 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/335265	null	send dm on twitter to USERNAME_0 saying QUOTED_STRING_0 if new video with QUOTED_STRING_1 in the title is uploaded to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_1 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/335275	null	share text of tweet on linkedin if USERNAME_0 replies to tweet with HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 && contains ( hashtags , HASHTAG_0 ) ) => @com.linkedin . share ( status = text ) ;
turking/335278	null	send a direct message on twitter to USERNAME_0 when the article is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.twitter . send_direct_message ( message = title , to = USERNAME_0 ) ;
turking/335279	null	send a direct message to USERNAME_0 on twitter with the title of any new plum line blog articles from the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.twitter . send_direct_message ( message = title , to = USERNAME_0 ) ;
turking/335280	null	send a twitter message to USERNAME_0 with the washington post title when a new article is published in the plum line blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.twitter . send_direct_message ( message = title , to = USERNAME_0 ) ;
turking/335281	null	if asteroid is passing close and name says QUOTED_STRING_0 and more than NUMBER_0 m in diameter send dm on twitter to someone saying QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 m && name =~ QUOTED_STRING_0 => @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/335282	null	send a direct message on twitter to someone saying QUOTED_STRING_0 if an asteroid is passing close to earth and name contains QUOTED_STRING_1 and estimated diameter max is greater than NUMBER_0 m	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 m && name =~ QUOTED_STRING_1 => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/335283	null	when a new article is published in the opinions section of the washington post send a message on slack to HASHTAG_0 stating its title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/335284	null	when new opinion is posted in the washington post , send a message on slack HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/335285	null	when a new article is published in the opinions section of the washington post , send a message on slack to HASHTAG_0 saying its title .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/335297	null	send new pictures on instagram when the location is here to the slack caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . current_location ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/335298	null	when i upload a new picture on instagram from this location , send the picture on slack captioned QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . current_location ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/335299	null	if take and upload a new instagram photo from this location , send the picture on slack with the caption QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . current_location ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/335300	null	send uploaded instagram pictures with current location on slack with the caption QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . current_location ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/335307	null	if QUOTED_STRING_0 emails me and the label is QUOTED_STRING_1 and snippet contains QUOTED_STRING_2 and in category primary then send a dm on twitter with the subject of the email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 && snippet =~ QUOTED_STRING_2 ) => @com.twitter . send_direct_message ( message = subject ) ;
turking/335308	null	if i receive an email in category primary from QUOTED_STRING_0 with the label QUOTED_STRING_1 and the snippet contains QUOTED_STRING_2 , send a twitter dm saying the subject of the email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 && snippet =~ QUOTED_STRING_2 ) => @com.twitter . send_direct_message ( message = subject ) ;
turking/335898	null	when the temperature of my thermostat changes , update my slack channel topic from something to something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/335899	null	as the temperature on the thermostat changes , update the topic of slack channel .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/335902	null	increase the volume on my lg webos tv if you receive an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335909	null	share something on linkedin when the temperature of my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( ) ;
turking/335913	null	raise the volume of my lg webos tv if i get a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335915	null	post on facebook when he humidity reported by my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/335916	null	when humidity changes on thermostat post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( ) ;
turking/335919	null	unmute my lg webos tv if i get an email in my primary folder .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/335920	null	unmute lg webos tv when new emails are received in primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/335926	null	post a facebook message if my thermostat temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( ) ;
turking/335927	null	when temperature changes , post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( ) ;
turking/335937	null	tweet something if an asteroid is close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( ) ;
turking/335938	null	tweet something if an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( ) ;
turking/335939	null	tweet when an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( ) ;
turking/335943	null	send an email to someone using gmail if thermostat changes temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/335944	null	send someone an email through gmail when my thermostat temperature changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/335955	null	follow twitter users who contact me via gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . follow ( ) ;
turking/335956	null	follow a person on twitter when i receive an email from them on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . follow ( ) ;
turking/335967	null	change topic on slack channel when i receive an important email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( ) ;
turking/335968	null	if i get an email through gmail marked important then follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/335969	null	follow someone on twitter if i get an important message on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/335972	null	if i get a a slack message use gmail to send an email to someone with the subject something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.gmail . send_email ( ) ;
turking/335973	null	if i get a message on slack , send an email to someone on gmail with the subject being something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.gmail . send_email ( ) ;
turking/335974	null	send an email using gmail to someone with subject something if i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.gmail . send_email ( ) ;
turking/335976	null	follow senders of important emails on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . follow ( ) ;
turking/335977	null	if i receive a slack message then follow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . follow ( ) ;
turking/335991	null	increase the volume on my lg webos tv if the temperature on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335992	null	raise the volume on my lg webos tv if the temperature on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335993	null	increase volume on lg webos tv when primary email comes in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335994	null	increase tv volume if i get a primary email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/335995	null	increase the lg webos tv 's volume whenever i get an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335996	null	when an email under the primary category comes in increase the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/335997	null	change the volume on my lg webos tv when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/335998	null	set volume on lg tv to value % when i get a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( ) ;
turking/335999	null	decrease the volume on my lg webos tv when i post a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/336000	null	mute my lg webos tv when i receive an email with the subject of primary .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336007	null	if the humidity reported by my thermostat changes , unmute my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/336008	null	unmet my lg webos tv when the humidity reported by my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/336012	null	unmute my lg webos tv if i get an important message on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/336029	null	if my thermostat reports a change in humidity , share something on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( ) ;
turking/336030	null	share on my linkedin when the humidity setting on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( ) ;
turking/336031	null	mute my lg webos tv when i post a new pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336032	null	mute my lg webos tv if i upload a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336033	null	mute lg tv when i upload a pic to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/336037	null	if i get a twitter direct message decrease my lg webos tv 's volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/336038	null	turn up the volume on my lg webos tv when an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/336039	null	increase the volume on my lg webos tv when an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/336040	null	turn the volume down on my lg webos tv when a new youtube video uploads	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/336041	null	turn down the volume on my lg webos tv is youtube uploads a new video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/336042	null	when there is a new video posted , turn down the volume on my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/336046	null	set volume to some value on lg webos tv if i upload new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/336063	null	send a gmail to EMAIL_ADDRESS_0 if the thermostat 's humidity report changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/336071	null	send a slack message to HASHTAG_0 if the temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/336072	null	when the temperature changes , send a slack message to HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/336073	null	send a message on slack to HASHTAG_0 if my thermostat changes temps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/336083	null	send me a direct message on twitter if i receive a message on slack containing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( ) ;
turking/336084	null	if a direct message from slack contains QUOTED_STRING_0 , send a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( ) ;
turking/336085	null	send direct message on twitter if i receive a message on slack that contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( ) ;
turking/336094	null	when a new video is uploaded on youtube , and the channel title is QUOTED_STRING_0 , unfollow someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title == QUOTED_STRING_0 ) => @com.twitter . unfollow ( ) ;
turking/336095	null	if the temperature on my thermostat changes , send an email via gmail , titled QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/336096	null	if the temperature on my thermostat changes , send an email by gmail with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/336100	null	change the purpose of slack channel to the subject of my latest important email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelPurpose ( purpose = subject ) ;
turking/336104	null	send message on slack to HASHTAG_0 if someone upload a new video on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/336116	null	tweet the the channel title of new videos on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/336117	null	post something on twitter whenever i have a new instagram post that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/336120	null	when i receive a gmail email which has the subject QUOTED_STRING_0 then change the volume of my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/336121	null	set the volume on my lg webos tv to some value % if receive an email on gmail and subject is QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/336122	null	mute my lg webos tv if i receive a message on slack and it is from USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter sender == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336123	null	mute my lg webos tv if i receive a message from USERNAME_0 on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter sender == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336128	null	post QUOTED_STRING_0 on facebook when a new video is uploaded on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/336129	null	post QUOTED_STRING_0 on facebook when youtube uploads a new video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/336130	null	share QUOTED_STRING_0 on my linkedin when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/336134	null	post QUOTED_STRING_0 on facebook whenever i get a new slack message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/336144	null	turn off the volume on my lg webos tv whenever there 's a new article in the washington post in the the plum line blog section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336145	null	if the washington post publishes an article in the plum line blog , mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336146	null	mute my lg webos tv if a new article is published in the plum line blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336147	null	if a new article posts in the business section of the washington post turn up the volume on my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/336148	null	share QUOTED_STRING_0 on my linkedin if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/336149	null	share QUOTED_STRING_0 on linkedin if asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/336151	null	turn off my lg webos tv if the humidity reported by my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/336152	null	turn off my lg webos tv is the thermostat humidity report changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/336154	null	if i upload a picture to instagram and i 'm at work , then play something on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . work ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/336155	null	play something on my lg webos tv if i upload a new picture on instagram from work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . work ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/336157	null	unmute my lg webos tv if i upload a new picture on instagram and caption contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/336158	null	if ig picture has caption of QUOTED_STRING_0 then unmute my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/336187	null	share the orbiting body on linkedin when an asteroid is passing near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/336188	null	share the orbiting body of any asteroid passing close to earth from nasa , to my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/336190	null	share the orbiting body from nasa on my linkedin account if an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/336196	null	set my presence on slack to auto if the temperature on my thermostat is changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/336197	null	set my presence on slack to auto if the temperature changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/336199	null	when an asteroid is passing close to earth share name on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/336200	null	when a asteroid is close to earth share then name from nasa on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/336202	null	update the topic of slack channel to the subject from gmail email when it is from the category labeled primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . updateChannelTopic ( topic = subject ) ;
turking/336203	null	update slack channel topic if i receive an email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . updateChannelTopic ( topic = subject ) ;
turking/336206	null	send a direct message on twitter to someone saying QUOTED_STRING_0 if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/336207	null	if an asteroid passes close to earth , send QUOTED_STRING_0 as a tweet to someone on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/336208	null	send direct message QUOTED_STRING_0 via twitter when asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/336209	null	send a twitter direct message with QUOTED_STRING_0 if an asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/336214	null	when i receive an email in the primary category send a twitter direct message to someone with the from name	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . send_direct_message ( message = sender_name ) ;
turking/336228	null	send message on slack of gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . send ( message = sender_name ) ;
turking/336229	null	when new gmail arrives send message via slack with name from gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . send ( message = sender_name ) ;
turking/336235	null	send a direct message on twitter to someone saying it 's orbiting body is close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = orbiting_body ) ;
turking/336239	null	if i get important gmail share from linkedin name	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.linkedin . share ( status = sender_name ) ;
turking/336248	null	when receiving emails marked as important in gmail update the slack channel HASHTAG_0 topic to something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/336249	null	when i get a gmail email marked important , send a slack message to something with its from name value	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . send ( message = sender_name ) ;
turking/336250	null	if i get an important email on gmail send a message on slack saying who it 's from	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . send ( message = sender_name ) ;
turking/336253	null	whenever a new video is posted on a youtube channel then send a new tweet with the channel title .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.twitter . post ( status = channel_title ) ;
turking/336266	null	update the topic on my slack channel to HASHTAG_0 , if anyone i follow tweets an update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/336269	null	when i post a new instagram pic send it to someone on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/336270	null	send newly uploaded instagram pictures to someone on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/336271	null	send a new picture that i upload on instagram to someone on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/336280	null	share my newly uploaded instagram picture caption on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/336281	null	share the caption on linkedin of any new pic i post on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/336296	null	set my presence on slack to away if i receive an email in category primary .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/336312	null	when there is an asteroid coming near earth share its orbiting body value on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/336313	null	share the orbiting body values of any passing asteroids on my linkedin page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = orbiting_body ) ;
turking/336322	null	change my slack presence to away if my thermostat reports a temperature change .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/336323	null	if temperature changes set my presence on slack to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/336333	null	whenever the humidity on my thermostat changes , share QUOTED_STRING_0 on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/336336	null	set my presence on slack to away when an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/336337	null	if the thermostat changes temperature , share it with my linkedin account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/336345	null	post youtube title on facebook when new youtube video is uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = title ) ;
turking/336346	null	whenever a new video is uploaded to youtube , post its title to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = title ) ;
turking/336347	null	when a new video is uploaded to youtube post its title to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = title ) ;
turking/336349	null	turn on lg tv if the humidity on the thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/336350	null	if the thermostat indicates a change in humidity turn on the lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/336351	null	turn on my lg webos tv if there is a change in my thermostat 's humidity report	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/336352	null	mute my lg webos tv when a new article is published in the fact checker blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/336365	null	turn down the volume on my lg webos tv when a new article is published in the world views blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/336366	null	decrease tv volume when a new article is posted to world views blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/336367	null	lower the volume on my lg webos tv when a new article is published in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/336369	null	if my followers tweets , upload a photo on facebook with caption .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/336372	null	upload pictures on facebook with the messages i receive from slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/336373	null	when i get a message on slack post a pic on facebook with the same caption as the message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/336374	null	if i get a slack message , upload a facebook picture with the caption its message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/336375	null	use the message i got on slack to caption a facebook photo .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/336379	null	set lg webos tv to NUMBER_0 when i get message from slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/336380	null	set the volume on my lg webos tv to NUMBER_0 % when i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/336381	null	when the washington post publishes a new article under the morning mix blog post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @com.facebook . post ( ) ;
turking/336382	null	post something on facebook if a new article is published in the morning mix blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @com.facebook . post ( ) ;
turking/336383	null	turn off tv when i upload instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum off ) ;
turking/336384	null	turn off my lg webos tv when i post a new instagram pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/336385	null	turn off my lg webos tv if i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/336393	null	send a picture to someone with subject QUOTED_STRING_0 on gmail if i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url , subject = QUOTED_STRING_0 ) ;
turking/336408	null	send a gmail message with the description of any new washington post world section news articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.gmail . send_email ( message = description ) ;
turking/336410	null	share QUOTED_STRING_0 on my linkedin if i receive a message on slack and channel is HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/336423	null	if i get an email on gmail from the name QUOTED_STRING_0 that is marked important under the QUOTED_STRING_1 label , share on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 ) => @com.linkedin . share ( ) ;
turking/336426	null	if there 's a new article in the local section of the washington post , set my slack presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/336427	null	if the washington post publishes a new article in the local section , tweet its title and an attached picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.twitter . post_picture ( caption = title ) ;
turking/336428	null	tweet the article when local articles are published to the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.twitter . post ( status = title ) ;
turking/336429	null	when there 's a new video uploaded to youtube , send a slack message to HASHTAG_0 with its title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/336430	null	send a message on slack to HASHTAG_0 saying the title of any video uploaded on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/336431	null	send a message to a person on gmail with the subject of any new articles published in the washington post politics blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) ) => @com.gmail . send_email ( subject = title ) ;
turking/336432	null	send a email of the published article on the politics blog of the washington post to someone with the title as the subject on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) ) => @com.gmail . send_email ( subject = title ) ;
turking/336433	null	when there 's a new article in the politics blog of the washington post use gmail to send an email to someone with the subject as the article title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) ) => @com.gmail . send_email ( subject = title ) ;
turking/336447	null	set my slack status to away when a new youtube video is uploaded to any channel that contains QUOTED_STRING_0 in the title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter channel_title =~ QUOTED_STRING_0 ) => @com.slack . setPresence ( presence = enum away ) ;
turking/336448	null	unfollow USERNAME_0 when youtube videos titled QUOTED_STRING_0 are uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/336449	null	unfollow USERNAME_0 on twitter if there is QUOTED_STRING_0 in youtube title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/336461	null	show an orbiting popup message on my phone to alert me when an asteroid is passing close to earth and the relative velocity of it is more than NUMBER_0 kph .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter relative_velocity >= NUMBER_0 kmph => @org.thingpedia.builtin.thingengine.builtin . say ( message = orbiting_body ) ;
turking/336462	null	show a pop up on my phone and message me the orbiting body when an asteroid whose relative velocity is more than NUMBER_0 kph is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter relative_velocity >= NUMBER_0 kmph => @org.thingpedia.builtin.thingengine.builtin . say ( message = orbiting_body ) ;
turking/336463	null	give me a notification on my phone when an asteroid is passing close to earth and it 's going faster than NUMBER_0 kph and put the message as the orbiting body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter relative_velocity >= NUMBER_0 kmph => @org.thingpedia.builtin.thingengine.builtin . say ( message = orbiting_body ) ;
turking/336473	null	when i get a direct twitter message , send it as email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.gmail . send_email ( subject = message , to = EMAIL_ADDRESS_0 ) ;
turking/336485	null	when the washington post publishes something new in the opinions section , share the article title on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( status = title ) ;
turking/336486	null	post QUOTED_STRING_0 on my linkedin when a new article is published in the world views blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum world_views ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/336503	null	when a new lifestyle article is published in the washington post , please send an email through gmail with the title as the subject and the description in the body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( message = description , subject = title ) ;
turking/336506	null	if a new video is uploaded on youtube , with the title QUOTED_STRING_0 , send a direct message on twitter to USERNAME_0 , saying QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_1 , to = USERNAME_0 ) ;
turking/336507	null	if a new video is uploaded on youtube , with the title containing QUOTED_STRING_0 , send a direct message on twitter to USERNAME_0 , saying QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title =~ QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_1 , to = USERNAME_0 ) ;
turking/336511	null	send email to someone with subject QUOTED_STRING_0 each time an asteroid is close to earth with a NUMBER_0 km diameter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_min <= NUMBER_0 km => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = orbiting_body ) ;
turking/336512	null	send a email subject its orbiting body to gmail with the message QUOTED_STRING_0 if an asteroid bigger than NUMBER_0 km passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_min <= NUMBER_0 km => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = orbiting_body ) ;
turking/336513	null	if asteroid is close and more than NUMBER_0 km in diameter send email to someone with subject as orbiting body and message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_min >= NUMBER_0 km => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = orbiting_body ) ;
turking/336516	null	send the title from the washington post to USERNAME_0 on twitter when a new article is posted to the plum line blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.twitter . send_direct_message ( message = title , to = USERNAME_0 ) ;
turking/336517	null	send a direct message on twitter saying QUOTED_STRING_0 if an asteroid containing the name QUOTED_STRING_1 with an estimated diameter greater than NUMBER_0 m passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 m && name =~ QUOTED_STRING_1 => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/336518	null	dm someone on twitter that says QUOTED_STRING_0 if an asteroid that has a name that contains QUOTED_STRING_1 is close to earth and has a max diameter greater than NUMBER_0 m.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 m && name =~ QUOTED_STRING_1 => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/336520	null	when new opinions article of washington post arrives send message to HASHTAG_0 via slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.slack . send ( channel = HASHTAG_0 , message = title ) ;
turking/336528	null	if i get an email with category = primary , from = QUOTED_STRING_0 , labels = QUOTED_STRING_1 and snippet contains the word QUOTED_STRING_2 then send me a direct message via twitter with the subject of the email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_1 ) && sender_name == QUOTED_STRING_0 && snippet =~ QUOTED_STRING_2 ) => @com.twitter . send_direct_message ( message = subject ) ;
turking/350621	null	post the picture with the tweet QUOTED_STRING_0 when i upload it to instagram only if the caption has QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_1 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/350623	null	when i upload a picture on instagram with the caption QUOTED_STRING_0 tweet that picture with the comment QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_0 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_1 , picture_url = picture_url ) ;
turking/350624	null	when i upload a new picture to instagram , tweet QUOTED_STRING_0 with the caption QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_1 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/350625	null	send a tweet saying , QUOTED_STRING_0 with an attached picture whenever i upload a new picture on instagram and caption it , QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption =~ QUOTED_STRING_1 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/350739	null	send an email to EMAIL_ADDRESS_0 with the subject of the summary from icalendar on gmail with the message QUOTED_STRING_0 when an event in my calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = summary , to = EMAIL_ADDRESS_0 ) ;
turking/350740	null	send an email to EMAIL_ADDRESS_0 with the subject containing QUOTED_STRING_0 as a keyword on gmail when an event in my calendar is going to start .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/350741	null	when an event in my calendar is about to begin then send an email to EMAIL_ADDRESS_0 with subject the summary from icalendar on gmail with message QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = summary , to = EMAIL_ADDRESS_0 ) ;
turking/350742	null	send a reminder to EMAIL_ADDRESS_0 on gmail with the subject QUOTED_STRING_0 before a calendar event .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/350763	null	if a new article is published in the powerpost blog of the washington post send an email to something with subject QUOTED_STRING_0 on gmail and include the article in the message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 ) ;
turking/350766	null	send by gmail with the subject being QUOTED_STRING_0 if a new article is published in the powerpost blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 ) ;
turking/350767	null	when a new article is published in the powerpost blog of the washington post send an email with subject QUOTED_STRING_0 on gmail with the link	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 ) ;
turking/350820	null	if an asteroid is close to earth , dangerous and going NUMBER_0 mph then tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == true && relative_velocity == NUMBER_0 mph => @com.twitter . post ( ) ;
turking/350824	null	if there 's a dangerous asteroid with NUMBER_0 mph velocity , make a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == true && relative_velocity == NUMBER_0 mph => @com.twitter . post ( ) ;
turking/350826	null	tweet something if asteroid has relative velocity NUMBER_0 mph and is dangerous	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == true && relative_velocity == NUMBER_0 mph => @com.twitter . post ( ) ;
turking/350929	null	share QUOTED_STRING_0 on linkedin for cloudy weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/350972	null	send a message on slack to HASHTAG_0 saying QUOTED_STRING_0 when the temperature is more than NUMBER_0 degrees and cloudy outside .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy && temperature >= NUMBER_0 F => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/350973	null	send a message on lack to HASHTAG_0 saying QUOTED_STRING_0 if the temperature is greater than NUMBER_0 f.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy && temperature >= NUMBER_0 F => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/350974	null	send a message on slack to HASHTAG_0 saying QUOTED_STRING_0 when it 's cloudy here and the temperature is greater than NUMBER_0 f	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy && temperature >= NUMBER_0 F => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/350975	null	say QUOTED_STRING_0 on slack to HASHTAG_0 if the temperature is above NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy && temperature >= NUMBER_0 F => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/350984	null	when something is posted on phd comics , send a picture to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 on gmail and message QUOTED_STRING_1 with picture url .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_picture ( message = QUOTED_STRING_1 , picture_url = picture_url , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/350985	null	when a pic is posted on phd comics send url via gmail to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 and message QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_picture ( message = QUOTED_STRING_1 , picture_url = picture_url , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/350988	null	send an e-mail to EMAIL_ADDRESS_0 with the subject line QUOTED_STRING_0 if an asteroid is NUMBER_0 cm or more away from the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter distance >= NUMBER_0 cm => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = name , to = EMAIL_ADDRESS_0 ) ;
turking/350989	null	send an email message QUOTED_STRING_0 to EMAIL_ADDRESS_0 with subject its name on gmail once asteroid is passing to earth above NUMBER_0 cm .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter distance >= NUMBER_0 cm => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = name , to = EMAIL_ADDRESS_0 ) ;
turking/350996	null	set the volume on my lg webos tv to the fog % of a place where it 's sleety and more than NUMBER_0 cloudy .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 && status == enum sleety => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = fog ) ;
turking/350997	null	change the volume on my lg webos tv to the percentage of fog when there is sleet and the level of cloudiness is more than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 && status == enum sleety => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = fog ) ;
turking/351023	null	send email on gmail with subject as QUOTED_STRING_0 when it 's sunny on some places .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sunny => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/351024	null	if its sunny send a message in gmail saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sunny => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/351056	null	when there 's a new article in the world section of the washington post , send a slack message QUOTED_STRING_0 to HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/351059	null	in the world section of the washington post is added post HASHTAG_0 saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/351060	null	send message to HASHTAG_0 on slack saying QUOTED_STRING_0 whenever the washington post world section is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.slack . send ( channel = HASHTAG_0 , message = QUOTED_STRING_0 ) ;
turking/351089	null	send a picture of nasa 's astronomy picture of the day with the title on slack when retrieved .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . apod ( ) ) => @com.slack . send_picture ( caption = title , picture_url = picture_url ) ;
turking/351177	null	when anyone i follow or tweets with the hashtag HASHTAG_0 , send them a email send them a email on gmail with the message QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/351178	null	if any twitter account i follow tweets or contains HASHTAG_0 then send gmail email with message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/351179	null	if a follower uses the hashtag HASHTAG_0 , send an email with the subject something on gmail and for the message use QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/351215	null	if a new article is published in the local section of the washington post then play the link on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/351217	null	play the link on my lg webos tv if a new article is published in the washington post local section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/351219	null	show the link on my tv of any new posts on the washington post 's local page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv . play_url ( url = link ) ;
turking/351229	null	share QUOTED_STRING_0 on my linkedin when it 's snowy in some places	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351230	null	when it 's snowing , share a post on linkedin saying , QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351231	null	anytime it snows where i am , share it on linkedin with the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351238	null	post the body of a new issue on github on tumblr with QUOTED_STRING_0 as the body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = body ) ;
turking/351239	null	set my presence on slack as away when the washington post publishes a new article in the business section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351240	null	new issues posted on github should be sent to my tumblr with the issue posted in the body , and QUOTED_STRING_0 as the subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = body ) ;
turking/351241	null	set my presence on slack to away when a new article is posted in the business section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351242	null	set my presence on slack to away if a new article is published in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351243	null	post the body of any new issues opened on github to my tumblr with QUOTED_STRING_0 added to it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = body ) ;
turking/351244	null	set my presence to away anytime a new article is published in the washington post 's business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351245	null	whenever new issues are opened on github , post the boys of the issue , along with QUOTED_STRING_0 on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = body ) ;
turking/351246	null	set my status on slack to away whenever a new article is published in the business section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351257	null	send an email via gmail with the message QUOTED_STRING_0 if someone i follow tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = text ) ;
turking/351259	null	send a gmail message with subject QUOTED_STRING_0 if someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = text ) ;
turking/351260	null	if you tweet about this story , send a gmail email with the title , QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = text ) ;
turking/351301	null	send the message QUOTED_STRING_0 to me on twitter when a video with the title of QUOTED_STRING_1 is uploaded to youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title == QUOTED_STRING_1 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/351303	null	post any videos uploaded on youtube with the title QUOTED_STRING_0 to twitter with the caption QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title == QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/351304	null	send new QUOTED_STRING_0 videos on youtube as a direct message on twitter with the message QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter title == QUOTED_STRING_0 ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_1 ) ;
turking/351318	null	turn on the tv if i get a post from rss with a title that includes QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @org.thingpedia.iot.tv . set_power ( power = enum on ) ;
turking/351319	null	when my rss feed has a post title containing , QUOTED_STRING_0 then turn on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/351321	null	if something posted on the rss feed has a title containing QUOTED_STRING_0 , turn on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/351338	null	set my presence on slack to away if a new article is published in the washington post capital weather gang blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351340	null	after each new article is published set my preference to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351341	null	set my presence on slack to away when an article in the capital weather gang blog of the washington post is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/351345	null	share QUOTED_STRING_0 on my linkedin account if it 's cloudy somewhere .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351348	null	share QUOTED_STRING_0 on linkedin when its cloudy	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum cloudy => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351361	null	reply QUOTED_STRING_0 when i receive an email in primary with the label QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_1 ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/351362	null	if i receive an email that is labeled as QUOTED_STRING_0 , say QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/351363	null	if i receive an email in the primary category that says QUOTED_STRING_0 , respond with QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/351364	null	if my email has the label QUOTED_STRING_0 say QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/351371	null	post QUOTED_STRING_0 QUOTED_STRING_1 for a new contact on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = QUOTED_STRING_1 ) ;
turking/351373	null	when there is a new commit on github , post QUOTED_STRING_0 with message QUOTED_STRING_1 to tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/351390	null	if anyone i follow tweets something , send a picture on slack to HASHTAG_0 with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , channel = HASHTAG_0 ) ;
turking/351392	null	send pic on slack to HASHTAG_0 with caption QUOTED_STRING_0 if anyone tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , channel = HASHTAG_0 ) ;
turking/351393	null	when a person i follow on twitter sends a tweet , then send a picture on the slack chat app to HASHTAG_0 and attach caption of QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , channel = HASHTAG_0 ) ;
turking/351394	null	if someone i follow on twitter tweets then send a picture to HASHTAG_0 on slack with the capture QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . send_picture ( caption = QUOTED_STRING_0 , channel = HASHTAG_0 ) ;
turking/351421	null	if it rains change my presence on slack to auto .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.slack . setPresence ( presence = enum auto ) ;
turking/351422	null	if its raining some place , make my slack presence auto	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.slack . setPresence ( presence = enum auto ) ;
turking/351424	null	send an email to my gmail account with the description as the subject line whenever a new milestone is created on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( subject = description ) ;
turking/351511	null	tweet QUOTED_STRING_0 when calendar event is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351512	null	tweet QUOTED_STRING_0 if event in my calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351514	null	when my calendar shows an event is about to start , tweet QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351515	null	tweet QUOTED_STRING_0 right before an event starts in my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351536	null	set slack presence to auto if i receive a gmail marked important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/351537	null	mute my lg webos tv when i receive an email on gmail marked as important and the subject is QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/351538	null	set my presence on slack to auto when i receive an email on gmail marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/351539	null	mute my lg webos tv when i get an important email on gmail with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/351540	null	set slack presence to auto when i get an important email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/351541	null	mute lg webos tv when i get an email with QUOTED_STRING_0 as subject on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/351542	null	set presence from slack to auto when i get an email marked as important on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/351543	null	mute my lg webos tv if i receive an important email on gmail with subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/351544	null	set my presence on slack to auto if i receive an important email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/351645	null	set volume to NUMBER_0 % on lg webos tv when a new email is received on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/351647	null	tweet QUOTED_STRING_0 when asteroids are passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351649	null	gmail emails set lg webos tv volume to NUMBER_0 % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/351651	null	tweet QUOTED_STRING_0 when an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351657	null	set my tv volume to NUMBER_0 % when i get an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/351661	null	set lg webos tv volume to NUMBER_0 $ when i get new mail via gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/351684	null	turn off my tv when i get a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum off ) ;
turking/351688	null	turn off lg webos tv if i get a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/351690	null	turn off lg webos tv when message is received on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/351692	null	turn off lg webos tv if message is received on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/351710	null	send a direct message to something saying QUOTED_STRING_0 when an asteroid is passing close to the earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/351713	null	send a direct message on twitter that says QUOTED_STRING_0 if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/351716	null	send direct message on twitter saying QUOTED_STRING_0 if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/351797	null	when something is posted to phd comics , turn on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/351811	null	tweet QUOTED_STRING_0 whenever i get an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351812	null	tweet QUOTED_STRING_0 if receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351813	null	tweet QUOTED_STRING_0 if you receive an email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351814	null	anytime i get a new gmail message tweet the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351815	null	tweet QUOTED_STRING_0 if a gmail email is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/351841	null	when a post reaches the front page on reddit , share it 's title on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/351842	null	when a post hits the front page on reddit share the title on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/351843	null	if a post reaches the front page on reddit , put its title on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/351845	null	share all posts from the front page of reddit on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/351846	null	if anything new gets put on youtube play it on my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv . play_url ( url = video_url ) ;
turking/351847	null	play all new uploaded you tube videos on my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv . play_url ( url = video_url ) ;
turking/351848	null	when a new video is uploaded on youtube , play it 's video url on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = video_url ) ;
turking/351849	null	play new youtube video uploads on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = video_url ) ;
turking/351850	null	play new youtube play videos on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = video_url ) ;
turking/351854	null	share items posted on this rss feed on my linkedin with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351857	null	if something is posted on the rss feed , share QUOTED_STRING_0 on my linkedin account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351860	null	anytime something is posted on the rss feed , go to my linkedin and share QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351863	null	share the message QUOTED_STRING_0 to my linkedin profile whenever something is put on my rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/351867	null	post QUOTED_STRING_0 on my facebook whenever an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/351869	null	post QUOTED_STRING_0 on facebook when asteroids are close to the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/351873	null	post QUOTED_STRING_0 on facebook if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/351876	null	upload tweets to facebook as pictures with the text as caption	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/351878	null	upload a picture of any tweets i follow on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/351884	null	if someone i follow tweets upload a picture on my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( ) ;
turking/351885	null	when a fact checker blog is published increase the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/351886	null	upload on facebook a picture with the caption of the tweet for the people i follow on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post_picture ( caption = text ) ;
turking/351887	null	increase volume of my speaker when a new article is published in the fact checker blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/351889	null	turn up the tv volume when a new article is published on the wapo fact checker blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/351910	null	cross post phd comics posts in a tumblr body	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/351911	null	post to my tumblr , the title of new posts to phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/351912	null	post anything from phd comics in my tumblr with the title .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/351913	null	send phd comics to my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/351914	null	post things for phd comics to my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/351983	null	when a new issue shows up on github send a slack message with the body value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.slack . send ( message = body ) ;
turking/351984	null	when an asteroid passes close to earth update the slack channel with the purpose and result .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . updateChannelPurpose ( purpose = $result ) ;
turking/351987	null	update the purpose of the slack channel with the result if an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . updateChannelPurpose ( purpose = $result ) ;
turking/351989	null	send a message on slack if a new issue is opened on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.slack . send ( message = body ) ;
turking/351990	null	update the purpose of slack channel if an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . updateChannelPurpose ( purpose = $result ) ;
turking/351992	null	when there is a new issue posted on github send a message on slack with it 's contents	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.slack . send ( message = body ) ;
turking/351995	null	if something is opened on github , send a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @com.slack . send ( message = body ) ;
turking/351996	null	if there 's an asteroid , update the purpose of slack channel .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . updateChannelPurpose ( purpose = $result ) ;
turking/352011	null	if an asteroid passed the earth send a message on slack saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/352016	null	when an asteroid is going to pass close to earth , send QUOTED_STRING_0 on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/352026	null	if an asteroid is passing close to earth then send a message on slack to something saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/352085	null	share QUOTED_STRING_0 on linkedin after slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352099	null	set my presence on slack to away anytime something is posted on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352100	null	anytime i receive an email marked as important on gmail and the subject contains QUOTED_STRING_0 , go to dropbox and create a new folder called something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject =~ QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/352102	null	set slack to away when new phd comic is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352105	null	set my slack presence to away if anything is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352106	null	create a new dropbox folder when i receive gmail marked important and subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject =~ QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/352109	null	if i receive an email marked important with subject containing QUOTED_STRING_0 via gmail , create a new folder on dropbox named something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject =~ QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/352111	null	set presence on slack to away if something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352112	null	if an email marked as important is received in gmail and the subject contains QUOTED_STRING_0 create a new folder in dropbox called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject =~ QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/352133	null	if a video is uploaded on youtube with url URL_0 , make a facebook post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter video_url == URL_0 ) => @com.facebook . post ( ) ;
turking/352135	null	post something on facebook if the url to a new video uploaded on youtube is URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter video_url == URL_0 ) => @com.facebook . post ( ) ;
turking/352139	null	whenever a new youtube video with the url URL_0 is uploaded , post it on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter video_url == URL_0 ) => @com.facebook . post ( ) ;
turking/352141	null	when a video url on youtube is URL_0 , upload a post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) filter video_url == URL_0 ) => @com.facebook . post ( ) ;
turking/352143	null	send phd comics to my gmail and make the subject the same as the title .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_email ( subject = title ) ;
turking/352145	null	if something is posted on phd comics send an email with subject as title on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_email ( subject = title ) ;
turking/352147	null	send an email when there are updates on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_email ( subject = title ) ;
turking/352153	null	share names of asteroids passing by earth on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/352156	null	share my name on linkedin when an asteroid comes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/352159	null	share the name of any asteroid that passes close to earth on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = name ) ;
turking/352182	null	if humidity value is less than NUMBER_0 , create a new folder in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.dropbox . create_new_folder ( ) ;
turking/352183	null	create a new folder in my dropbox if the humidity reported by my thermostat is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.dropbox . create_new_folder ( ) ;
turking/352184	null	if the humidity on my thermostat falls below NUMBER_0 then create a folder on my dropbox called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.dropbox . create_new_folder ( ) ;
turking/352185	null	add a new folder called something into my dropbox if the humidity on my thermostat drops below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.dropbox . create_new_folder ( ) ;
turking/352186	null	if the humidity measured by my thermostat changes and the value is less than NUMBER_0 , then create a new folder in my dropbox called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.dropbox . create_new_folder ( ) ;
turking/352217	null	turn off my lg webos tv if i receive a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/352219	null	turn off lg webos tv if direct message on twitter is received .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/352221	null	turn off my tv when i get a twitter dm	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum off ) ;
turking/352225	null	turn off lg webos tv when i receive twitter messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/352262	null	say QUOTED_STRING_0 if a new youtube video is uploaded .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/352264	null	say QUOTED_STRING_0 if a new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/352265	null	if a video is uploaded on youtube , say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/352266	null	say QUOTED_STRING_0 when a new video is uploaded to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/352277	null	share new videos on my linked in with the title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352279	null	when video is uploaded to youtube share QUOTED_STRING_0 on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352281	null	post new youtube videos to linkedin with title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352283	null	share new videos from youtube on linkedin using title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352312	null	make a google drive file when i upload a picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/352362	null	share posts that make the front page on reddit on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/352365	null	any of my posts that make it to the front page of reddit should have their title shared on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/352367	null	if a post makes the front page on reddit , share the title on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/352370	null	if an event in my calendar is about to begin share QUOTED_STRING_0 on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352376	null	if an event in my calendar is about to begin , share QUOTED_STRING_0 on my linkedin profile page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352379	null	on linkedin , share the phrase QUOTED_STRING_0 is there is an event in my calendar that is about to commence	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352382	null	post QUOTED_STRING_0 on linkedin when event on calendar is starting	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352411	null	send message to slack when new post is published in the sports section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . send ( ) ;
turking/352412	null	when imgflip meme templates contains QUOTED_STRING_0 post to tumblr body of message containing title of meme .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ; @com.tumblr.blog . post_text ( ) ;
turking/352413	null	send a message on slack to a specified location saying a specified thing , whenever a new article is published in the sports section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . send ( ) ;
turking/352414	null	list the available meme templates on imgflip , then if the name is QUOTED_STRING_0 , post something with a specified body to my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ; @com.tumblr.blog . post_text ( ) ;
turking/352415	null	send a message on slack when there is a new article in the sports section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . send ( ) ;
turking/352417	null	when the washington post adds a new article to the sports section send a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . send ( ) ;
turking/352418	null	list meme templates on imgflip when name is QUOTED_STRING_0 then post on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ; @com.tumblr.blog . post_text ( ) ;
turking/352481	null	change the topic of slack channel to any tweet from someone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = $result ) ;
turking/352484	null	update the the slack channel topic if any of my followers tweets something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = $result ) ;
turking/352493	null	if someone i follow tweets , update the topic to slack channel	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = $result ) ;
turking/352525	null	when i upload a new picture to instagram then upload that same picture on facebook with the same caption .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post_picture ( caption = caption ) ;
turking/352529	null	upload a picture on facebook with a caption from the message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/352531	null	if i receive a message on slack upload it as a post on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/352533	null	if i receive a message on slack , caption a picture with that message , and upload the picture to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/352537	null	if i receive a message on slack , upload a picture on facebook with the caption as its ' message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post_picture ( caption = message ) ;
turking/352549	null	set my presence on slack to away if i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352552	null	change status to away when receiving a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352555	null	set me slack presence to away when i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352561	null	set my presence on slack to away if i receive a direct message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/352568	null	if a post reaches the front page on reddit , share it on my linkedin and title it QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352571	null	if a post reaches reddit 's front page , share my QUOTED_STRING_0 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352577	null	share QUOTED_STRING_0 on linkedin if a reddit post reaches the front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/352593	null	auto set my presence on slack when a new picture is uploaded on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/352595	null	set my presence on slack to auto when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/352597	null	set my presence on slack to auto whenever i upload a pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/352638	null	comment on something in github with QUOTED_STRING_0 in the body message when checking if there is a new file or folder on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/352641	null	when a new file or folder is created on google drive , comment on the issue on github with body QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/352644	null	for every new file or folder on google drive comment on github with body QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/352647	null	check google drive for a new file or folder and comment on it with something from github that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/352650	null	if there 's a new file or folder on google drive , comment on issue some value in something on github , body reading QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/352796	null	post slack messages to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/352797	null	add something to my github account when i receive a message containing QUOTED_STRING_0 on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.github . add_email ( ) ;
turking/352799	null	if a message comes on slack , post it on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/352800	null	if i receive QUOTED_STRING_0 on slack , add to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.github . add_email ( ) ;
turking/352802	null	if i receive a message on slack post it on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/352803	null	if i receive a message QUOTED_STRING_0 . on slack the add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.github . add_email ( ) ;
turking/352805	null	post on facebook any messages i get from my slack post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = message ) ;
turking/352809	null	if i receive a message on slack that contains the phrase , QUOTED_STRING_0 , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.github . add_email ( ) ;
turking/352841	null	when a new video is uploaded on youtube , message me on slack with its channel title .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( message = channel_title ) ;
turking/352844	null	send new youtube videos to slack with the title of the video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( message = channel_title ) ;
turking/352847	null	if a new youtube video is uploaded , send a message to someone with their channel title .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.slack . send ( message = channel_title ) ;
turking/352856	null	if the temperature on my thermostat changes , send a message on slack to HASHTAG_0 saying anything .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/352858	null	send a slack message to HASHTAG_0 when the thermostat temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/352859	null	post QUOTED_STRING_0 on facebook when i receive direct messages on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/352860	null	send HASHTAG_0 on slack saying something if my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/352861	null	post QUOTED_STRING_0 on facebook if i receive a message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/352862	null	use slack to send a message to HASHTAG_0 , should the temperature on my thermostat dip , or rise .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.slack . send ( channel = HASHTAG_0 ) ;
turking/352863	null	post the message , QUOTED_STRING_0 on facebook , whenever i get a direct message on twitter post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/352927	null	if a new article is posted on the fact checker blog , decrease the volume pin my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/352929	null	if a new article is published tagged fact checker on washington post , turn the volume on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/352931	null	turn down the volume on my lg webos tv anytime a new article is published in the fact checker blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/352933	null	decrease the volume on my lg webos tv when a new article is published in the fact check blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/352935	null	decrease the volume on the tv when the washington post 's fact checker blog publishes a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/352984	null	unmute my lg webos tv whenever i upload a picture on instagram with the hashtag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/352986	null	unmute my lg webos tv whenever i upload a new picture on instagram with HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/352988	null	unmute my lg webos tv if i upload a new picture on instagram with hashtag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/352990	null	unmute my lg webos tv if i upload a new picture on instagram with the hashtag HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353003	null	share new message from slack on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/353008	null	share my slack messages on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/353011	null	share my new slack messages on my linkedin account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/353014	null	when i receive a message on slack also share it on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/353075	null	whenever i move from the room , turn off my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/353078	null	turn off my lg webos tv is i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/353081	null	turn off my lg tv when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/353084	null	turn off my lg webos tv when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/353087	null	turn off my lg webos tv if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/353140	null	play URL_0 on my tv if new file or folder is made in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/353151	null	when an email is received from gmail , post its subject on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.facebook . post ( status = subject ) ;
turking/353154	null	when an email is received via gmail post the subject on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.facebook . post ( status = subject ) ;
turking/353159	null	make a facebook post when i receive a gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.facebook . post ( status = subject ) ;
turking/353162	null	when i receive an email on gmail , post its subject on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.facebook . post ( status = subject ) ;
turking/353238	null	unmute my lg webos tv whenever a new issue is opened on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353239	null	if a new issue is opened on github , then unmute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353240	null	unmute my lg webos tv if a new issue is opened on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353241	null	if a new issue is started on github , turn on the sound on my webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/353246	null	add something to my github account when phd comics has a new post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.github . add_email ( ) ;
turking/353248	null	add something to my github account when something is posted to phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.github . add_email ( ) ;
turking/353253	null	unmute my lg webos tv if something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353254	null	unmute my lg webos tv when phd comics posts something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353255	null	unmute my lg webos tv when i get a post on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353256	null	unmute lg webos tv if something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353260	null	post something on facebook when something on the rss feed is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.facebook . post ( ) ;
turking/353266	null	post rss feed to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.facebook . post ( ) ;
turking/353269	null	when there 's a post on the rss feed , transfer it to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.facebook . post ( ) ;
turking/353272	null	anytime a new article posts publish it to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.facebook . post ( ) ;
turking/353320	null	post QUOTED_STRING_0 on tumblr when a new article is posted on the washington post post everything blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @com.tumblr.blog . post_text ( title = QUOTED_STRING_0 ) ;
turking/353321	null	whenever the the washington post updates their post everything blog with a new article , post a message with subject line QUOTED_STRING_0 in my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @com.tumblr.blog . post_text ( title = QUOTED_STRING_0 ) ;
turking/353322	null	post titles of new articles from the washington post 's wonk blog blog to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.facebook . post ( status = title ) ;
turking/353323	null	post the titles of all washington post wonk blog articles to facebook as they come out	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.facebook . post ( status = title ) ;
turking/353324	null	post the title of any new article published in the washington post 's wonk blog on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.facebook . post ( status = title ) ;
turking/353325	null	post the titles of new articles on the washington post 's wonk blog to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.facebook . post ( status = title ) ;
turking/353339	null	unmute my lg webos tv if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353342	null	unmute my lg webos tv if asteroid with relative velocity of NUMBER_0 mph is passing close to earth containing message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter name =~ QUOTED_STRING_0 && relative_velocity >= NUMBER_0 mph => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/353390	null	email new washington post opinion articles to gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( message = title ) ;
turking/353392	null	send new opinions articles from the washington post to my gmail with the titles as the subjects .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( message = title ) ;
turking/353396	null	when there 's a new article in washington post tagged opinions , send an email to something with subject something on gmail with body being the title of that article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( message = title ) ;
turking/353410	null	send an email remember with subject QUOTED_STRING_0 on gmail with the message being organizer from icalendar when an even is about to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( message = organizer , subject = QUOTED_STRING_0 ) ;
turking/353412	null	from icalendar , send a message on gmail with subject QUOTED_STRING_0 if an event in calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( message = organizer , subject = QUOTED_STRING_0 ) ;
turking/353416	null	send an email to my gmail account with the subject QUOTED_STRING_0 and the message the organizer from icalendar when a calendar event is going to commence	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.gmail . send_email ( message = organizer , subject = QUOTED_STRING_0 ) ;
turking/353422	null	if an article has QUOTED_STRING_0 in the opinions section of the washington post then mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) filter description =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/353425	null	mute my lg tv if a new article is published in the opinions section of the washington post with a description containing QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) filter description =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/353426	null	mute my lg webos tv if a new article is published in the washington post opinions section and it contains the description QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) filter description =~ QUOTED_STRING_0 ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/353448	null	post QUOTED_STRING_0 on my tumblr when an event in my calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = summary ) ;
turking/353454	null	if make a post QUOTED_STRING_0 with subject QUOTED_STRING_1 on tumblr the get my recent instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . home ; @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/353455	null	if i am at home , open my instagram pictures and post QUOTED_STRING_0 with the message QUOTED_STRING_1 on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . home ; @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/353457	null	post QUOTED_STRING_0 with body as QUOTED_STRING_1 on tumblr if recent instagram pics have home as the location	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.instagram . get_pictures ( ) filter location == $location . home ; @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/353525	null	say QUOTED_STRING_0 when a new washington post politics blog article titled QUOTED_STRING_1 is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) filter title == QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/353526	null	say QUOTED_STRING_0 when a new article with the title QUOTED_STRING_1 is published in the politics blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) filter title == QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/353527	null	if a new article named QUOTED_STRING_0 is published in the washington post politics blog , then say QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) filter title == QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/353528	null	whenever the washington post posts a new article in their politics blog with the title QUOTED_STRING_0 , say QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum politics ) filter title == QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/353540	null	post QUOTED_STRING_0 in my tumblr if something is posted on the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353541	null	if a post reaches the front page on reddit , post the category from reddit on my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.tumblr.blog . post_text ( body = category ) ;
turking/353542	null	post on my tumblr when something is posted on the rss feed , containing the title and QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353544	null	when something is posted on rss feed , post it on tumblr with title QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353546	null	post title of rss feed body as QUOTED_STRING_0 on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353548	null	post the title of new posts on my rss feed with body QUOTED_STRING_0 in my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353549	null	post the category of a post that reaches the reddit front page with its category value as the body on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.tumblr.blog . post_text ( body = category ) ;
turking/353550	null	if humidity changes on the thermostat then post QUOTED_STRING_0 on tumbler .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = $result ) ;
turking/353551	null	when the humidity reported by my thermostat changes then post the result with body QUOTED_STRING_0 on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = $result ) ;
turking/353553	null	post QUOTED_STRING_0 in my tumblr when the humidity reported by my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = $result ) ;
turking/353554	null	post the humidity change with my body QUOTED_STRING_0 on tumble	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = $result ) ;
turking/353591	null	when new article is published in technology section of the wall street journal then post its title with body in my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/353595	null	post title of new wall street journal article in the technology section in my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.tumblr.blog . post_text ( body = title ) ;
turking/353631	null	when a new article is posted in the lifestyle section of the wall street journal , post on my tumblr the title along with the words QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353634	null	post new articles in the lifestyle section of the wall street journal in my tumblr , titled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/353653	null	mute my lg webos tv when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/353654	null	mute lg webos tv when i receive a message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/353655	null	mute my lg webos tv if i receive a slack message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/353657	null	mute the tv when a message is received on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/353677	null	when something is posted on phd comics , lower the volume on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/353678	null	when phd comics posts then decrease the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/353679	null	turn down the sound on my tv when something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/353680	null	lower volume on lg webos tv when posts occur on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/353681	null	when something is posted on phd comics , lower the volume on my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/353682	null	follow something on twitter if something from my calendar is going to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . follow ( ) ;
turking/353684	null	when i follow something on twitter create a calendar event	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . follow ( ) ;
turking/353686	null	follow something on twitter when an event in my calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . follow ( ) ;
turking/353688	null	follow on twitter if an event on my calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . follow ( ) ;
turking/353690	null	follow something on twitter if an event in my calendar is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.twitter . follow ( ) ;
turking/353712	null	when a new lifestyle article posts on the wall street journal save it to my dropbox in a new folder .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353713	null	create a new folder called something in dropbox if a new article is published in the lifestyle section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353715	null	create a folder named something in my dropbox when a new article is released in the wall street journal 's lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353722	null	when a new file gets created on google drive post a message on my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( ) ;
turking/353724	null	post on facebook if a new folder or file is created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( ) ;
turking/353763	null	create a new folder called something in dropbox when the thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353765	null	if the temperature on my thermostat changes then create a new folder called something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353767	null	create a new folder in my dropbox if the temperature changes on my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353771	null	create a new folder in dropbox when the thermostat temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/353791	null	when checking for a new google drive file or folder , add something to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . add_email ( ) ;
turking/353792	null	if a new file gets created on google drive , post on my github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . add_email ( ) ;
turking/353793	null	if there is a new file or folder created on google drive , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . add_email ( ) ;
turking/353794	null	notify me on github when there is a new file or folder create on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . add_email ( ) ;
turking/353795	null	add something to github if there is a folder on google	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.github . add_email ( ) ;
turking/353801	null	increase the volume on my lg webos tv when i receive a primary email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/353802	null	new primary folder emails increase the volume on lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/353803	null	turn up the volume on my tv when i receive an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/353804	null	increase the volume on my lg webos tv when i receive an email in a primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/353806	null	share something on my linkedin if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( ) ;
turking/353808	null	if i move , share something on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( ) ;
turking/353810	null	share something on my linkedin if i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( ) ;
turking/353812	null	share on my linkedin if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.linkedin . share ( ) ;
turking/353841	null	whenever any event in my calendar is about to start , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.github . add_email ( ) ;
turking/353843	null	add something to github account prior to an event beginning .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.github . add_email ( ) ;
turking/353849	null	add something to my github account when an event in my calendar starts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.github . add_email ( ) ;
turking/353851	null	create a file on google drive when the humidity recorded on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/353852	null	send thermostat changes to google drive under file named something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/353861	null	make a google drive file when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/353863	null	when i move create a file named something on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/353864	null	when i move , create a file on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/353885	null	when checking to see if there is a newly created file / folder on my google drive , share it on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( ) ;
turking/353907	null	if i receive a message on slack , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.github . add_email ( ) ;
turking/353946	null	follow on twitter whenever a new file or folder is created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.twitter . follow ( ) ;
turking/353949	null	follow something on twitter if there is a new file or folder created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.twitter . follow ( ) ;
turking/353960	null	play something on my lg webos tv is i receive an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/353961	null	play my lg webos tv if i receive an email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/353962	null	if i receive an email in the primary category then play something on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/353963	null	play something on lg webos when i get a primary email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.iot.tv . play_url ( ) ;
turking/353964	null	play my lg webos tv when i receive an email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/353971	null	when a post reaches the front page of reddit , increase the volume on the lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/353973	null	turn volume up on lg tv when a post reaches the reddit front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/353977	null	when a post reaches the front page of reddit , increase the volume on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/354040	null	if my thermostat shows a humidity change , play something on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/354052	null	when my thermostat shows a change in humidity , play something on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/354142	null	mute my lg webos tv when something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354145	null	mute my lg webos tv when something is posted on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354148	null	mute my lg webos tv when something from phd comics is on .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354180	null	send my posts from rss feed to the github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/354181	null	add posts from my rss feed to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/354182	null	when there is a new post on my rss feed send a message to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/354199	null	add something to my github account if a new article is published in the technology section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.github . add_email ( ) ;
turking/354200	null	add something to github when an article is published the the wall street journal technology section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.github . add_email ( ) ;
turking/354201	null	add something to github when new the wall street journal technology article is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.github . add_email ( ) ;
turking/354202	null	when an article appears in the technology section of the wall street journal then add anything to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.github . add_email ( ) ;
turking/354204	null	if the temperature changes then email me something to my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/354207	null	if my thermostat changes , please send me an email to my gmail account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/354208	null	send email with gmail to something with subject something when thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( ) ;
turking/354215	null	post QUOTED_STRING_0 in my tumblr with QUOTED_STRING_1 in body if new video is uploaded on a youtube post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/354217	null	open tumblr and post QUOTED_STRING_0 with QUOTED_STRING_1 for the body if a new youtube video is uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/354219	null	when i post a new video to my youtube channel post to tumblr a post called QUOTED_STRING_0 with QUOTED_STRING_1 for the body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/354221	null	post on new videos uploaded to youtube in my tumblr with QUOTED_STRING_0 in the subject line and QUOTED_STRING_1 in the body	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/354349	null	when an asteroid is passing close to earth then post the name and information and nasa on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = $result , title = name ) ;
turking/354350	null	when an asteroid is passing close to earth , create a tumblr post with the name of the orbiting body from nasa	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = orbiting_body ) ;
turking/354351	null	when an asteroid is passing close to earth , then post the name of it from nasa on my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = name ) ;
turking/354352	null	post the names of asteroids passing close to earth from nasa on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = name ) ;
turking/354453	null	post QUOTED_STRING_0 on twitter when there 's a new us business section article in the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/354455	null	send me a direct message on twitter saying QUOTED_STRING_0 when a new article is published in the GENERIC_ENTITY_tt:country_0 business section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/354457	null	send direct message saying QUOTED_STRING_0 whenever wall street journal us business section has a new story .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/354459	null	send a direct message on twitter that says QUOTED_STRING_0 when a new article is published in the GENERIC_ENTITY_tt:country_0 business section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/354461	null	when a new article is posted on wall street journal tagged us business , send a message on twitter to something saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/354695	null	set the volume on my speakers to NUMBER_0 % whenever i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/354696	null	if i get a new slack message turn my volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/354699	null	when i get a message on slack , set my speaker volume to NUMBER_0 % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/354726	null	increase the speaker volume when the asteroid QUOTED_STRING_0 passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter name == QUOTED_STRING_0 => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354844	null	decrease the volume on my speaker anytime a new file or folder is created on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354846	null	lower volume when new files or folders are created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354847	null	if there is a new file / folder created on google drive , decrease the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354848	null	decrease the volume on my speaker if a new file folder is created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354883	null	turn down the volume when i post a picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354885	null	decrease my speaker volume when i upload a picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354886	null	when i post a new pic on instagram , turn my speaker down .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354887	null	if instagram photo is uploaded , turn down the volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354923	null	if the opinions section has a new article , increase the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354924	null	when a new article is published in the opinions section turn up the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354925	null	increase my speaker 's volume if a new article is published in the opinion section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354926	null	increase speaker volume when new article is published in the opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354928	null	mute tv if there is a new technology article in wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/354929	null	mute my lg webos tv when new articles are published in the technology section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354930	null	when a new article is published in the technology section of the wall street journal , i will mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354931	null	mute my lg webos tv when a new article is published in the wall street journal 's technology section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354932	null	when new article in technology section of the wall street journal is posted mute lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/354953	null	whenever a new article is published in the world news section of the wall street journal , decrease the volume of my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354955	null	notify me of a new world news article in the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/354964	null	increase the volume on my speaker if a post reaches the reddit front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354965	null	increase my volume on my speaker when a post reaches the front page on reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354966	null	maximize my speaker volume when my post on reddit reaches the front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354967	null	turn up the volume on my speaker if a post hits reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354974	null	when a new file or folder on google drive is created set the volume on my speaker to % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/354975	null	if there is a new file or folder created on google drive then set the speaker to a specific volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/354976	null	set the volume , and check if there is a new file on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355003	null	decrease the volume on my speaker if there is a new commit on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355004	null	if there is a new commit on github decrease the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355005	null	turn down my speaker volume if github has a new commit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355006	null	decrease volume if there is a new commit on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355078	null	if a new article is published in the GENERIC_ENTITY_tt:country_0 business section of the wall street journal , set the volume on my speaker to NUMBER_0 percent	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/355079	null	if a new article is published in the GENERIC_ENTITY_tt:country_0 business section of the wall street journal , set the volume of my speaker to NUMBER_0 % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/355080	null	if a new business article is posted in the wall street journal set the volume on my speakers to NUMBER_0 % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/355081	null	adjust my speaker volume to a certain % when an article is released in the wall street journal 's us business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355082	null	set speaker volume to some value % when the wall street journal adds an article to the GENERIC_ENTITY_tt:country_0 business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355132	null	when i upload a new picture on instagram , the volume on my speaker increases .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355133	null	increase volume on my speaker when new picture is uploaded on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355134	null	increase the volume on my speaker if i upload a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355140	null	if a new file or folder is created on google drive , set the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355142	null	when a new file or folder is created on google drive change the volume to some value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355144	null	turn the volume down and check for new files on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355195	null	raise speaker volume when a calendar event is about to start .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355196	null	if an event on my calendar begins , increase speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355197	null	if a calendar event is about to begin , increase the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355198	null	if an event in my calendar is about to start , increase my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355200	null	make my speaker volume value % when a new youtube video is uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355201	null	adjust the volume on my speaker to a new percentage if a new video is uploaded on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355203	null	change my volume to NUMBER_0 % if a new video shows up on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/355204	null	whenever a new video is uploaded on youtube , change my volume to a certain %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355205	null	when a new calendar event starts turn off my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355207	null	decrease speaker volume before a calendar event begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355209	null	calendar events decrease speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355235	null	when something is posted in phd comics then decrease my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355238	null	turn my volume down when phd comics posts something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355239	null	decrease speaker volume when something is posted on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/355240	null	set my volume to NUMBER_0 % if my post reaches the front page of reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/355241	null	when a post reaches the front page of reddit , set my speaker volume to a random value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355242	null	set my speakers to NUMBER_0 % if a post reaches the front page on reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/355243	null	set my volume on my speaker to some value % if a post reaches the reddit front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/355400	null	if my post reaches the front page on reddit , send me a gmail at something with subject something and message category from reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.gmail . send_email ( message = category ) ;
turking/355402	null	if reddit post makes front page send email with subject using gmail with the message as the reddit category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.gmail . send_email ( message = category ) ;
turking/355404	null	send an email to something with a subject of something on gmail when a reddit post reaches front page with a message of the category from reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.gmail . send_email ( message = category ) ;
turking/355406	null	if a post reached the front page on reddit send an email with that category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.gmail . send_email ( message = category ) ;
turking/355456	null	if i get an email on gmail with subject QUOTED_STRING_0 then create a file on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject == QUOTED_STRING_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/355459	null	create file on google drive when email is received with important mark and subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject == QUOTED_STRING_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/355464	null	create a file on google drive when i get an important email with a subject of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter subject == QUOTED_STRING_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/355569	null	if a new article publishes on weather blog of the post and title is QUOTED_STRING_0 comment on issue NUMBER_0 in something on github and body is it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) filter title == QUOTED_STRING_0 ) => @com.github . comment_issue ( body = $result , issue_number = NUMBER_0 ) ;
turking/355572	null	if washington post publishes a new article in the capital weather gang blog and the title is QUOTED_STRING_0 comment on issue NUMBER_0 of something on github and the body is it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) filter title == QUOTED_STRING_0 ) => @com.github . comment_issue ( body = $result , issue_number = NUMBER_0 ) ;
turking/355578	null	when the washington post upload new article in capital weather gang blog with QUOTED_STRING_0 title comment on issue NUMBER_0 on github with the body	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) filter title == QUOTED_STRING_0 ) => @com.github . comment_issue ( body = $result , issue_number = NUMBER_0 ) ;
turking/355581	null	if a new article is posted in washington post blog comment on the issue on github with the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/355583	null	update the purpose of the slack channel to QUOTED_STRING_0 if an asteroid passes close to earth and its estimated diameter is less than NUMBER_0 cm .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max <= NUMBER_0 cm && is_dangerous == true => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/355588	null	update slack to QUOTED_STRING_0 when an asteroid is close	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/355590	null	if an asteroid is passing dangerously close to earth and dangerous is set to yes and estimated diameter max is less than NUMBER_0 cm update the slack channel to say QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max <= NUMBER_0 cm && is_dangerous == true => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/355598	null	when humidity changes create a file on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/355602	null	create file using google drive when humidity on thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/355606	null	change the purpose of slack channel to QUOTED_STRING_0 whenever a new article publishes in the opinions section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/355608	null	update the purpose of slack channel something to QUOTED_STRING_0 if new article is published in opinions section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/355610	null	if a new article is publish in the opinions section then update the purpose of slack channel to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/355618	null	share my calendar events on my linkedin when they are about to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = organizer ) ;
turking/355621	null	share event manager on my linkedin for upcoming events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = organizer ) ;
turking/355624	null	share events on linkedin from my calendar when they are about to start .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = organizer ) ;
turking/355627	null	on my linkedin share the organizer of the new event from calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = organizer ) ;
turking/355631	null	in linkedin , share QUOTED_STRING_0 from my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/355636	null	send me a linkedin in message , QUOTED_STRING_0 , when calendar events are about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/355639	null	when an event in my calendar is about to start post QUOTED_STRING_0 on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/355642	null	if an event is about to begin , post QUOTED_STRING_0 on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/355743	null	set my presence on slack to away when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/355747	null	if i move , set my presence to slack as away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/355755	null	set slack to away if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/355782	null	follow something on twitter when a new article is published in the technology section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.twitter . follow ( ) ;
turking/355786	null	follow on twitter when a new technology article is posted on the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.twitter . follow ( ) ;
turking/355788	null	if a new article is published in the technology section of the wall street journal , follow the author on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.twitter . follow ( ) ;
turking/355790	null	follow something on twitter for new wsj tech article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.twitter . follow ( ) ;
turking/355888	null	share my linkedin when the the wall street journal publishes a new article in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.linkedin . share ( status = title ) ;
turking/355896	null	if a new article is published in wall street journal tagged lifestyle , post the title of the article on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.linkedin . share ( status = title ) ;
turking/355904	null	share new articles published in lifestyle section of the wall street journal to my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.linkedin . share ( status = title ) ;
turking/355941	null	if something is posted on the rss feed share the title on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( status = title ) ;
turking/355947	null	if i post something to an rss feed , share its title on my linkedin page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( status = title ) ;
turking/356014	null	update the topic of my slack channel from the previous reading to the new reading when the humidity measured on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/356015	null	change slack channel to something for humidity update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/356017	null	if the humidity changes , change my slack theme from black to blue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/356026	null	if a post titled QUOTED_STRING_0 is on the front page of reddit create a new folder in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter title == QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/356029	null	create dropbox file for QUOTED_STRING_0 posts on the front page of reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter title == QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/356032	null	if a post with the title QUOTED_STRING_0 is on the front page of reddit , create a new folder called something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter title == QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/356035	null	when an event in my calendar is about to begin and the location contains QUOTED_STRING_0 then please send an email to something with the subject QUOTED_STRING_1 on gmail , with the message QUOTED_STRING_2 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ) filter status == enum started => @com.gmail . send_email ( message = QUOTED_STRING_2 , subject = QUOTED_STRING_1 ) ;
turking/356037	null	send a email on gmail with the subject QUOTED_STRING_0 and message QUOTED_STRING_1 when an event in my calendar is about to begin with the location QUOTED_STRING_2 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_2 ) filter status == enum started => @com.gmail . send_email ( message = QUOTED_STRING_1 , subject = QUOTED_STRING_0 ) ;
turking/356043	null	at the start of calendar events marked QUOTED_STRING_0 , send an email with subject QUOTED_STRING_1 and body QUOTED_STRING_2 to something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location =~ QUOTED_STRING_0 ) filter status == enum started => @com.gmail . send_email ( message = QUOTED_STRING_2 , subject = QUOTED_STRING_1 ) ;
turking/356044	null	when a new video is uploaded to youtube , post the channel title on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = channel_title ) ;
turking/356047	null	when a new video is uploaded on youtube , share the channel title on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = channel_title ) ;
turking/356052	null	share new youtube videos on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = channel_title ) ;
turking/356055	null	anytime a new video is uploaded on youtube share the channel title on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.linkedin . share ( status = channel_title ) ;
turking/356104	null	if i get a gmail containing QUOTED_STRING_0 add the address to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter snippet =~ QUOTED_STRING_0 ) => @com.github . add_email ( email = sender_address ) ;
turking/356109	null	send slack message saying QUOTED_STRING_0 when reddit post makes front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/356111	null	send a message on slack saying QUOTED_STRING_0 if a post reaches the front page on reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/356112	null	when i get an gmail that contains QUOTED_STRING_0 add the address to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter snippet =~ QUOTED_STRING_0 ) => @com.github . add_email ( email = sender_address ) ;
turking/356114	null	send QUOTED_STRING_0 on slack when a post reaches the front page on reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/356115	null	if an email contains the phrase QUOTED_STRING_0 add the sender 's email address to github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter snippet =~ QUOTED_STRING_0 ) => @com.github . add_email ( email = sender_address ) ;
turking/356117	null	for every post that reaches the reddit front page , send a slack message with the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . send ( message = QUOTED_STRING_0 ) ;
turking/356132	null	reply to QUOTED_STRING_0 primary emails with QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter snippet =~ QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/356136	null	when i get an email from my primary category that contains QUOTED_STRING_0 reply with QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter snippet =~ QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/356140	null	when i receive in email in the primary category with a snippet containing QUOTED_STRING_0 , then say QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter snippet =~ QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/356144	null	say QUOTED_STRING_0 when primary emails are received that contain snippet QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter snippet =~ QUOTED_STRING_1 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/356147	null	respond with QUOTED_STRING_0 to any email snippet that contains QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter snippet =~ QUOTED_STRING_1 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/356229	null	if something is put up on phd comics , send an email to something with the subject QUOTED_STRING_0 on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_email ( message = title , subject = QUOTED_STRING_0 ) ;
turking/356237	null	send me an email with the subject , QUOTED_STRING_0 , if something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_email ( message = title , subject = QUOTED_STRING_0 ) ;
turking/356241	null	when something is posted on phd comics , send an email to someone with the subject of QUOTED_STRING_0 on gmail ,	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.gmail . send_email ( message = title , subject = QUOTED_STRING_0 ) ;
turking/356250	null	when something is posted on the rss feed then update my slack channel to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/356253	null	update my slack channel to QUOTED_STRING_0 when something is posted on my rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/356260	null	update the purpose of my slack channel when my rss feed updates and make the purpose QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . updateChannelPurpose ( purpose = QUOTED_STRING_0 ) ;
turking/356262	null	unfollow something on twitter if an event by QUOTED_STRING_0 is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.twitter . unfollow ( ) ;
turking/356270	null	update slack channel purpose when someone i follow tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelPurpose ( purpose = text ) ;
turking/356274	null	send a picture on gmail if a new sports article is published on the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.gmail . send_picture ( ) ;
turking/356276	null	when anyone i follow tweets update the purpose of slack channel something to the text .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelPurpose ( purpose = text ) ;
turking/356277	null	send picture to something on gmail with subject article title and message article description when new article is published in the washington post sports section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.gmail . send_picture ( message = description , subject = title ) ;
turking/356290	null	whenever a new file or folder is created on google drive , send me an email via gmail saying QUOTED_STRING_0 with the subject QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , subject = QUOTED_STRING_1 ) ;
turking/356320	null	whenever a receive a message on slack direct message the sender on twitter , letting them know the message value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = sender ) ;
turking/356321	null	add to my github account just before an event in my calendar is about to begin , if the sequence of the event is over NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter sequence >= NUMBER_0 ) filter status == enum started => @com.github . add_email ( ) ;
turking/356324	null	send dm on twitter to the from saying message value when i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = sender ) ;
turking/356325	null	if event is about to start and sequence is above NUMBER_0 add something to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter sequence >= NUMBER_0 ) filter status == enum started => @com.github . add_email ( ) ;
turking/356328	null	send a direct message on twitter to the sender saying it 's message value when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = message , to = sender ) ;
turking/356329	null	if an event in my calendar is about to begin and the sequence is above NUMBER_0 , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter sequence >= NUMBER_0 ) filter status == enum started => @com.github . add_email ( ) ;
turking/356336	null	when i receive a message on slack send a direct message on twitter with that information .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.twitter . send_direct_message ( message = $result ) ;
turking/356337	null	if there is an event in my calendar that is beginning and the sequence is about NUMBER_0 add that information to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter sequence >= NUMBER_0 ) filter status == enum started => @com.github . add_email ( ) ;
turking/356342	null	when an asteroid is passing close to earth , send me an email via gmail with the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/356350	null	send an email on gmail to something with subject QUOTED_STRING_0 when an asteroid is close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/356354	null	send an email to something with the subject QUOTED_STRING_0 on gmail whenever an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/356358	null	when an asteroid passes close to earth , send an email with the subject QUOTED_STRING_0 to something on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( subject = QUOTED_STRING_0 ) ;
turking/356361	null	if i upload a new picture on instagram from home , create a new name and file for it on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.google.drive . create_new_drive_file ( ) ;
turking/356363	null	make google drive file for instagram posts located at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.google.drive . create_new_drive_file ( ) ;
turking/356365	null	if i post a new instagram while the location is set to home create a new file on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.google.drive . create_new_drive_file ( ) ;
turking/356367	null	when i upload a new picture on instagram change the file name of the home file to a google drive name .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.google.drive . create_new_drive_file ( ) ;
turking/356369	null	whenever i upload a new photo to instagram and the gps location is home , create a file with name something on my google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter location == $location . home ) => @com.google.drive . create_new_drive_file ( ) ;
turking/356547	null	add email to github if an asteroid is passing close to earth , it 's orbiting body is QUOTED_STRING_0 , and it 's estimated diameter is greater than NUMBER_0 m.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_min >= NUMBER_0 m && is_dangerous == false && orbiting_body == QUOTED_STRING_0 => @com.github . add_email ( ) ;
turking/356548	null	if asteroid named QUOTED_STRING_0 with max diameter of NUMBER_0 m is passing close to earth further than NUMBER_1 m away , post something to tumblr with body the orbiting body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter distance <= NUMBER_0 m && estimated_diameter_max == NUMBER_1 m && is_dangerous == true && name == QUOTED_STRING_0 => @com.tumblr.blog . post_text ( body = orbiting_body ) ;
turking/356562	null	if there is a new file or folder created on google drive then post something on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( ) ;
turking/356568	null	if there is a new file or folder in my google drive then post a message on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( ) ;
turking/356592	null	if something posted on the rss feed has QUOTED_STRING_0 in the title , post the picture with the caption on my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.tumblr.blog . post_picture ( caption = title ) ;
turking/356595	null	when something new is posted on rss feed entitled QUOTED_STRING_0 post a pic with caption on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.tumblr.blog . post_picture ( caption = title ) ;
turking/356598	null	when a post titled QUOTED_STRING_0 is posted on the rss feed , post a picture with a caption on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.tumblr.blog . post_picture ( caption = title ) ;
turking/356604	null	post QUOTED_STRING_0 rss posts to my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.tumblr.blog . post_text ( title = title ) ;
turking/356609	null	make a note of the weather in my github anytime the temperature outside is below NUMBER_0 degrees fahrenheit and it is sleeting outside .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety && temperature <= NUMBER_0 F => @com.github . comment_issue ( body = $result ) ;
turking/356612	null	when the temperature is less than NUMBER_0 f then comment on issue NUMBER_1 on the weatherapi on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter temperature <= NUMBER_0 F => @com.github . comment_issue ( issue_number = NUMBER_1 ) ;
turking/356618	null	when temperature is colder than NUMBER_0 f and it is sleety , comment on issue NUMBER_1 in the weather from from weatherapi on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety && temperature <= NUMBER_0 F => @com.github . comment_issue ( issue_number = NUMBER_1 ) ;
turking/356621	null	comment on issue NUMBER_0 on github when it 's colder than NUMBER_1 f and sleety .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety && temperature <= NUMBER_1 F => @com.github . comment_issue ( issue_number = NUMBER_0 ) ;
turking/356642	null	if something titled QUOTED_STRING_0 is posted on the rss feed , rename to something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title == QUOTED_STRING_0 ) => @com.dropbox . move ( ) ;
turking/356645	null	when something is posted on the rss feed titled QUOTED_STRING_0 , rename something to something in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title == QUOTED_STRING_0 ) => @com.dropbox . move ( ) ;
turking/356646	null	if i receive an email with the category primary and the date of DATE_0 , set my slack presence to auto	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter date == DATE_0 ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/356652	null	set my presence from slack to auto when i receive a primary email on DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) filter date == DATE_0 ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/356671	null	mute my lg webos tv if the humidity changes according to my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/356675	null	when my thermostat reports a change in humidity then mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/356679	null	if my thermostat detects a change in humidity , mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/356683	null	if the humidity changes , mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/356764	null	share QUOTED_STRING_0 on linkedin if a post in the QUOTED_STRING_1 category reaches the front page of reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter category =~ QUOTED_STRING_0 ) => @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/356773	null	if post on front page of reddit contains QUOTED_STRING_0 share QUOTED_STRING_1 to linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter category =~ QUOTED_STRING_0 ) => @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/356779	null	unmute my lg webos tv when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/356784	null	if i move around , unmute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/356789	null	mute my tv until i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/356829	null	if an asteroid is passing close to earth and is dangerous , update the purpose of slack channel to something to its orbiting body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == true => @com.slack . updateChannelPurpose ( purpose = orbiting_body ) ;
turking/356838	null	if a dangerous asteroid passes close to earth , update the purpose of slack channel something to the name of the asteroid .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == true => @com.slack . updateChannelPurpose ( purpose = orbiting_body ) ;
turking/356931	null	create new folder called something in dropbox if the washington post publishes new articles in work blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.dropbox . create_new_folder ( ) ;
turking/356941	null	if a new article is published in the blog of the washington post , create a new folder in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.dropbox . create_new_folder ( ) ;
turking/357015	null	if an event in my calendar is about to begin and the summary is QUOTED_STRING_0 , post QUOTED_STRING_1 with body as its description on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter summary == QUOTED_STRING_0 ) filter status == enum started => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_1 ) ;
turking/357020	null	if my calendar has an event starting soon and the summary says QUOTED_STRING_0 the post QUOTED_STRING_1 as the body in my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter summary == QUOTED_STRING_0 ) filter status == enum started => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_1 ) ;
turking/357028	null	if summary is QUOTED_STRING_0 on a event in my calendar and it is starting post QUOTED_STRING_1 on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter summary == QUOTED_STRING_0 ) filter status == enum started => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_1 ) ;
turking/357075	null	monitor the wall street journal 's technology section and if you find any articles titles QUOTED_STRING_0 create a new folder for them in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) filter title == QUOTED_STRING_0 ) => @com.dropbox . create_new_folder ( ) ;
turking/357115	null	when something is about to begin in my calendar , turn off my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.iot.tv . set_power ( power = enum off ) ;
turking/357130	null	when i have an event in my calendar that is close to starting and the ending date is DATE_0 please turn off my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ) filter status == enum started => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/357135	null	when an event in my calendar is about to begin and it 's end date is DATE_0 then turn off my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter end_date == DATE_0 ) filter status == enum started => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/357162	null	set lg webos tv volume to NUMBER_0 % if anyone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/357167	null	when a person i 'm following tweets , put the volume on lg webos tv to NUMBER_0 % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/357170	null	set the volume on my tv to NUMBER_0 % if anyone i follow tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/357174	null	set the volume of my tv to NUMBER_0 % if i follow tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/357337	null	say QUOTED_STRING_0 if a new article is published in the capital weather gang blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/357346	null	when a new article is published in capital , weather gang blog of post , then say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/357350	null	when a new article tagged capital weather gang on the washington post is published , say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/357354	null	whenever a new article is published in the capital weather gang blog of the washington post , say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/357383	null	when messages are received on slack share it on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/357390	null	if i receive a message on my slack , share the message on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/357401	null	share my new message i receive on slack with my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.linkedin . share ( status = message ) ;
turking/357427	null	send an email to something with subject QUOTED_STRING_0 on gmail with message QUOTED_STRING_1 when i upload a new picture on instagram and caption is QUOTED_STRING_2	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_2 ) => @com.gmail . send_email ( message = QUOTED_STRING_1 , subject = QUOTED_STRING_0 ) ;
turking/357437	null	send an email with gmail , the subject QUOTED_STRING_0 , and the message : QUOTED_STRING_1 when i upload a new instagram photo captioned QUOTED_STRING_2 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_2 ) => @com.gmail . send_email ( message = QUOTED_STRING_1 , subject = QUOTED_STRING_0 ) ;
turking/357442	null	when i upload a picture onto instagram with the caption QUOTED_STRING_0 , send an email to something with subject QUOTED_STRING_1 on gmail with message QUOTED_STRING_2 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) filter caption == QUOTED_STRING_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_2 , subject = QUOTED_STRING_1 ) ;
turking/357474	null	create a new file called something on google drive when a new milestone is created on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357479	null	make a google drive file whenever a new github milestone occurs .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357484	null	if a new milestone is created on github , then create a file with the name something feature on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357489	null	when a new milestone is created on github , create a file named something on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357494	null	create a on google drive named something if a new milestone is created via github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357519	null	unmute my lg webos tv if a lifestyle article is published on the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357524	null	take my lg webos tv off mute when new content shows in lifestyle section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357534	null	unmute my lg webos tv when a new lifestyle article is posted on the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357539	null	unmute my lg webos tv whenever a new article is published in the lifestyle section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357544	null	when a new article is tagged world on the washington post , send the article link to my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/357546	null	tweet QUOTED_STRING_0 when there is a new commit on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/357548	null	if the washington post publishes anything in the world section play it on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/357551	null	when someone commits on github tweet out the words QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/357553	null	play a new article from the washington post on my webos tv if its from the world section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.iot.tv . play_url ( url = link ) ;
turking/357557	null	if a new article is posted from he washington post , play the link on my lg webos tv when it is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/357560	null	tweet QUOTED_STRING_0 when a new message is posted on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/357562	null	when a new article is published in the washington post world section , play the link on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/357565	null	tweet QUOTED_STRING_0 if there is a new commit on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/357591	null	follow something on twitter is an asteroid is close the earth and estimated diameter max is less than NUMBER_0 m.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max <= NUMBER_0 m => @com.twitter . follow ( ) ;
turking/357606	null	follow something on twitter if an asteroid is passing close to earth and estimated diameter max is less than NUMBER_0 m.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max <= NUMBER_0 m => @com.twitter . follow ( ) ;
turking/357610	null	follow on twitter if an asteroid less than NUMBER_0 m in diameter is passing close to the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max <= NUMBER_0 m => @com.twitter . follow ( ) ;
turking/357646	null	take my lg webos tv off of mute when any alteration in temperature is detected on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357655	null	if the temperature on my thermostat changes , un-mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357660	null	unmute my lg webos tv if the thermostat temperature changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/357663	null	play the link on my lg webos tv to alert me whenever a new article gets published in the market news section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/357668	null	if an article is published in markets news section of wsj , play link on my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.iot.tv . play_url ( url = link ) ;
turking/357670	null	when people i follow tweet , update topic of slack channel to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357673	null	play new articles from the markets news section of the wall street journal on my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.iot.tv . play_url ( url = link ) ;
turking/357675	null	change the topic of my slack channel to QUOTED_STRING_0 when someone i 'm following posts a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357678	null	if a new article is published in the markets news section of the wall street journal then play the link to it on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/357680	null	update the topic of slack channel to QUOTED_STRING_0 when anyone i follow posts a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357685	null	update slack channel topic to QUOTED_STRING_0 when someone i follow tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357737	null	share weather on linkedin when it is raining .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.linkedin . share ( status = $result ) ;
turking/357747	null	share the weather on my linkedin when it 's raining .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.linkedin . share ( status = $result ) ;
turking/357752	null	if there is rain in my area , share weather details on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.linkedin . share ( status = $result ) ;
turking/357767	null	increase the volume on my speaker if a new article is published in the lifestyle section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/357777	null	volume on speaker should be increased if a new article is published in lifestyle section of washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/357784	null	list of imgflip meme temples post on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.imgflip . list ( ) ; @com.tumblr.blog . post_picture ( ) ;
turking/357818	null	share something on my linkedin when something gets posted the the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( ) ;
turking/357825	null	when my rss feed is updated , share something on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( ) ;
turking/357831	null	update the slack channel when a new article is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.slack . updateChannelPurpose ( ) ;
turking/357836	null	update slack channel for new wsj technology articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.slack . updateChannelPurpose ( ) ;
turking/357839	null	create new google drive files for new youtube uploads	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357840	null	change slack channel topic to QUOTED_STRING_0 for new washington post wonk blog posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357841	null	update the purpose of slack channel something to something when a new article is published in the wall street journal technology section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @com.slack . updateChannelPurpose ( ) ;
turking/357844	null	create a file with name something on google drive if a new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357845	null	change the topic of slack channel something to QUOTED_STRING_0 if a new article is published on wonk blog blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357849	null	create a file on google drive every time a youtube video is uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/357850	null	update slack channel to QUOTED_STRING_0 when a new blog is published on the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.slack . updateChannelTopic ( topic = QUOTED_STRING_0 ) ;
turking/357880	null	send a message on slack if a post on the rss feed contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.slack . send ( ) ;
turking/357884	null	if something posts to rss feed and title is QUOTED_STRING_0 , send message to slack to something saying something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.slack . send ( ) ;
turking/357889	null	if something is posted on the rss feed titled QUOTED_STRING_0 send me a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.slack . send ( ) ;
turking/357894	null	send a message on slack if rss feed contains a post that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title =~ QUOTED_STRING_0 ) => @com.slack . send ( ) ;
turking/358014	null	post the body of new comments on an issue on github to my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.tumblr.blog . post_text ( body = body ) ;
turking/358018	null	if a new comment is posted on an issue on github , post the body from that comment to my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.tumblr.blog . post_text ( body = body ) ;
turking/358062	null	create file with name something on google drive when there is a new post on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/358102	null	send a direct message on twitter wishing a QUOTED_STRING_0 when a new milestone is created on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = user ) ;
turking/358105	null	send a QUOTED_STRING_0 dm on twitter when a new milestone is created on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = user ) ;
turking/358109	null	create dropbox folder titled something if a new wsj market news article is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.dropbox . create_new_folder ( ) ;
turking/358114	null	if a new article is published in the markets news section of the wall street journal , create a new folder called , something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.dropbox . create_new_folder ( ) ;
turking/358115	null	message QUOTED_STRING_0 on twitter if a milestone is achieved on git bug	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = user ) ;
turking/358117	null	create new folder for articles published in the market news section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.dropbox . create_new_folder ( ) ;
turking/358118	null	when a new milestone is created on github send a direct message on twitter saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = user ) ;
turking/358122	null	anytime a new article is published under the markets news section in the wall street journal make a new folder in dropbox called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.dropbox . create_new_folder ( ) ;
turking/358140	null	send a dm on twitter saying something when the wall street journal publishes anything new in the GENERIC_ENTITY_tt:country_0 business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . send_direct_message ( ) ;
turking/358147	null	if a wall street journal article is published in the world news section , say QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/358152	null	say QUOTED_STRING_0 when new article appears in the world news section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/358156	null	say QUOTED_STRING_0 if a new article is published in the world news section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/358160	null	say QUOTED_STRING_0 if a new article is published in the world news section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/358169	null	if there is a new file or folder created on google drive share it on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( status = $result ) ;
turking/358170	null	when i get a slack message set the lg webos tv to a value % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/358174	null	if a new file or folder is created , share it on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( status = $result ) ;
turking/358175	null	change the volume on my lg webos tv to some value % when i get a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/358179	null	if a new file or folder is created on google drive , share it on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( status = $result ) ;
turking/358180	null	set the volume on my lg webos tv to a certain % whenever i receive a slack message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/358184	null	share on my liked in when i create a new folder in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( ) ;
turking/358189	null	share on my linkedin when you check for a new file created on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( ) ;
turking/358195	null	mute my lg webos tv when humidity is under NUMBER_0 and it 's sunny .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity <= NUMBER_0 && status == enum sunny => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/358200	null	when it 's sunny someplace and the humidity is less than NUMBER_0 , mute my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity <= NUMBER_0 && status == enum sunny => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/358205	null	mute tv when it is sunny and humidity is less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity <= NUMBER_0 && status == enum sunny => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/358222	null	when an article is published in the market news section of the wall street journal that contains the word QUOTED_STRING_0 in the title , send a message on slack saying QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) filter title =~ QUOTED_STRING_0 ) => @com.slack . send ( message = QUOTED_STRING_1 ) ;
turking/358227	null	send articles from the wall street journal markets news section containing the word QUOTED_STRING_0 via slack with the subject being QUOTED_STRING_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) filter title =~ QUOTED_STRING_0 ) => @com.slack . send ( message = QUOTED_STRING_1 ) ;
turking/358240	null	post a picture on tumblr when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( ) ;
turking/358307	null	share the front page on reddit list titled on linked in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358309	null	reduced volume on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358312	null	share front page reddit posts on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358317	null	share reddit title post on linkedin if it reaches front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358319	null	decrease speaker volume if video upload to youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358322	null	share the front page reddit post titles on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358324	null	when a new youtube video is uploaded lower my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358327	null	if any o my posts reach the front page on reddit , share the title of the post on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358336	null	turn down volume on tv when new youtube video is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/358339	null	turn volume down on lg tv when new youtube video is uploaded .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/358344	null	turn down the volume on my lg webos tv whenever i upload a video to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358349	null	decrease the volume on my lg webos tv when a new video is uploaded on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358354	null	lower volume on lg webos tv when new youtube video is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358386	null	share phd comics post on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/358391	null	share title from phd comics on linkedin if something is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358396	null	share posts on phd comics to linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/358405	null	when something is posted on phd comics share the title on my linkedin profile .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.linkedin . share ( status = title ) ;
turking/358413	null	if checking for new file or folders on google drive , then mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/358420	null	if a new file or folder is created on google drive , mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/358425	null	mute my lg webos tv when there is a new file or folder created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/358430	null	when a file or folder is created on google drive , mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/358435	null	when temperature changes send email with subject something on gmail , message is QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/358439	null	if there is something new on my rss feed , add something to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/358444	null	add something to my github account if something is posted on the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/358445	null	if the temperature changes , send an email to something with subject something on gmail with the message QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/358449	null	if something is posted on the rss feed , then add it to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/358450	null	if the temperate on my thermostat changes , send an email with the subject something on gmail with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/358454	null	add something to github if something on the rss is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.github . add_email ( ) ;
turking/358457	null	turn down the volume on my tv when something is posted on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/358458	null	post QUOTED_STRING_0 on my tumblr from nasa when there is an asteroid	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = name , title = QUOTED_STRING_0 ) ;
turking/358462	null	decrease the volume on my lg webos tv when something is posted on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358463	null	when an asteroid is passing close to earth post QUOTED_STRING_0 with nasa name in my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = name , title = QUOTED_STRING_0 ) ;
turking/358472	null	decrease the volume on my tv for new rss feed posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/358473	null	if there 's an asteroid , make a tumblr post with QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = name , title = QUOTED_STRING_0 ) ;
turking/358477	null	make QUOTED_STRING_0 tumblr post for close-by asteroids	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.tumblr.blog . post_text ( body = name , title = QUOTED_STRING_0 ) ;
turking/358590	null	set slack presence to auto when new google drive file or folder is made	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/358593	null	check if their is new file or folder on google drive , then set my presence on slack to auto .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/358596	null	set my presence on slack to auto if there is a new file or folder created on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/358631	null	if it 's drizzling at home , update the purpose of slack channel to it 's weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum drizzling => @com.slack . updateChannelPurpose ( purpose = $result ) ;
turking/358636	null	please update my slack channel if it starts raining .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.slack . updateChannelPurpose ( ) ;
turking/358705	null	if there is sleet anywhere , post something on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety => @com.facebook . post ( ) ;
turking/358707	null	post on facebook when there 's sleet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety => @com.facebook . post ( ) ;
turking/358709	null	if the weather report includes sleet , post it on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety => @com.facebook . post ( ) ;
turking/358711	null	make facebook post about weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum sleety => @com.facebook . post ( ) ;
turking/358712	null	turned down my speakers if a post reaches reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358716	null	when a post appears on the front page of reddit , please turn down the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358720	null	decrease vol on speaker if post reaches front page of reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358724	null	lower the volume on my speaker when my post reaches the front page on reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358728	null	decrease the volume on my speaker if a post reaches the front page on reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/358772	null	mute my tv when i get a email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/358774	null	play new links in phd comics on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/358780	null	play links from phd comics on my lg tv when they are posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/358781	null	mute my lg tv when i receive an email via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/358783	null	play lg webos tv link on phd comic post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( url = link ) ;
turking/358785	null	post QUOTED_STRING_0 on facebook for youtube video .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/358786	null	emails marked as important on gmail turn off lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/358794	null	turn off my lg webos tv for every time i receive an email which is marked as important on my gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum off ) ;
turking/358797	null	post on QUOTED_STRING_0 youtube video on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/358801	null	post QUOTED_STRING_0 on facebook when new videos are uploaded on youtube post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/358810	null	if an asteroid nears earth set the speaker volume to some percent .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/358814	null	if an asteroid passes close to earth and the orbiting body contains QUOTED_STRING_0 set the volume on my speaker to NUMBER_0 % .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter orbiting_body =~ QUOTED_STRING_0 => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/358824	null	change speaker volume if an asteroid is near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/358839	null	lower the volume on my lg webos tv whenever i upload a new picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358843	null	when i upload a new picture on instagram then turn down the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358845	null	decrease the volume on my lg webos tv when i upload a new picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358847	null	lower the volume on lg webos tv when a picture if uploaded on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/358858	null	write QUOTED_STRING_0 in my tumblr when new article from wall street is written in markets news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/358860	null	post QUOTED_STRING_0 on tumbler whenever there is a new article published in the market news section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/358862	null	please send me tumblr message QUOTED_STRING_0 when wall street journal posts new article in markets news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/358864	null	if a new article is published in the markets section of wsj then post QUOTED_STRING_0 to my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/358950	null	set volume on lg webos to some value % when new youtube video appears	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/358951	null	if a new video is on youtube set volume on tv to this %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/358986	null	whenever something is posted on phd comics , upload a picture of it to facebook with its caption and a title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title , picture_url = picture_url ) ;
turking/358989	null	upload picture to facebook with new phd comic title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title , picture_url = picture_url ) ;
turking/358992	null	upload a picture on facebook with phd comics caption title when new posts are made .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title ) ;
turking/358995	null	upload a picture on facebook using the title as a caption when something is posted on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title ) ;
turking/358997	null	if there is a new commit on github turn down the volume on my speakers	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359000	null	if there is a commit on github , decrease volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359003	null	decrease my speaker volume when a new github commit is detected .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359006	null	raise speaker volume when theirs a new github comment	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359009	null	lower the volume if a new comment appears on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359040	null	decrease the volume of my speaker if something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359041	null	lower the volume of my speaker whenever something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359042	null	if something is posted on phd comics , decrease the volume of my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359043	null	decrease the volume on my speaker when something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359069	null	mute lg webos tv if new article is published in opinion section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359072	null	mute my lg webos tv if a new article appears in the opinions sections .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359075	null	mute lg webos tv if new article appears in the opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359078	null	if new article is published in opinions mute my tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/359081	null	mute tv when new article is published in opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/359114	null	if an event in my calendar is about to begin then mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359117	null	decrease the volume on my speaker if i receive and email in the primary category .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359118	null	mute my lg webos tv if an event in my calendar is about to start .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359121	null	if i receive an email from my primary category turn the volume down on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359122	null	if an event in my calendar is starting mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359125	null	reduce the volume on my speaker when a primary category email is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359126	null	mute my lg webos tv when an event on my calendar is about to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359129	null	decrease speaker volume when a primary category email is received .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359130	null	mute my lg webos tv when calendar event is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359136	null	mute lg webos tv if asteroid is close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359157	null	mute my lg webos tv if an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/359160	null	mute my tv when an asteroid passes close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/359187	null	post QUOTED_STRING_0 on my tumblr when there is a new article on the capital weather gang blog in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/359189	null	update my tumblr with QUOTED_STRING_0 in body and the title of any new capital weather gang blog updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/359191	null	if there is a new article published in the capital weather gang blog of the washington post , then post the title on tumblr with the body QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum capital_weather_gang ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = title ) ;
turking/359235	null	change lg webos volume when a post reaches the front page of reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/359241	null	if a post gets the front page of reddit , set volume of my tv to some value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/359244	null	some value changed on tv when front page reddit post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/359253	null	set the volume on my lg webos tv to some value % when a new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/359261	null	a new video is uploaded on youtube . set the volume on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( ) ;
turking/359265	null	change my tv volume when a new video is uploaded to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/359269	null	set volume on lg tv when a video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( ) ;
turking/359301	null	unmute my lg webos tv when the wall street journal adds an article to the tech section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/359306	null	in the technology section of the wall street journal , when a new article is published , unmute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/359311	null	unmute my lg webos tv if a new article is published in the technology section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/359316	null	unmute my tv if a new article is published in the technology section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " tv " ) . unmute ( ) ;
turking/359321	null	unmute my lg webos tv if there 's a new article is published in the technology section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/359377	null	increase the audio volume when something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359381	null	increase my speaker volume when a new post is on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359389	null	volume notifications for phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359433	null	if a new market news article is published on the wall street journal then post the title on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.facebook . post ( status = title ) ;
turking/359435	null	if a new article is published in the markets news section of the wall street journal then post its title on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.facebook . post ( status = title ) ;
turking/359437	null	if a new article is published in the market news section of the wall street journal post the title to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.facebook . post ( status = title ) ;
turking/359439	null	post titles of new wsj articles on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.facebook . post ( status = title ) ;
turking/359499	null	post QUOTED_STRING_0 on facebook if event on calendar is starting and organizer is QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum started => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/359502	null	post QUOTED_STRING_0 on facebook when an event in my calendar begins and the organizer is QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum started => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/359528	null	increase speaker volume for new youtube uploads	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359529	null	turn up the volume on my speaker if a new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359530	null	increase my volume if a new youtube video is uploaded .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359531	null	increase volume on speaker if new video is uploaded on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359538	null	post the body from github to facebook if a new comment is posted to github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( status = body ) ;
turking/359540	null	post github body to facebook when a new comment is posted to it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( status = body ) ;
turking/359542	null	post the body from github on facebook if a new comment is posted on an issue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( status = body ) ;
turking/359544	null	if a new comment gets on github gets posted on an issue post the body to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( status = body ) ;
turking/359564	null	i move at speeds greater than NUMBER_0 mph then post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.facebook . post ( ) ;
turking/359568	null	post on facebook if i go faster than NUMBER_0 mph	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.facebook . post ( ) ;
turking/359570	null	post on facebook if i move faster than NUMBER_0 mph .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.facebook . post ( ) ;
turking/359624	null	if new file or folder is created on google drive , post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/359629	null	post QUOTED_STRING_0 on facebook if a new file or folder is created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/359633	null	if there is a new folder or file on google drive , post QUOTED_STRING_0 on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/359646	null	play lg webos tv when new post on phd .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/359648	null	play my lg webos tv if a new item appears on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/359650	null	when new post on phd comics play something on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . play_url ( ) ;
turking/359652	null	turn on my lg webos tv when there is a new phd comics post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/359655	null	turn on my tv if a post reaches the front page of reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum on ) ;
turking/359657	null	turn on tv when a post reaches the reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.iot.tv . set_power ( power = enum on ) ;
turking/359659	null	when a post reaches the front page of reddit , turn on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/359661	null	turn on lg webos tv when reddit post makes front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/359663	null	turn on my lg webos tv whenever a post makes the front page of reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.iot.tv ( name = " lg webos " ) . set_power ( power = enum on ) ;
turking/359664	null	when the temperature on my thermostat changes , post a photo on my tumblr with caption something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.tumblr.blog . post_picture ( ) ;
turking/359665	null	post a picture with a caption on tumblr if the temperature on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.tumblr.blog . post_picture ( ) ;
turking/359668	null	if the temperature changes , post the picture and caption on my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.tumblr.blog . post_picture ( ) ;
turking/359733	null	turn down my speaker if a new post ends up on reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359736	null	decrease volume if a post reaches reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359739	null	turn the volume down when a post reaches the front page of reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359742	null	lower speaker volume when reddit post makes the front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/359745	null	increase the volume when a post reaches reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/359753	null	if there is a new file or folder on google drive , turn my lg webos tv volume down .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/359758	null	when i check for new files or folders on google drive , turn the volume of my lg webos tv down .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/359766	null	turn down the volume on my lg webos tv when a new file or folder is created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/359771	null	turn down the volume on my tv when a new file or folder is created on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/372180	null	if the humidity reported on the thermostat changes at all then email EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 on gmail on message it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/372181	null	send an email to EMAIL_ADDRESS_0 with the subject QUOTED_STRING_0 on gmail when the humidity on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/372182	null	a message should be sent by gmail saying QUOTED_STRING_0 in the subject to EMAIL_ADDRESS_0 if the humidity reported by my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/372183	null	send EMAIL_ADDRESS_0 and email with subject QUOTED_STRING_0 on gmail when the thermostat changes humidity	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/372207	null	when a new video is uploaded on youtube , make a github comment for issue NUMBER_0 with random title and the channel title of the video as the comment body .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.github . comment_issue ( body = channel_title , issue_number = NUMBER_0 ) ;
turking/372208	null	make a comment on github issue NUMBER_0 with a random title and the body being the title of every channel that uploads a new youtube video .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.github . comment_issue ( body = channel_title , issue_number = NUMBER_0 ) ;
turking/372211	null	every time a video is added to youtube , add an issue NUMBER_0 comment to github with the video title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.github . comment_issue ( body = channel_title , issue_number = NUMBER_0 ) ;
turking/372214	null	add a comment on issue NUMBER_0 every time a new video is uploaded to youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.github . comment_issue ( body = channel_title , issue_number = NUMBER_0 ) ;
turking/372242	null	if github has new comments unfollow twitter account USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372243	null	use linkedin to post weather if temp is below NUMBER_0 c and cloudiness is more than NUMBER_1 and its cloudy in some place	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_1 && status == enum cloudy && temperature <= NUMBER_0 C => @com.linkedin . share ( status = $result ) ;
turking/372244	null	if github issues are commented on , then unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372245	null	if a new github comment on an issue is posted then go to twitter and unfollow USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372246	null	when a new comment is posted on an issue on github , unfollow USERNAME_0 from my twitter account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372248	null	if someone posts something on github then unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372249	null	if the cloudiness is above NUMBER_0 and the temperature is less than NUMBER_1 c then share this on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 && temperature <= NUMBER_1 C => @com.linkedin . share ( status = $result ) ;
turking/372255	null	on gmail , send a message to something , if an asteroid is passing close to earth and dangerous is off and relative velocity is NUMBER_0 kph , that says QUOTED_STRING_0 , with message as the name .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == false && relative_velocity == NUMBER_0 kmph => @com.gmail . send_email ( message = name , subject = QUOTED_STRING_0 ) ;
turking/372273	null	when a new article is published in the opinions section of github , comment QUOTED_STRING_0 on it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/372274	null	if github publishes a new opinion article , post a comment from me saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/372275	null	comment on issue with body QUOTED_STRING_0 when article published in opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/372276	null	comment on article in opinions section on github with body QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @com.github . comment_issue ( body = QUOTED_STRING_0 ) ;
turking/372280	null	check twitter follows for QUOTED_STRING_0 from USERNAME_0 and post QUOTED_STRING_1 to linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 && text == QUOTED_STRING_0 ) => @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372283	null	share on linkedin any tweets from USERNAME_0 that contain QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 && text =~ QUOTED_STRING_0 ) => @com.linkedin . share ( status = text ) ;
turking/372288	null	if any of my contacts texts or tweets QUOTED_STRING_0 from USERNAME_0 , update my linkedin with QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 && text == QUOTED_STRING_0 ) => @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372289	null	if a tweet and text from USERNAME_0 says QUOTED_STRING_0 and is from someone i follow then share QUOTED_STRING_1 on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 && text == QUOTED_STRING_0 ) => @com.linkedin . share ( status = QUOTED_STRING_1 ) ;
turking/372306	null	share the caption on my new pictures uploaded to instagram to my linked in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/372307	null	share on linked in the caption from any new picture i upload to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/372310	null	when i post a photo on instagram then share the caption from instagram on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/372311	null	when i post a photo on instagram then re-share that same caption on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.linkedin . share ( status = caption ) ;
turking/372352	null	if the cloudiness is less that NUMBER_0 , the wind speed greater than NUMBER_1 kph , the fog below NUMBER_2 , and it is sleety for some place rename something to something in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness <= NUMBER_0 && fog <= NUMBER_2 && status == enum sleety && wind_speed >= NUMBER_1 kmph => @com.dropbox . move ( ) ;
turking/372353	null	if fog is below NUMBER_0 and cloudiness is less than NUMBER_1 rename something on dropbox when it 's sleeting and windy	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness <= NUMBER_1 && fog <= NUMBER_0 && status == enum sleety => @com.dropbox . move ( ) ;
turking/372356	null	rename something to something in dropbox when there is sleet for some place with wind speeds greater than NUMBER_0 kph and cloudiness is less than NUMBER_1 and fog lower than NUMBER_2	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness <= NUMBER_1 && fog <= NUMBER_2 && status == enum sleety && wind_speed >= NUMBER_0 kmph => @com.dropbox . move ( ) ;
turking/372357	null	change name in dropbox from something to something when some place has weather that is sleety , more than NUMBER_0 kph winds , less than NUMBER_1 cloudiness , and below NUMBER_2 fog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness <= NUMBER_1 && fog <= NUMBER_2 && status == enum sleety && wind_speed >= NUMBER_0 kmph => @com.dropbox . move ( ) ;
turking/372432	null	check if there is a new folder or file on google drive if there is share it on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.linkedin . share ( status = $result ) ;
turking/372506	null	if my thermostat registers a humidity change , you should add the email address EMAIL_ADDRESS_0 to my account on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/372507	null	anytime my thermostat shows that the humidity has changed , add the email EMAIL_ADDRESS_0 to the account i have on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/372508	null	if the thermostat registers a different humidity , have my github account updated to include EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/372509	null	add the address EMAIL_ADDRESS_0 to my github account if my thermostat reports a humidity change .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/372510	null	if my thermostat reports a change in humidity , add EMAIL_ADDRESS_0 to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/372511	null	if the humidity changes according to my thermostat , add the address EMAIL_ADDRESS_0 to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/372521	null	when the fix blog in washington post publishes a new article , set my presence on slack to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372523	null	set my presence on slack to away when a new article is published on the the fix blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372525	null	if an asteroid comes close to earth then fix the topic of slack channel something to something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.slack . updateChannelTopic ( ) ;
turking/372563	null	say QUOTED_STRING_0 on linkedin if earth ever gets too near to a passing asteroid	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372564	null	post QUOTED_STRING_0 on linkedin when an asteroid passes nearby .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372565	null	set my status on linkedin to QUOTED_STRING_0 if earth comes close to an asteroid	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372566	null	post on my linkedin QUOTED_STRING_0 if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372574	null	on twitter , if i get a dm , comment oh on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.github . comment_issue ( body = message ) ;
turking/372575	null	comment on issue some value in something on github if i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.github . comment_issue ( body = message ) ;
turking/372576	null	github sends me valuable direct twitter comments .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.github . comment_issue ( body = message ) ;
turking/372577	null	receiving direct twitter comments from github is something of value .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.github . comment_issue ( body = message ) ;
turking/372578	null	upon receipt of dm on twitter , issue value in something on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.github . comment_issue ( body = message ) ;
turking/372608	null	anything new on github , send an gmail QUOTED_STRING_0 with description from github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372609	null	gmail me if github has any new info stating QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372610	null	when a new milestone is created gmail someone with the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372611	null	use gmail to send a email with subject QUOTED_STRING_0 using the description from github in the body , if a new milestone is created .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372612	null	when a new github milestone happens , send a gmail to something titled QUOTED_STRING_0 with the github description as the message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372613	null	email descriptions from new milestones on github to something . subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372614	null	email something with new milestone descriptions from github . use subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_milestone ( ) ) => @com.gmail . send_email ( message = description , subject = QUOTED_STRING_0 ) ;
turking/372617	null	unfollow USERNAME_0 on twitter whenever a new article is published in the national section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372622	null	in the national section of the washington post , if there is a new article published , unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/372624	null	any time there is a new commit on github got to dropbox and make a new folder labeled something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372628	null	create a new dropbox folder for a github commit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372629	null	make a dropbox folder every time there is a new github commit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372633	null	create a new folder called something in dropbox when there is a new commit of github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372634	null	create a dropbox folder when there is a new commit on on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372637	null	when github gets a new commit , make a folder in my dropbox called something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372641	null	for a new commit on github create a new folder in my dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372642	null	label and make a new folder in my dropbox if there is a new commit on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372763	null	send a direct message on twitter saying QUOTED_STRING_0 if github gets a new commit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/372764	null	if a new commit is made on github , then a dm on twitter should be generated saying something like QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/372765	null	a direct message on twitter saying QUOTED_STRING_0 should be generated if there is a new commit on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/372766	null	sharing QUOTED_STRING_0 on linkedin should be done if someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372767	null	say QUOTED_STRING_0 on twitter to ? : if there is a new commit on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/372769	null	for a tweet from a follower on my linkedin share QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372770	null	if anyone i follow tweets , share QUOTED_STRING_0 ' on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372771	null	when a new comic is available on github , direct message to something , QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/372772	null	for every new comic on github , use twitter to send a direct message saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/372773	null	whenever someone i follow tweets , post a message saying QUOTED_STRING_0 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372807	null	use slack to send a picture from instagram with the caption for the caption and the url for the slack url , when i upload a new pic on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.slack . send_picture ( caption = caption , picture_url = picture_url ) ;
turking/372811	null	send a picture with a caption on slack if i post on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.slack . send_picture ( caption = caption , picture_url = picture_url ) ;
turking/372815	null	if i upload a new picture on instagram have a picture with the same caption and url uploaded to slack to something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.slack . send_picture ( caption = caption , picture_url = picture_url ) ;
turking/372829	null	share QUOTED_STRING_0 on my linkedin once temperature on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372830	null	QUOTED_STRING_0 share it to my linkedin on temperature change for my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/372876	null	if an asteroid with an estimated diameter greater than NUMBER_0 centimeters is passing near our planet , then share that information on my linkedin account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 cm => @com.linkedin . share ( ) ;
turking/372877	null	publish the information to my linkedin account when a space rock larger than NUMBER_0 cm in diameter travels close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 cm => @com.linkedin . share ( ) ;
turking/372878	null	i would like you to post to my linkedin when an asteroid with a max estimated diameter bigger than NUMBER_0 cm is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 cm => @com.linkedin . share ( ) ;
turking/372879	null	post on my linkedin when an asteroid with a diameter in excess of NUMBER_0 cm passes near the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_max >= NUMBER_0 cm => @com.linkedin . share ( ) ;
turking/372903	null	send QUOTED_STRING_0 if i get a gmail with the subject QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_1 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372904	null	when gmail subject says QUOTED_STRING_0 tell QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_0 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_1 ) ;
turking/372906	null	the response QUOTED_STRING_0 should be applied to any gmail messages that have QUOTED_STRING_1 as the subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_1 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372910	null	say QUOTED_STRING_0 if a gmail 's email subject is QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_1 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372911	null	answer QUOTED_STRING_0 when a gmail 's message to you is QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter subject == QUOTED_STRING_1 ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372913	null	set presence on away whenever new articles show up in markets news of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372914	null	when new articles are posted in markets news of the wall street journal , set my presence to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372916	null	new markets news sets my slack presence to away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372917	null	my slack presence is away when the wall street journal updates market news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372918	null	the wall street journals market new affects my slack presence .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/372938	null	when the thermostat 's temperature changes , add credit to github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372939	null	add something to github account when temperature on thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372941	null	put something on github if the temperature changes on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372942	null	post on github if there is a noticeable change in temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372943	null	if the thermostat changes temperature i want something posted to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372946	null	when the temperature of my thermostat changes add something to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372947	null	add to my github account if thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372948	null	make sure to add something to my github account if the thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.github . add_email ( ) ;
turking/372949	null	create new folder something in my dropbox once new tweets from my followed list	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372950	null	new tweets from my followed list create new folder something in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372953	null	when someone i follow send a tweet create a new folder called something in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/372985	null	if you see a message on twitter , share information on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.linkedin . share ( ) ;
turking/372986	null	when a direct message is received on my twitter , share information on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.linkedin . share ( ) ;
turking/372993	null	share my linkedin when i get a twitter direct message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.linkedin . share ( ) ;
turking/372994	null	share linkedin info after a twitter dm	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.linkedin . share ( ) ;
turking/373006	null	if i get a tweet from USERNAME_0 , share an item on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( ) ;
turking/373007	null	share a post on my linkedin account whenever someone i follow tweets from USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( ) ;
turking/373008	null	if USERNAME_0 tweets , make a post on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( ) ;
turking/373009	null	share something on my linkedin if USERNAME_0 tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( ) ;
turking/373010	null	share tweets from USERNAME_0 on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = text ) ;
turking/373040	null	sent a twitter dm to something saying QUOTED_STRING_0 whenever there 's a new market news wall street journal article uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/373041	null	tell something QUOTED_STRING_0 using twitter direct messages if the wsj has a new article added to the markets news section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/373043	null	if a new article from the market news section is published tweet QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/373044	null	when a new article comes up in markets news on the wall street journal dm QUOTED_STRING_0 to someone .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/373045	null	when a new article appears in wsj 's markets news section send a twitter dm of QUOTED_STRING_0 to some account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 ) ;
turking/373048	null	add EMAIL_ADDRESS_0 to my github account if you see a post make it to reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/373052	null	when a new post is on the front page of reddit , then add EMAIL_ADDRESS_0 to github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/373053	null	after a post reaches the front page of reddit then add EMAIL_ADDRESS_0 to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/373057	null	front page of reddit posts , need to have EMAIL_ADDRESS_0 added to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/373058	null	when the post reaches the front page on reddit EMAIL_ADDRESS_0 should be added to my github account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . add_email ( email = EMAIL_ADDRESS_0 ) ;
turking/373059	null	send me a notification when google drive has a new folder saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/373062	null	when checking to see if there is a new file or folder created on google drive , show a popup on my phone QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/373063	null	notify me via popup QUOTED_STRING_0 when a new file or folder is found on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/373064	null	add a popup on my phone saying QUOTED_STRING_0 each time a new file or folder is created on google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/373066	null	if a new folder or file is created in google drive i want a message to pop up on my phone that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/373068	null	follow something on twitter when the wsj posts a new us business article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . follow ( ) ;
turking/373074	null	follow the wall street journal on twitter if there 's a new article in the GENERIC_ENTITY_tt:country_0 business section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . follow ( ) ;
turking/373077	null	when new us business articles are posted to the wall street journal , use twitter to follow something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.twitter . follow ( ) ;
turking/373088	null	message something through slack is the humidity shown on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . send ( ) ;
turking/373089	null	send a message on slack to something saying it if the humidity reported by my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . send ( message = $result ) ;
turking/373090	null	send me messages on slack every time thermostat reports change in humidity	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . send ( message = $result ) ;
turking/373091	null	if thermostat reports a different humidity level , send me a message about it on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . send ( message = $result ) ;
turking/373092	null	if there is a humidity change in the house , send a message to slack about it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . send ( message = $result ) ;
turking/373093	null	anytime there is a humidity change on my thermostat , send a message about it on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.slack . send ( message = $result ) ;
turking/373094	null	if the washington post publishes a new sports article share something on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.linkedin . share ( ) ;
turking/373100	null	if the washington post has a new sports article published share something on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.linkedin . share ( ) ;
turking/373111	null	create new folder called something in my dropbox when post reaches the front page on reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373115	null	if a post gets to the front page on reddit make a new folder called something in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373117	null	create a folder named something in dropbox whenever a new post reaches the front page of reddit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373119	null	if the humidity is greater than NUMBER_0 , comment on something of value on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373120	null	comment something valuable on github if the humidity recorded by my thermostat is more than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373121	null	if the humidity is higher than NUMBER_0 on my thermostat , comment something important on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373122	null	when my thermostat reports a humidity change of more than NUMBER_0 , comment it 's value on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373123	null	when the humidity on my thermostat changes by a value of more than NUMBER_0 , comment the value on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373126	null	anytime the humidity on my thermostat changes and is above NUMBER_0 , then leave a github post commenting on an issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373127	null	leave a comment on a topic in github whenever the humidity on my thermostats is more than NUMBER_0 and has changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373128	null	when humidity changes to greater than NUMBER_0 on my thermostat comment on issue some value in something on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value >= NUMBER_0 => @com.github . comment_issue ( ) ;
turking/373151	null	new gmail sets slack presence to auto .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/373152	null	my slack presence is auto when i receive gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/373153	null	presence on slack changes to auto when there is email from gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/373156	null	fix the account settings for slack to auto presence upon gmail notification .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/373157	null	change slack account to auto presence when my gmail has the slack notification .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/373159	null	set my presence on slack to auto when i get gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.slack . setPresence ( presence = enum auto ) ;
turking/373219	null	when i get a slack message add to my github account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.github . add_email ( ) ;
turking/373220	null	when something is posted rss feed share post on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( ) ;
turking/373221	null	share post on linkedin when something is posted on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( ) ;
turking/373222	null	if something new is posted on the rss feed , share it to my linkedin profile	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( ) ;
turking/373223	null	post updates on the rss feed on my linkedin account when something changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.linkedin . share ( ) ;
turking/373234	null	if an event pops up on my calendar , set my slack status to away	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.slack . setPresence ( presence = enum away ) ;
turking/373240	null	set my presence on slack to away if an event on my calendar is about to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.slack . setPresence ( presence = enum away ) ;
turking/373245	null	if my post in on the reddit front page use a slack channel to title the reddit page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/373246	null	update slack channel purpose to title from reddit front page when a post reaches it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/373247	null	when a post gets to reddit front page please change the slack channel purpose to the title of the front page on reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/373248	null	update slack channel purpose to title from reddit front page when post reaches reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/373249	null	change slack channel purpose to reddit front page when post reaches front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/373250	null	title slack channel purpose to reddit front page when post reaches front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/373266	null	make folder called something in dropbox if post reaches front page of reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373270	null	create folder named something in dropbox if reddit post makes it to front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373390	null	after seeing a post on phd comics , post QUOTED_STRING_0 in my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/373391	null	post QUOTED_STRING_0 in the body of my tumblr post after seeing a post on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/373392	null	QUOTED_STRING_0 should be posted in the body of a tumbler post if something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/373393	null	post QUOTED_STRING_0 in my tumbler if there 's something new in phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/373394	null	if something new appears on phd comics , put QUOTED_STRING_0 in a post on my tumbler account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/373395	null	when there 's a new post on phd comics , post QUOTED_STRING_0 in my tumbler .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 ) ;
turking/373399	null	reblog new instagram pictures on tumblr as QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_text ( body = caption , title = QUOTED_STRING_0 ) ;
turking/373448	null	when a new phd post is up , post a photo to facebook that has the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/373452	null	i need my slack channel HASHTAG_0 updated to QUOTED_STRING_0 every time a new article gets published in the sports section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/373453	null	whenever a new article gets posted in the sports section on the washington post , update my purpose of the slack channel HASHTAG_0 to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/373454	null	set the purpose of slack channel HASHTAG_0 to QUOTED_STRING_0 if the washington post has a new article posted in the sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/373455	null	update slack channel purpose from HASHTAG_0 to QUOTED_STRING_0 when the washington post adds something to sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/373456	null	when there is a new article published in the sports section of the washington post then change the purpose of slack channel HASHTAG_0 to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/373457	null	when the washington post sports section publishes a new article then update the purpose of HASHTAG_0 slack channel to QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.slack . updateChannelPurpose ( channel = HASHTAG_0 , purpose = QUOTED_STRING_0 ) ;
turking/373469	null	check phd comics regularly ; if something new has been posted , upload a picture of it to facebook with the title and include phdcomics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title , picture_url = picture_url ) ;
turking/373470	null	via facebook , use the caption the title from phdcomics , when posting a picture , after something is posted on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title ) ;
turking/373471	null	when there is something new in phd comics , put a picture on fb with the caption of the title	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title , picture_url = picture_url ) ;
turking/373472	null	share picture from phdcomics on facebook with caption as title when something is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title , picture_url = picture_url ) ;
turking/373473	null	if something is posted on phdcomics , share picture and caption to facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post_picture ( caption = title , picture_url = picture_url ) ;
turking/373479	null	post to facebook when any newly created articles show up in the GENERIC_ENTITY_tt:country_0 business section on the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.facebook . post ( ) ;
turking/373480	null	post to facebook when a new article appears in the GENERIC_ENTITY_tt:country_0 business section of wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.facebook . post ( ) ;
turking/373574	null	comment on github in issue NUMBER_0 in something with the category of any post that reaches the front page of reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . comment_issue ( body = category , issue_number = NUMBER_0 ) ;
turking/373576	null	if the estimated diameter of an asteroid passing close to earth is less than NUMBER_0 cm , increase my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_min <= NUMBER_0 cm => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/373577	null	comment on issue NUMBER_0 on github with the body as the category of a post that reaches the front page on reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . comment_issue ( body = category , issue_number = NUMBER_0 ) ;
turking/373579	null	if an asteroid is passing near earth and estimated diameter min is less than NUMBER_0 cm , then turn up the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter estimated_diameter_min <= NUMBER_0 cm => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/373580	null	if a post winds up on the front page of reddit and the body is the category from reddit front page , then comment on issue NUMBER_0 in something on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.github . comment_issue ( body = category , issue_number = NUMBER_0 ) ;
turking/373589	null	share the name of any asteroid that passes dangerously close to earth on my linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == false => @com.linkedin . share ( status = name ) ;
turking/373590	null	share on my linkedin the name of any asteroid that passes dangerously close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == false => @com.linkedin . share ( status = name ) ;
turking/373591	null	on my linkedin , share the name of a dangerous asteroid which is flying by near earth if it is off .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == false => @com.linkedin . share ( status = name ) ;
turking/373592	null	if an asteroid passes earth closely and f is a danger , put its name on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == false => @com.linkedin . share ( status = name ) ;
turking/373593	null	if an asteroid travels by earth and there is a risk of f , add its name on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) filter is_dangerous == false => @com.linkedin . share ( status = name ) ;
turking/373629	null	using the something subject line send EMAIL_ADDRESS_0 a picture over gmail whenever i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_picture ( to = EMAIL_ADDRESS_0 ) ;
turking/373630	null	send picture message via gmail to EMAIL_ADDRESS_0 when i move with subject something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_picture ( to = EMAIL_ADDRESS_0 ) ;
turking/373631	null	send gmail picture message to EMAIL_ADDRESS_0 subject something when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_picture ( to = EMAIL_ADDRESS_0 ) ;
turking/373634	null	whenever i move send a picture of it to EMAIL_ADDRESS_0 with the subject as something on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_picture ( to = EMAIL_ADDRESS_0 ) ;
turking/373635	null	send a picture on gmail with the subject as something to EMAIL_ADDRESS_0 when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_picture ( to = EMAIL_ADDRESS_0 ) ;
turking/373637	null	whenever i get important email that has been labeled QUOTED_STRING_0 then unmute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373641	null	unmute lg webos tv when receiving important QUOTED_STRING_0 emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373642	null	if receive important mail labeled QUOTED_STRING_0 , unmute lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373643	null	unmute lg webos tv with new important QUOTED_STRING_0 mails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373647	null	if receive an email labeled QUOTED_STRING_0 and marked important then unmute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373650	null	upon receipt of QUOTED_STRING_0 email unmute lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373655	null	gmail emails labeled important should automatically unmute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373656	null	when an important email with label QUOTED_STRING_0 shows up in my gmail , unmute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter contains ( labels , QUOTED_STRING_0 ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/373682	null	when fact checker blog of the washington post publishes a new article share QUOTED_STRING_0 on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/373683	null	if there 's a new article on the washington post fact checker blog , go to linked in and post QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum fact_checker ) ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/373684	null	if there 's something new on phd comics , create and name a dropbox folder for it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373685	null	make a new folder on dropbox for it if there 's a new phd comics post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373686	null	create a folder labeled something in dropbox in response to new post on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373687	null	whenever phd comics updates , create a folder called something on dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/373695	null	increase the volume on my lg weds tv if i get a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/373701	null	turn up the volume on the lg webos tv when i get a message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/373703	null	increase volume on lg webos television anytime i receive a twitter direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . raise_volume ( ) ;
turking/373719	null	when an asteroid passes near to earth , send email to something with subject QUOTED_STRING_0 and message name from nasa , use gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = name , subject = QUOTED_STRING_0 ) ;
turking/373722	null	when an asteroid is passing close to earth email to something subject QUOTED_STRING_0 same message from nasa on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = name , subject = QUOTED_STRING_0 ) ;
turking/373723	null	create message subject QUOTED_STRING_0 same message from nasa to gmail on an asteroid is passing close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = name , subject = QUOTED_STRING_0 ) ;
turking/373726	null	send an email to something with subject QUOTED_STRING_0 on gmail and message is the name from nasa if an asteroid is passing close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = name , subject = QUOTED_STRING_0 ) ;
turking/373729	null	an asteroid passing close to earth must be met with an email titled , QUOTED_STRING_0 , containing the name from nasa , through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = name , subject = QUOTED_STRING_0 ) ;
turking/373806	null	when you notice a new video on youtube , go to my tumblr and post the title of the channel	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.tumblr.blog . post_text ( title = channel_title ) ;
turking/373809	null	if a new video is put onto youtube then post the information in my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.tumblr.blog . post_text ( title = channel_title ) ;
turking/373972	null	send QUOTED_STRING_0 QUOTED_STRING_1 on tumblr when i see slack notifications .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_0 , title = QUOTED_STRING_1 ) ;
turking/373973	null	when i receive any message on slack , post QUOTED_STRING_0 and body message QUOTED_STRING_1 on my tumblr account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/373974	null	use my tumblr account to post QUOTED_STRING_0 and body QUOTED_STRING_1 anytime i receive a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/373975	null	post QUOTED_STRING_0 with body QUOTED_STRING_1 to tumblr for new slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/373976	null	blog QUOTED_STRING_0 with body QUOTED_STRING_1 on tumblr when i get a new message in slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.tumblr.blog . post_text ( body = QUOTED_STRING_1 , title = QUOTED_STRING_0 ) ;
turking/373997	null	if the temperature reading of my thermostat updates , set my lg webos tv 's volume at NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/373998	null	set volume on lg webos to NUMBER_0 % if thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/373999	null	if thermostat temperature changes , set volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374000	null	if temperature of thermostat changes set volume of lg webos to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374043	null	when there is an incoming slack message turn down the speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374044	null	incoming slack messages to my account should be met by the default action of turning down my volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374045	null	messages to my slack account must be brought to attention forthwith by immediately lowering the volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374046	null	lower the speaker volume whenever i get a slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374047	null	turn down the volume if i get a message from slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374048	null	if a slack message comes in then turn down the volume on the speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374049	null	reduce the volume if a slack message shows up	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374050	null	reduce the speaker volume when receiving a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374059	null	when something is posted on rss feed and link is URL_0 , update slack channel to title of rss	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter link == URL_0 ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/374060	null	when a post is updated on rss feed with link URL_0 , update title of slack channel from rss	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter link == URL_0 ) => @com.slack . updateChannelPurpose ( purpose = title ) ;
turking/374061	null	slack messages change my speaker volume to value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/374062	null	speaker volume changes to value % when receiving slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/374063	null	slack message receipt sets volume on my speaker to a value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/374084	null	when new article in technology section of wall street journal is printer , change my speaker volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374087	null	set the volume to NUMBER_0 % if an article is published in the technology section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374088	null	when an article is published in the tech section of the wall street journal , change the volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374089	null	when new articles are published to the wall street journal in the technology section , set the speaker volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum technology ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374130	null	if an asteroid passes earth nearby , the volume on my lg webos tv should be decreased	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . lower_volume ( ) ;
turking/374131	null	decrease the volume on my tv , which is an lg webos , if an asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/374132	null	an asteroid passing near earth means the volume on my tv , an lg webos , needs to be decreased	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/374133	null	my lg tv 's volume decreases when there is an asteroid passing close to the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/374134	null	asteroids cause the volume of my lg tv to decrease .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/374160	null	when asteroid is passing close to earth , i want lg tv vol to some value	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( ) ;
turking/374161	null	set the volume to some value % if an asteroid is close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( ) ;
turking/374167	null	put volume on the lg webos tv to NUMBER_0 % when anyone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374170	null	when someone i follow tweets set volume at NUMBER_0 % on my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374173	null	turn the volume to NUMBER_0 % on lg webos when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374177	null	when i follow tweets , set the vo ; to NUMBER_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374178	null	my lg tv vol has to be on vol NUMBER_0 , when i follow tweets /	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374179	null	when i follow tweet i like my vol on lg tv to be on NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/374183	null	post QUOTED_STRING_0 with the body using the description from washington post in my tumblr when a new article is added to the national section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_0 ) ;
turking/374184	null	when the national section of the washington post receives a new article then post QUOTED_STRING_0 using the body description from the washington post in my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_0 ) ;
turking/374188	null	put QUOTED_STRING_0 from washington post article on my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_0 ) ;
turking/374189	null	post new article with QUOTED_STRING_0 in my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.tumblr.blog . post_text ( body = description , title = QUOTED_STRING_0 ) ;
turking/374238	null	post email snippet on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374239	null	when i get primary emails post their snippets on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374240	null	post on facebook snippets from each new primary email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374241	null	for each new primary email , post its snippet to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374242	null	primary category email posts snippets on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374243	null	facebook posts snippet of primary email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374244	null	post a snippet of any emails i receive in the primary category on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/374245	null	if an item gets posted on phd comics , turn my volume up	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374246	null	raise speaker volume when there is a new post to phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374247	null	speaker volume should be set to increase if something is posted on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374254	null	if i get an email on gmail that is marked as important , increase my speaker 's volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374255	null	increase the volume of my speakers if i get an email marked as important on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374256	null	if an email is received and marked as important on gmail increase the volume on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374257	null	make my speaker louder if you get a gmail email marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374258	null	if you are sent an email marked as important over gmail , increase my speaker volume .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374259	null	turn my speaker up if you receive mail marked important in gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374260	null	increase the volume on my speaker after getting an email marked important on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/374330	null	for a new article in the markets news of the wall street j then decrease the volume of my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374331	null	turn the sound down when there 's a new article in wsj 's markets news section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374332	null	lower the volume when a new article in the wall street journal 's markets news section appears .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum markets ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/374350	null	when there 's a new post on the front page on reddit post the title with body its title value as a post on my tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.tumblr.blog . post_text ( body = title , title = title ) ;
turking/374351	null	post the title of a new post on reddit 's front page and the body its title value on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.tumblr.blog . post_text ( body = title , title = title ) ;
turking/374356	null	post front page reddit post title with body on my tumblr title value	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.tumblr.blog . post_text ( body = title , title = title ) ;
turking/374364	null	publish a tumblr post with a title of a reddit message title if a message comes up on the first page of reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.tumblr.blog . post_text ( title = title ) ;
turking/374419	null	one should post something on facebook when it 's cloudy and fog levels are greater than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter fog >= NUMBER_0 && status == enum cloudy => @com.facebook . post ( ) ;
turking/374420	null	if you receive a message on slack that contains QUOTED_STRING_0 , post QUOTED_STRING_1 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.facebook . post ( status = QUOTED_STRING_1 ) ;
turking/374421	null	let me know on facebook if you measure fog higher than NUMBER_0 and it is cloudy .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter fog >= NUMBER_0 && status == enum cloudy => @com.facebook . post ( ) ;
turking/374422	null	post on facebook when its cloudy somewhere and foggier than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter fog >= NUMBER_0 && status == enum cloudy => @com.facebook . post ( ) ;
turking/374423	null	post QUOTED_STRING_0 on facebook if i get a QUOTED_STRING_1 on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_1 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/374424	null	when the fog is greater than NUMBER_0 and cloudy , post something on facebook .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter fog >= NUMBER_0 && status == enum cloudy => @com.facebook . post ( ) ;
turking/374425	null	enter something on facebook when it is cloudy and fog is greater than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter fog >= NUMBER_0 && status == enum cloudy => @com.facebook . post ( ) ;
turking/374426	null	when a slack message contains QUOTED_STRING_0 , then respond with QUOTED_STRING_1 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_0 ) => @com.facebook . post ( status = QUOTED_STRING_1 ) ;
turking/374427	null	write QUOTED_STRING_0 on facebook , when a slack message stating QUOTED_STRING_1 comes through .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter message =~ QUOTED_STRING_1 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/374428	null	post something on facebook when it 's cloudy some place or the fog is more than a NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter fog >= NUMBER_0 && status == enum cloudy => @com.facebook . post ( ) ;
turking/374497	null	whenever i upload a new picture on instagram follow it up by uploading a picture onto facebook with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/374501	null	upon seeing a new picture on my instagram , put a photo on facebook titled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/374568	null	if the washington post 's morning mix blog publishes a new article set speaker volume to a certain level .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/374569	null	when the morning mix blog on the washington post website posts a new article set speaker volume to NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374573	null	when a new post is published in morning mix of the washington post , turn my speaker volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374574	null	if a new article appears on morning mix of the washington post , set my speaker volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/374582	null	after the humidity changes and the thermostat lets you know of the change , then silence my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/374583	null	whenever the thermostat reports a change in humidity mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/374584	null	if the humidity changes as reported by the thermostat then mute the volume on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/374603	null	if used less than NUMBER_0 kb and total less than NUMBER_1 mb , retrieve dropbox quote info and post QUOTED_STRING_0 with body something in tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_1 MB && used_space <= NUMBER_0 KB ; @com.tumblr.blog . post_text ( title = QUOTED_STRING_0 ) ;
turking/374604	null	post QUOTED_STRING_0 w / body something in tumblr and retrieve dropbox quota info if used < NUMBER_0 kb and total < NUMBER_1 mb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_1 MB && used_space <= NUMBER_0 KB ; @com.tumblr.blog . post_text ( title = QUOTED_STRING_0 ) ;
turking/374605	null	dropbox quota info use should be less than NUMBER_0 kb and the total should be less than NUMBER_1 mb and then retrieve it and post QUOTED_STRING_0 in my tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.dropbox . get_space_usage ( ) filter total_space <= NUMBER_1 MB && used_space <= NUMBER_0 KB ; @com.tumblr.blog . post_text ( title = QUOTED_STRING_0 ) ;
turking/1617047	null	when the washington post creates an article in the lifestyle section send an email to somebody .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1617048	null	when the washington post publishes an article that is in lifestyle section send an email to somebody .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1617061	null	show my current location to me if a new article is posted to the opinion section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617062	null	whenever the washington post publishes an article in the opinions section display my current location for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617063	null	notify me of my location every time an opinion article publishes from the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617064	null	when the washington post publishes an opinion article , show my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617065	null	when the washington post publishes an article in the opinions section i need you to show me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617066	null	when the washington post publishes an article in the opinions section show me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617067	null	when something is published on the rss feed send me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617068	null	anytime something is published on the rss feed send me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617069	null	get my dropbox files in reverse alphabetical order when something is published on my rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617070	null	show me the humidity as reported by my thermostat whenever i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1617071	null	if i upload a picture on instagram retrieve the humidity reported by the thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1617072	null	each time i get email on gmail i 'd like you to show me the curiosity rover .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . rover ( ) ;
turking/1617073	null	when i receive an email on gmail , display the curiosity rover	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . rover ( ) ;
turking/1617074	null	supply me my files from dropbox alphabetically when my current location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1617075	null	when i leave the location i 'm at i need an alphabetized list of my files in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1617076	null	when i leave my current location send me my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1617077	null	when i live here arrange my dropbox files into alphabetical order and give me them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1617078	null	i need dropbox files in alphabetical order when i leave	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1617079	null	provide alphabetized dropbox files when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1617080	null	if i have gotten an email on gmail , show me the curiosity rover	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . rover ( ) ;
turking/1617081	null	show the curiosity rover whenever i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . rover ( ) ;
turking/1617082	null	i want to see the curiosity rover anytime i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . rover ( ) ;
turking/1617084	null	i 'd like to look at the curiosity rover each time i get a new email through my gmail address .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . rover ( ) ;
turking/1617115	null	list my dropbox files in reverse alphabetical order if somebody that i follow replies to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617117	null	show me my dropbox files in reverse alphabetical order when someone i follow on twitter replies to user USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617118	null	if someone i follow replies to user USERNAME_0 on twitter , show me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617123	null	if somebody that i follow replies to USERNAME_0 on twitter , list my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617124	null	show me my dropbox files in reverse alphabetical order when someone i follow on twitter replies to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617130	null	when USERNAME_0 is replied to on twitter by someone i 'm following show me my reverse alphabetized dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617142	null	if someone i follow replies to USERNAME_0 retrieve their tweets but only when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1617145	null	when i upload a new picture to instagram , get my fitbit body measurements	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getbody ( ) ;
turking/1617146	null	when my fitbit steps update get the tweets from anyone i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1617147	null	get me the tweets from everyone i follow in reply to USERNAME_0 once my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1617148	null	give me my fitbit body measurements when i upload a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getbody ( ) ;
turking/1617149	null	get my body measurements from fitbit when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getbody ( ) ;
turking/1617154	null	when my fitbit steps is updated retrieve tweets from people i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1617155	null	i want you to retrieve my body measurements from fitbit when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getbody ( ) ;
turking/1617156	null	get the tweets from anyone i follow in reply to USERNAME_0 when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1617157	null	retrieve all tweets from all tweeters i follow in reply to USERNAME_0 when my steps update on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1617160	null	when location is changed , give step from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1617161	null	tell me steps from fitbit when location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1617162	null	when my location differs , tell me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1617164	null	every time i put a new pic on instagram get my body measurements from my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getbody ( ) ;
turking/1617165	null	every time i change location , i need to see my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1617168	null	tell me my fitbit steps during a new change in location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1617211	null	if i get an email marked as important get my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617213	null	when i get an email marked as important get my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617222	null	when i get an email that is important get my dropbox files in reverse alpha order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617223	null	get my dropbox files in reverse alphabetical order when i receive an email marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617224	null	get my dropbox files in backward alphabetical order if i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617259	null	play URL_0 on my lg tv after it stops snowing at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617260	null	as soon as it stops snowing at home , play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617261	null	whenever it stops snowing in home play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617262	null	play URL_0 on my lg tv when it stops snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617342	null	when there is a change to the time of an event on my icalendar , fetch the instagram photos i took here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1617346	null	if an icalendar event time changes , get me instagram photos taken at this location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1617350	null	on my icalendar when the time of some event changes retrieve pictures i took here on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1617352	null	fetch me the instagram photos i took at here if you 've seen a change to the time of an event on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1617353	null	retrieve instagram pictures i took here when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1617363	null	show me my pics on instagram shot at this place whenever an icalendar event has a time change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1617376	null	get my instagram pictures tagged HASHTAG_0 if wsj lifestyle section has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1617377	null	if wsj posts something new in the lifestyle section show me HASHTAG_0 instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1617381	null	refresh my instagram feed with pictures tagged with HASHTAG_0 whenever there is a new article in the wsj lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1617384	null	when wsj lifestyle section puts up a new article please show me my HASHTAG_0 instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1617388	null	whenever there is a new article in the wsj lifestyle section , then refresh my instagram feed with pictures tagged with HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1617426	null	restore volume on my lg tv when i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1617429	null	restore the volume on my lg tv after i leave work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1617431	null	when i leave work i want the volume on my lg tv restored	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1617432	null	the volume restored on my lg tv when i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1617443	null	get me the cost to take an uber from LOCATION_0 to work if it starts snowing in LOCATION_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_1 ) ) filter status == enum snowy => @com.uber . price_estimate ( end = $location . work , start = LOCATION_0 ) ;
turking/1617444	null	if it begins snowing in LOCATION_0 find the cost of uber from LOCATION_1 to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum snowy => @com.uber . price_estimate ( end = $location . work , start = LOCATION_1 ) ;
turking/1617445	null	what is the cost of an uber from LOCATION_0 when it snows in LOCATION_1 ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_1 ) ) filter status == enum snowy => @com.uber . price_estimate ( end = $location . work , start = LOCATION_0 ) ;
turking/1617446	null	when it starts snowing in LOCATION_0 get the price of an uber from LOCATION_1 to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum snowy => @com.uber . price_estimate ( end = $location . work , start = LOCATION_1 ) ;
turking/1617494	null	after the rain is done please post QUOTED_STRING_0 to my facebook page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1617495	null	alert me about my schedule when the step counter on my fitbit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1617496	null	if any update happens to my fitbit steps let me know my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1617497	null	whenever my fitbit updates my steps tell me what my schedule is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1617498	null	tell me my schedule when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1617499	null	provide my schedule when fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1617500	null	when fitbit steps update i want my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1617513	null	when i receive a primary email from EMAIL_ADDRESS_0 detect the language that QUOTED_STRING_0 is written in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1617514	null	whenever i receive an email from EMAIL_ADDRESS_0 in primary detect what language QUOTED_STRING_0 is written in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1617515	null	if i get an email from EMAIL_ADDRESS_0 in my primary category find out what language the phrase QUOTED_STRING_0 is in .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1617516	null	if EMAIL_ADDRESS_0 sends an email to my primary category find out the language for the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1617539	null	whenever there is a change in my weight on fitbit , give me a list of the instagram pictures that i took at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1617543	null	send me instagram pictures from home when my weight changes on my fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1617544	null	when my weight goes up or down on fitbit , tell me what instagram pictures i took at my house .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1617548	null	tell me the instagram photos taken at home whenever my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1617549	null	every time my weight changes via fitbit , notify me with the instagram pictures i took at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1617550	null	when my weight changes on my fitbit tell me all the instagram photos taken at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1617554	null	automatically share the subject of new emails arrived in the last hour of time on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.linkedin . share ( status = subject ) ;
turking/1617558	null	automatically broadcast the subject of new emails arrived in the last hour of time on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.linkedin . share ( status = subject ) ;
turking/1617560	null	find the subject of all new emails from the past hour and share them on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.linkedin . share ( status = subject ) ;
turking/1617561	null	gather the subjects from all of the last hour 's emails and share them all on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.linkedin . share ( status = subject ) ;
turking/1617568	null	if there is a new article in washington post opinions post a picture to twitter that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1617570	null	if there 's a new washington post opinion article upload a photo to twitter that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1617573	null	post a picture on twitter saying QUOTED_STRING_0 when a new article in washington post opinions section post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1617574	null	post a picture to twitter saying QUOTED_STRING_0 any time there is a new article in the washington post opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1617575	null	get articles from washington post local section if i upload a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1617577	null	get me local washington post articles if i upload a pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1617578	null	if i upload a new picture on instagram , download articles from the washington post local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1617580	null	if new article posts in washington post opinions section then post a picture on twitter saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1617582	null	when a new picture on instagram is uploaded by me then retrieve articles in washing post section local	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1617583	null	when i upload new picture on instagram in section local retrieve articles in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1617599	null	via email send the orbiting body of new today 's asteroid info automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = orbiting_body ) ;
turking/1617601	null	today 's new asteroid info send via email automatically the orbiting body	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = orbiting_body ) ;
turking/1617603	null	email me the details when a new orbiting body of new today 's asteroid is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = orbiting_body ) ;
turking/1617605	null	send me an email message with details on the orbiting body of new today 's asteroid	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.gmail . send_email ( message = orbiting_body ) ;
turking/1617646	null	when it starts raining in LOCATION_0 , display dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617647	null	if the rain starts in LOCATION_0 , retrieve my files from dropbox in descending alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617649	null	get the files from dropbox in reverse alphabetical order when the rain starts in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617653	null	display dropbox files in reverse alphabetical order if it starts raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617668	null	when it begins raining in LOCATION_0 get my dropbox files in order of reverse alphabetical	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617669	null	give me my QUOTED_STRING_0 calendar events whenever a person i follow tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1617670	null	give me my calendar events at QUOTED_STRING_0 when anyone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1617671	null	when i get a tweet from someone i am following , give me my QUOTED_STRING_0 events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1617672	null	show me my calendar events at QUOTED_STRING_0 when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1617673	null	i need my files from dropbox in inverse alphabetical order if it showers in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617675	null	when there is a tweet from someone i follow , show me my calendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1617676	null	tell me all the events i have going on at QUOTED_STRING_0 when someone i am following tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1617693	null	notify me of my current location when an event ends on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617695	null	tell me my current location if an icalendar event ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617697	null	whenever an event has ended on my icalendar provide me with my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617699	null	show me my current location when an event on my icalendar ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617701	null	if an event on my icalendar ends show my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617703	null	if an icalendar event has ended , let me know my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617717	null	make a new empty dropbox folder whenever i upload an instagram photo .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1617718	null	if i upload a new instagram picture make a new empty dropbox folder .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1617719	null	allow a new empty folder to be created in dropbox when i upload a new photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1617721	null	make a new folder in dropbox that 's empty when i put up a new instagram picture .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1617724	null	make a new empty folder for me in dropbox when a new photograph is uploaded to instagram by me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1617726	null	pull up URL_0 on my lg tv whenever it stops snowing at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617728	null	i want URL_0 playing on my lg tv when it 's no longer snowing at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617729	null	when i get an email on gmail , i want an iced latte	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum latte , iced = true ) ;
turking/1617730	null	i want to get an iced latte when i get a gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum latte , iced = true ) ;
turking/1617731	null	order me a iced latte when i get mail on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum latte , iced = true ) ;
turking/1617732	null	when i get mail through gmail order me a latte on ice	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum latte , iced = true ) ;
turking/1617733	null	order me a iced latte whenever i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum latte , iced = true ) ;
turking/1617734	null	should i get an email on gmail order me up an iced latte	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum latte , iced = true ) ;
turking/1617735	null	i would like to be presented with websites that include QUOTED_STRING_0 whenever the time is changed on some event within my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617736	null	deliver websites matching QUOTED_STRING_0 when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617737	null	bring websites matching QUOTED_STRING_0 when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617738	null	when the time of some event is changed on my icalendar send me websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617739	null	find all websites matching QUOTED_STRING_0 after the time changes for some event in my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617750	null	show me a random gif when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.giphy . get ( ) ;
turking/1617751	null	when my location changes give me a random gif	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.giphy . get ( ) ;
turking/1617752	null	give me a random gif whenever i have a change in location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.giphy . get ( ) ;
turking/1617753	null	when i move somewhere send me a random gif	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.giphy . get ( ) ;
turking/1617754	null	show me a gif at random when there 's a change in my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.giphy . get ( ) ;
turking/1617755	null	when my current location changes , show me a gif image that is random	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.giphy . get ( ) ;
turking/1617756	null	if someone i 'm following tweets translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617757	null	tell me how to say QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 if there 's a tweet from someone i 'm following .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617758	null	tell me what QUOTED_STRING_0 is in GENERIC_ENTITY_tt:iso_lang_code_0 when someone i follow tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617759	null	when someone i follow tweets something , tell me what QUOTED_STRING_0 is in GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617760	null	put QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 when there is a tweet from someone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617761	null	when someone i follow tweets , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617771	null	when i get an email marked important get my most recent NUMBER_0 pictures from instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1617773	null	whenever it quits snowing at work can you please play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617774	null	if the snowing at work stops i want my lg tv to play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617777	null	when an email marked as important arrives display my NUMBER_0 recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1617778	null	get my NUMBER_0 recent instagram pictures if an email mark as important as sent to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1617779	null	show me my NUMBER_0 most recent instagram pictures when i receive an email that is marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1617780	null	give me my latest NUMBER_0 instagram pics when i get an email marked as being important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1617781	null	send me an instagram photo via gmail when i upload a new one .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/1617783	null	when i upload a pic on instagram send it via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/1617784	null	if i put a new picture on instagram , send that through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/1617787	null	if i upload pictures to instagram , send them through gmail as well .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/1617791	null	when i upload a picture on instagram send that via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_picture ( picture_url = picture_url ) ;
turking/1617831	null	as soon as it stops snowing at home , provide me my primary emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1617832	null	let me see my emails from the primary category whenever it ceases to snow in home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1617835	null	list my primary category emails whenever it stops snowing at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1617843	null	when an event location is changed on my icalendar , give me my emails that are unimportant	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617844	null	when the location of some event changes on my icalendar , display all unimportant emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617846	null	when an event 's location is changed on my icalendar , show me all my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617848	null	when i upload a new photo on my instagram , give me unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617849	null	when location of event changes on my icalendar display unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617850	null	display all my unimportant emails whenever my instagram gets a new photo uploaded by me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617851	null	if i upload a picture on instagram , show me my unimportant emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617852	null	let me know all my unimportant emails when the location of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617853	null	locate unimportant emails when i post a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617854	null	when i post an instagram pic retrieve me unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617855	null	display my unimportant emails if i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617856	null	if user USERNAME_0 gets a reply from someone i follow on twitter , turn URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617859	null	display any unimportant emails when an event location on my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1617862	null	whenever someone i follow replies to user USERNAME_0 on twitter play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617865	null	if someone i follow replies to user USERNAME_0 on twitter show URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617869	null	show me URL_0 on my lg tv whenever user USERNAME_0 is replied to by someone i follow on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1617927	null	when an event organized by QUOTED_STRING_0 on my calendar starts , translate the phrase QUOTED_STRING_1 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1617928	null	translate the words QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 whenever my calendar starts an event that is organized by QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum upcoming => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1617929	null	if an event on my calendar organized by QUOTED_STRING_0 is about to begin , translate QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1617930	null	when an event on my calendar organized by QUOTED_STRING_0 is about to start translate QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1617931	null	when an event organized by QUOTED_STRING_0 in my calendar is starting translate the phrase QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1617941	null	when i put a new pic on instagram , get dropbox files in reverse alpha order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617943	null	retrieve my dropbox files in reverse alphabetical order when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617946	null	make the dropbox file in reverse alpha order when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617948	null	get all dropbox files in reverse alphabetical order if i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617950	null	if i upload a picture on instagram then get dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617956	null	i need my dropbox files to be retrieved in reverse alphabetical order whenever i upload a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1617958	null	find my current location when the washington post puts a new article in the local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617959	null	whenever i upload a picture to instagram please pull up articles from the world section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1617962	null	when the washington post has a new article in their local section then send me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617963	null	when there is a new article in the local section of the washington post , retrieve my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617964	null	find my current location whenever the washington post publishes a new article in the local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617965	null	find my current location when there is a new article in the local section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617966	null	find articles in the washington post when i upload a picture on instagram in the world section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1617967	null	can you retrieve articles from the world section of the washington post whenever i put a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1617968	null	find articles in the world section of the washington post whenever a new photo is uploaded to instagram by me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1617969	null	find articles in the world section of the washington post when i upload a picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1617971	null	anytime i get an email marked as important please display the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1617972	null	show me the weather in LOCATION_0 whenever i get an email that is marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1617973	null	whenever a new article appears in the local section of the washington post please figure out my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1617974	null	send me the weather in LOCATION_0 when i receive an important flagged email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1617976	null	show me the weather in LOCATION_0 when i receive an email marked important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1617977	null	when i get an email marked important tell me the weather in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1617978	null	when my instagram has a new photo uploaded by me get articles published by the new york times this week	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( week ) ;
turking/1617979	null	when i upload a new instagram photo then retrieve articles from the washington post world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1617980	null	show me all the articles published by the new york times this week whenever i upload an image to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( week ) ;
turking/1617982	null	grab new york times articles published this past week whenever i post a new instagram photo .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( week ) ;
turking/1617983	null	retrieve new york times articles published this week when i upload a picture to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( week ) ;
turking/1617984	null	when i upload a picture to instagram , i want you to retrieve new york times articles published this week .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( week ) ;
turking/1617985	null	whenever i push out a new instagram photo , get me all the new york times articles published this week .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( week ) ;
turking/1617998	null	get articles in the washington post in section local when i reach here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618000	null	when i arrive here get articles in the washington post local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618001	null	get articles from the local section of the washington post when i reach here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618003	null	when i get here show me articles from the local section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618005	null	get sports washington post 's articles when i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1618006	null	when i post a picture to instagram show me the sports washington post 's articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1618007	null	get sports articles from the washington post when i upload a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1618008	null	grab the weather when there 's an event about to start on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.weather . current ( ) ;
turking/1618009	null	when an event is about to begin on my icalendar get the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.weather . current ( ) ;
turking/1618010	null	i want to see an article from the sports section of the washington post when i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1618011	null	get the weather in here when an event is about to start in my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.weather . current ( ) ;
turking/1618030	null	when an email is received that has been marked important then tell me the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1618032	null	show my body measurements from fitbit when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getbody ( ) ;
turking/1618034	null	if somebody i 'm following puts out a tweet fetch my fitbit measurements .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getbody ( ) ;
turking/1618036	null	get fitbit body measurements when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getbody ( ) ;
turking/1618038	null	inform me of my body measurements from fitbit when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getbody ( ) ;
turking/1618047	null	fetch my fitbit measurements when there 's a new tweet from somebody i 'm following .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getbody ( ) ;
turking/1618109	null	when i put up a new picture on instagram show me today 's date	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1618110	null	retrieve the current day when i upload pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1618113	null	as soon as i upload an instagram picture let me know what day it is .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1618121	null	if i put up a picture on my instagram fetch me what day is today .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1618123	null	show my fitbit steps whenever a new washington post article posts in the opinions section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1618126	null	get my fitbit steps when there is a new washington post opinion article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1618128	null	when there is a new opinions article in the washington post , display my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1618131	null	when i get here play URL_0 on the lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618133	null	play link URL_0 on my lg tv when i reach this destination	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618134	null	when i get here play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618135	null	when i get home play the URL_0 link on the lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618138	null	play URL_0 on my lg tv when i get here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . current_location => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618151	null	send an email to EMAIL_ADDRESS_0 automatically with the subject QUOTED_STRING_0 with message the text of new tweets from anyone i follow using my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1618152	null	using my gmail send an email automatically to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 with message the text of new tweets from anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1618155	null	using my gmail send an email automatically to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 with message the text of new tweets from anyone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1618156	null	lower speaker volume when fitbit steps change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1618159	null	send an email to EMAIL_ADDRESS_0 from my gmail account using the subject QUOTED_STRING_0 and the body with the text of anyone i follow 's new tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1618161	null	when steps on fitbit change lower down speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1618162	null	make my speaker softer when the steps update on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1618163	null	use my gmail to send an email with the subject of QUOTED_STRING_0 over to EMAIL_ADDRESS_0 with the text of the message stating the newest tweets from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1618164	null	send an email automatically to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 with message the text of new tweets from anyone i follow using my gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1618165	null	make my speaker softer when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1618166	null	whenever my fitbit steps change make my speaker softer	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1618167	null	when there 's an update to my fitbit 's steps , lower my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1618199	null	if someone dms me fetch the pictures i took here from instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1618200	null	when someone dms me pull up the instagram photos i took here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1618201	null	if someone sends me a dm then get my instagram pictures that i took here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1618202	null	show my instagram pictures that i took here if someone sends me a direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1618204	null	if i get a tweet then show me the language QUOTED_STRING_0 is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1618205	null	if a person dm 's me then you show me my ig photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1618206	null	let me know the language QUOTED_STRING_0 is written it when someone sends me a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1618208	null	find out the language of QUOTED_STRING_0 when a person tweets me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1618209	null	if i get a tweet tell me what language QUOTED_STRING_0 is in .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1618212	null	i need to know the language of QUOTED_STRING_0 anytime that someone tweets me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1618215	null	when i get a tweet tell me the language of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1618245	null	when an event time changes on my icalendar then create a new empty folder in my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1618247	null	create a new empty folder to dropbox whenever the time of an event on my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1618248	null	make a new empty folder in drop boy anytime an event times changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1618257	null	if the event time on my icalendar changes , then create a new folder on dropbox that is empty	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1618270	null	when the washington post uploads a new article to the business section give me my fitbit body measurements	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.fitbit . getbody ( ) ;
turking/1618271	null	get my fitbit body measurements whenever there is a new article in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.fitbit . getbody ( ) ;
turking/1618273	null	if you see a new article in the washington post 's business section , gather my body measurements as monitored by fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.fitbit . getbody ( ) ;
turking/1618275	null	if there is a new article in the business section of the washington post retrieve my body measurements from fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.fitbit . getbody ( ) ;
turking/1618296	null	by the time i get to work , show me the local section on the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618298	null	when i get to work , send me the local articles on the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618299	null	when i get to my work provide me with washington post articles that are local	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618301	null	use my fitbit measurements and automatically post a twitter post stating them .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getbody ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1618302	null	do an auto post of an image of my new body measurements on my fitbit to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getbody ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1618303	null	put a picture on twitter with my body measurements from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getbody ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1618304	null	put up a pic on twitter with my fitbit body measurements	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getbody ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1618307	null	post a photo of my new body measurements from my fitbit on twitter automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getbody ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1618308	null	i want the local washington post articles when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618309	null	i want a picture posted on twitter that tells my new body measurements as seen on fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getbody ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1618318	null	retrieve my body measurements from fitbit when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.fitbit . getbody ( ) ;
turking/1618319	null	my body measurements from fitbit retrieve when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.fitbit . getbody ( ) ;
turking/1618320	null	when i leave here get my body measurements from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.fitbit . getbody ( ) ;
turking/1618322	null	get my my body measurements from fitbit when i leave this location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.fitbit . getbody ( ) ;
turking/1618323	null	get my fitbit body measurements after i leave this current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.fitbit . getbody ( ) ;
turking/1618324	null	github issue when someone comments stop following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1618325	null	stop following USERNAME_0 on twitter when someone makes a comment on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1618326	null	when i have left retrieve my body measurements from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.fitbit . getbody ( ) ;
turking/1618327	null	stop following USERNAME_0 on twitter when someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1618328	null	when someone comments on a github issue cease following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1618333	null	no longer follow USERNAME_0 on twitter when anyone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1618334	null	when a person comments on a github issue stop following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1618338	null	i want to see the local articles on the washington post whenever i get to work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618341	null	whenever there is a new article in the business section of the washington post get my bodily measurements from the fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.fitbit . getbody ( ) ;
turking/1618343	null	give me local articles from the washington post once i arrive at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1618350	null	set my speaker louder when my fitbit steps have updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618351	null	turn my speaker louder when there are updates to my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618354	null	when my steps on my fitbit update set my speaker louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618356	null	put URL_0 on my lg tv whenever there is a tweet by someone i 'm following	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618357	null	play URL_0 on my lg tv as soon as someone i follow puts up new tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618358	null	play URL_0 on my lg tv when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618359	null	if there is a new tweet by someone i follow pull up URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618360	null	when there is a tweet by someone i follow play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618369	null	put URL_0 up on my lg tv when there 's new tweets from someone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618376	null	let me watch URL_0 via lg tv is i change location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618378	null	whenever i change location , i want to view the link URL_0 on lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618379	null	play link URL_0 on my lg tv when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618381	null	when my location is shifted play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618382	null	please play the link URL_0 on my lg tv whenever i change my location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618390	null	raise speaker volume when icalendar is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618392	null	make speaker louder when icalendar is no longer the same	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618395	null	increase volume on my speaker when something changes on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618396	null	when i change my location you are to play the link URL_0 to my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618400	null	if something changes on my icalendar increase volume on my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618401	null	should an icalendar event change , increase the volume of my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618403	null	increase the volume of my speaker when an icalendar event changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1618404	null	when rss feed has a new post , retrieve fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618405	null	if you find a new post on the rss feed give me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618406	null	retrieve my own steps from fitbit if a new post on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618407	null	if there is a new post on rss feed retrieve my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618408	null	retrieve my steps from fitbit once there is a new post on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618411	null	retrieve my fitbit steps if you see a new post on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618415	null	i walk more than NUMBER_0 steps do a random number between NUMBER_1 and NUMBER_2 if	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_2 , low = NUMBER_1 ) ;
turking/1618416	null	show me a random number between NUMBER_0 and NUMBER_1 if i happen to walk more than NUMBER_2 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_2 => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1618418	null	if i walk more than NUMBER_0 steps give me a random number between NUMBER_1 and NUMBER_2	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_2 , low = NUMBER_1 ) ;
turking/1618420	null	using the range of NUMBER_0 and NUMBER_1 , pick a random number in said range if i walk more than NUMBER_2 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_2 => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1618424	null	if i walk NUMBER_0 or more steps , show me a random number between NUMBER_1 and NUMBER_2	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_2 , low = NUMBER_1 ) ;
turking/1618429	null	i need you to give me a random number between NUMBER_0 and NUMBER_1 if i walk more than NUMBER_2 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_2 => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1618434	null	i want you to automatically e-mail the captions to my new instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_email ( message = caption ) ;
turking/1618435	null	i want you to automatically send the caption of my new instagram pictures by e-mail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_email ( message = caption ) ;
turking/1618436	null	if the location of any events on my icalendar changes , post the update to my twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1618437	null	send my new instagram photo and image captions automatically using my email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_email ( message = caption ) ;
turking/1618438	null	using email , send the captions of all my new instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_email ( message = caption ) ;
turking/1618439	null	send the caption of my new instagram pictures through email automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_email ( message = caption ) ;
turking/1618444	null	through email , send the caption of my new instagram pictures automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . send_email ( message = caption ) ;
turking/1618446	null	reply automatically to EMAIL_ADDRESS_0 mentioning my new calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1618448	null	any time the location of an event on my icalendar changes , post that to my twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1618449	null	when an icalendar event location changes post them to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1618453	null	post the info on twitter when an event location changes on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1618455	null	send any new calendar events with an automatic reply to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1618456	null	anytime a new calendar event is added , automatically reply to EMAIL_ADDRESS_0 with the event	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1618457	null	mention my new calendar events by replying automatically to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1618465	null	tell me my schedule on icalendar if i receive a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618469	null	show me my schedule on icalendar when i receive a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618472	null	when i get a message on slack show me my schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618478	null	when i receive a message on slack , pull up icalendar and my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618479	null	show my my schedule on icalendar when i receive a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618482	null	share QUOTED_STRING_0 on linkedin when i get a tweet from USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/1618485	null	when i get USERNAME_0 's tweet , put QUOTED_STRING_0 on linkedin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/1618486	null	if i receive a tweet from USERNAME_0 share QUOTED_STRING_0 on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/1618488	null	should i ever get a tweet from USERNAME_0 share QUOTED_STRING_0 over on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/1618489	null	on linkedin share QUOTED_STRING_0 if i receive a tweet from USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/1618494	null	share QUOTED_STRING_0 on linkedin when a tweet from USERNAME_0 is received .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.linkedin . share ( status = QUOTED_STRING_0 ) ;
turking/1618504	null	when i get home give me washington post 's world articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1618506	null	when i reach home give me world washington post 's articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1618510	null	i 'd like to see washington post 's world articles when i arrive at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1618511	null	i want world articles from washington post when i arrive at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1618512	null	give me the step count from fitbit if an event on my icalendar has its time change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618514	null	whenever an event 's time changes on my icalendar , retrieve the current steps from my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618516	null	retrieve my fitbit step count any time an icalendar event time changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618518	null	give me washington post 's articles from the world section when i reach home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1618519	null	if the scheduled time for an icalendar event is modified , show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618520	null	when the time changes for an event in icalendar , get my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618531	null	on github , when USERNAME_0 creates a new issue , provide me with events from my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618532	null	when USERNAME_0 opens a github issue let me know my icalendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618538	null	display for me the events on my icalendar when a new issue is opened by USERNAME_0 on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618580	null	tell me my current location when i get an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618583	null	if i get an email marked as important tell me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618587	null	whenever i receive an email marked important tell me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618589	null	when i receive an email marked as important inform me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1618618	null	get my fitbit steps when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618619	null	if i get a tweet then retrieve my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618622	null	i want you to get my steps from fitbit whenever i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618624	null	whenever i get a tweet retrieve my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1618635	null	translate the phrase QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 any time there is a new article published in the lifestyle section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1618636	null	when a new article posts to the lifestyle section of the wall street journal translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1618637	null	if the wall street journal publishes a new article in the lifestyle section translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1618638	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when a new article is posted to the lifestyle section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1618639	null	when a new article is posted to the lifestyle section of the wall street journal , translate the term QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1618646	null	whenever the wall street journal publishes a new article in the lifestyle section translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1618692	null	if someone is commenting on a github issue go and grab my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1618742	null	go and get my dropbox files in reverse alphabetical order when there is someone commenting on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1618743	null	whenever someone i follow tweets i want my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618744	null	if someone i follow tweets then show me my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618745	null	send me my calendar events when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618752	null	whenever a new article is posted in the sports section of the washington post display the weather at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1618754	null	i want my calendar events when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618755	null	notify me of the weather while i 'm at work whenever washington post puts a new article up in the sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1618756	null	display the events from my calendar any time someone that i follow makes a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618757	null	when there 's something new in washington post sports section show me what the weather is like in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1618760	null	retrieve my dropbox files in reverse alphabetical order when someone comments on a github issue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1618763	null	if there is a comment on a github issue , get my dropbox files in reverse abc order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1618765	null	any time someone i follow on twitter tweets show me my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618769	null	find my dropbox files in reverse alphabetical order when someone comments on a github issue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1618772	null	i want to be shown the weather at work whenever there is a new article in the sports section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1618810	null	when there is a new article in the sports section of the washington post i want to be shown the weather at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1618834	null	inform me of any new video posts on youtube channels i follow via email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1618835	null	email EMAIL_ADDRESS_0 over my gmail if any of the youtube channels i follow has a new video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1618836	null	send a new email to EMAIL_ADDRESS_0 for any new video posts on youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1618839	null	send an email to EMAIL_ADDRESS_0 using my gmail whenever a new video is posted from a youtube channel i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1618841	null	when someone i follow posts a new youtube video , send me an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1618845	null	whenever there are new videos on my followed youtube channels send an email to EMAIL_ADDRESS_0 over gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1618905	null	once i get to work download PATH_NAME_0 from dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1618912	null	download PATH_NAME_0 from dropbox when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1618913	null	download PATH_NAME_0 from dropbox when i reach my work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1618914	null	when work is reached , download PATH_NAME_0 from my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1618915	null	when i get to work download this dropbox file PATH_NAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1618917	null	grab PATH_NAME_0 from dropbox when i arrive at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1618921	null	i 'd like to be sent today 's new york times articles whenever a tweet comes to me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1618922	null	give me the articles from today 's new york times when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1618924	null	when i receive a new tweet , show me the articles from the new york times from today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1618925	null	when i get a treat , send me the articles from today from the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1618926	null	when a tweet is received by me get today 's articles in the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1618928	null	when i get a tweet retrieve the articles from today 's new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1618930	null	any time there 's a chance in my icalendar , give me all the tweets about HASHTAG_0 from the people i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1618934	null	give me the tweets about HASHTAG_0 from the people i follow when there 's a change on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1618935	null	i want to see all tweets from the people i follow that are tagged HASHTAG_0 every time there 's a chance in my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1618936	null	retrieve tweets about HASHTAG_0 from people i follow when an icalendar change happens	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1618937	null	i 'd like you to automatically post to facebook every time the thermostat posts a new humidity .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1618938	null	when something on my icalendar changes get tweets about HASHTAG_0 from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1618941	null	post on facebook the new humidity reported by the thermostat automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1618954	null	show calendar events when reddit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618956	null	pull up my calendar events when the front page of reddit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618957	null	every time the reddit front page updates send me my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618959	null	when the front page on reddit updates i want my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618960	null	when i change locations , show me my calendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1618961	null	i need to know my event calendar for QUOTED_STRING_0 when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1618963	null	when reddit updates the front page , give me calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618964	null	send my calendar events when reddit updates their front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1618973	null	when a change is detected on my icalendar , give me tweets about HASHTAG_0 from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1618979	null	once my location changes , retrieve email messages with EMAIL_ADDRESS_0 as sender	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1618981	null	fetch my emails from EMAIL_ADDRESS_0 when i leave from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1618982	null	give me messages sent via email from EMAIL_ADDRESS_0 when i move from this location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1618983	null	when i leave here get all of my emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1618986	null	gather all the emails from sender EMAIL_ADDRESS_0 when i leave .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1618989	null	let me watch URL_0 on my lg television whenever i add a pic to my instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618990	null	retrieve my emails from EMAIL_ADDRESS_0 after i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1618992	null	if i post a photo to instagram i want this to play on my lg television URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618995	null	when i upload a photo to instagram please play on my lg tv the link URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1618997	null	whenever i upload a new picture on instagram load up the link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1619000	null	please play the link URL_0 to my lg tv whenever i have uploaded a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1619005	null	play the link URL_0 on my lg tv whenever i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1619078	null	when my fitbit steps are updated show me any important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1619079	null	i want to see important emails when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1619080	null	i want to see my important email messages whenever there is a change to my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1619081	null	whenever the steps of my fitbit are updated , let me see any essential emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1619084	null	display my alphabetized dropbox files any time i am sent an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619088	null	when the washington post publishes an article in the opinion sections give me QUOTED_STRING_0 on bing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1619089	null	when an article in the opinion section of the washington post is published give me the QUOTED_STRING_0 on bing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1619091	null	when the washington post publishes an article in the opinions section give me QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1619092	null	tell me QUOTED_STRING_0 on bing when the washington post puts out an article in the opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1619093	null	on bing give me QUOTED_STRING_0 when opinions section publishes an article in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1619095	null	when the opinions section of the washington post publishes article give me QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1619103	null	when in home if it starts raining tell me my QUOTED_STRING_0 icalendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619104	null	let me know of my icalendar events at QUOTED_STRING_0 when it starts raining in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619105	null	when it starts raining in home tell me my icalendar events at QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619106	null	at QUOTED_STRING_0 tell me my icalendar events when rain starts at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619107	null	tell me my icalendar events at QUOTED_STRING_0 when it rain starts in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619108	null	at home when rain starts tell me my icalendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619118	null	if i get an email that is labeled as important , let me view my dropbox files in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619124	null	i 'd like to see my dropbox files in alphabetical order any time i get an email set as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619128	null	when i get an email marked as important i want to see my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619167	null	give me my location whenever a video from the youtube channels i follow posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619171	null	on youtube channels i follow when there is a new video tell me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619175	null	tell me my current location when there is a new video on channels i follow on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619176	null	if a video from any of my followed youtube channels posts tell me my location currently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619178	null	if there 's a new video from subscribed yt channels tell me the current location i 'm at	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619188	null	list out my dropbox files in alphabetical order anytime i get a fresh email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619189	null	list my dropbox files in alphabetical order when i get a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619194	null	whenever an email comes through on gmail , please list my dropbox files in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619203	null	if i get gmail messages , list for me in abc order my files on dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619207	null	i would like to see my icalendar events organized by QUOTED_STRING_0 retrieved whenever a politics article is in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1619208	null	show my icalendar events organized by QUOTED_STRING_0 when a new article appears in the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1619209	null	when there 's a new article in the washington post politics section get my icalendar events that i ' v put under QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1619210	null	whenever the washington post publishes a political article , show me the events on icalendar organized by QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1619213	null	when i get an email through gmail inform me of my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1619221	null	retrieve my calendar events when i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1619223	null	retrieve calendar events when i go to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1619224	null	any time the washington post publishes a new article in the politics section please display my icalendar events organized by QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1619225	null	i want to get my calendar events whenever i commute to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1619226	null	when i leave work update my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1619227	null	if i exit work download my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1619229	null	show me my icalendar events organized by QUOTED_STRING_0 whenever washington post politics section posts a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1619233	null	bring my calendar events when i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1619238	null	if the temperature in here drops below freezing please shut off my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1619239	null	turn off my lg tv whenever the temperature in here is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1619240	null	if the temperature in this room goes below freezing switch off my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1619242	null	switch the lg tv off whenever the temperature goes below freezing in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1619244	null	if the temperature dips below freezing in here , switch off my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1619252	null	switch off my lg tv when the temperature has gone below freezing in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1619264	null	when an article is published in the washington post in the section about sports , turn the volume down on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1619266	null	i want my lg tv to be less loud when there is a washington post sports section article published	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1619268	null	should a sports article be published by the washington post , make my tv quieter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/1619270	null	lower the volume of my lg tv whenever a new article from the washington post is published in sports	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1619271	null	if the washington post publishes a sports article , quiet down my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1619273	null	set my lg tv to go quieter if a newly published article in the sports section by the washington post is found	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1619275	null	let me have the translation of QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 when i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1619276	null	give me the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 when i get an email marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1619278	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 whenever i get an important marked email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1619280	null	you are to translate to GENERIC_ENTITY_tt:iso_lang_code_0 the words QUOTED_STRING_0 whenever i received an important marked email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1619284	null	get my fitbit steps once an icalendar event ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.fitbit . getsteps ( ) ;
turking/1619285	null	retrieve my steps from fitbit when an event on my icalendar ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.fitbit . getsteps ( ) ;
turking/1619287	null	if an icalendar event ends , give me fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.fitbit . getsteps ( ) ;
turking/1619288	null	when an event on my icalendar ends give me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.fitbit . getsteps ( ) ;
turking/1619290	null	i 'd like to know what my steps on fitbit are when my icalendar event ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.fitbit . getsteps ( ) ;
turking/1619295	null	when the icalendar event is done then show me my steps on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.fitbit . getsteps ( ) ;
turking/1619327	null	auto post a pic on twitter saying new slack messages i got that is in last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter date >= $start_of ( h ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619333	null	automatically post a picture on twitter saying new slack messages i received in the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter date >= $start_of ( h ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619334	null	when i receive new slack messages automatically post a picture on twitter saying the new slack messages received in the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter date >= $start_of ( h ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619336	null	post a picture on twitter that says new slack messages i received in the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter date >= $start_of ( h ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619362	null	if a person i follow replies to USERNAME_0 on twitter get my emails labeled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1619367	null	if anyone i follow replies to USERNAME_0 on twitter fetch me my emails labeled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1619370	null	as soon as someone i follow sends a reply to USERNAME_0 on twitter get me my emails with the QUOTED_STRING_0 label .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1619374	null	make the volume on my lg tv louder when i get mail on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1619375	null	when i get mail on gmail make my lg tv volume louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1619378	null	on gmail when i receive an email raise volume on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1619382	null	when i get an email on gmail , turn up the volume on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1619384	null	raise volume on my lg tv when email is received on my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1619389	null	tweet a picture with caption automatically to my new dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619390	null	tweet an image with a caption when my new dropbox files are in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619508	null	whenever someone comments on a github issue please locate the price of an uber to LOCATION_0 from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.uber . price_estimate ( end = LOCATION_0 , start = $location . home ) ;
turking/1619509	null	find the price of an uber from my home to LOCATION_0 anytime someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.uber . price_estimate ( end = LOCATION_0 , start = $location . home ) ;
turking/1619512	null	i want to know the cost of an uber that will take me from home to LOCATION_0 any time a github issue gets a comment .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.uber . price_estimate ( end = LOCATION_0 , start = $location . home ) ;
turking/1619517	null	follow USERNAME_0 on twitter if something changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1619534	null	if anything on my icalendar changes , follow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1619535	null	follow USERNAME_0 on twitter if my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1619548	null	when rain stops at my location display the washington post national	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1619549	null	when it is no longer raining here bring up the washington post national	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1619550	null	if it stops raining here let me see washington post national .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1619555	null	automatically send an email to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 with message my new dropbox files in reverse alphabetical order using my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1619556	null	become a follower of USERNAME_0 whenever there 's a change on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1619560	null	i want to see washington post national as soon as it stops raining here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1619577	null	auto send an email to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 with message my new dropbox files in reverse alphabetical order using my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1619591	null	post a picture on twitter saying QUOTED_STRING_0 when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1619592	null	post a picture on twitter that says QUOTED_STRING_0 whenever my fitbit steps update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1619593	null	upload a picture on twitter with QUOTED_STRING_0 whenever my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1619594	null	when there are new fitbit steps updated upload a twitter picture with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1619598	null	using my gmail send an email to EMAIL_ADDRESS_0 with my new dropbox files in reverse alphabetical order as the message and QUOTED_STRING_0 as the subject line	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1619604	null	if i update my fitbit steps , post a picture on twitter that say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1619608	null	grab all unimportant emails once the snow stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_important = false ) ;
turking/1619610	null	when the snow stops in LOCATION_0 gather my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_important = false ) ;
turking/1619612	null	when it stops snowing in LOCATION_0 get my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_important = false ) ;
turking/1619613	null	once fitbit updates my steps grab my instagram photos i took at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1619615	null	when my fitbit steps are updated gather the instagram pictures i took at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1619619	null	when my fitbit steps update , get the instagram pictures i took at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1619621	null	send me my unimportant emails when it stops snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_important = false ) ;
turking/1619625	null	collect my emails marked unimportant when snow stops falling in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( is_important = false ) ;
turking/1619629	null	when my steps on fitbit update retrieve the pictures on instagram that i took at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1619635	null	after updating my fitbit steps , retrieve my instagram pictures i took at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . home ;
turking/1619706	null	when i get a tweet fetch me political washington post articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1619709	null	i want washington post politics articles whenever i get a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1619717	null	send me political washington post 's articles every time i get a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1619729	null	order a caramel iced mocha when i receive any tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , iced = true ) ;
turking/1619730	null	if i receive a tweet then get me an iced caramel mocha	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , iced = true ) ;
turking/1619731	null	if i received a tweet then send an order for an iced caramel mocha	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , iced = true ) ;
turking/1619732	null	order an iced caramel mocha if i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , iced = true ) ;
turking/1619738	null	if someone sends me a tweet , order an iced caramel mocha	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , iced = true ) ;
turking/1619739	null	order me an iced caramel mocha when i 've received a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , iced = true ) ;
turking/1619741	null	when my calendar has an event in the QUOTED_STRING_0 , tell me my location when it 's about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619742	null	make my bluetooth speaker NUMBER_0 % when there 's a new article in the lifestyle part of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1619743	null	give me my current location when an event on my calendar at location QUOTED_STRING_0 is about to begin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619744	null	tell my current location when an event on my calendar in the QUOTED_STRING_0 is going to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619745	null	when the washington post has a new article in the lifestyle section , set my bluetooth speaker to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1619746	null	provide me with my current location when an event on my calendar is about to begin at location QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619748	null	set the bluetooth speaker volume to NUMBER_0 % whenever a new article is posted to the lifestyle section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1619753	null	inform me of the holidays in the GENERIC_ENTITY_tt:country_0 when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1619754	null	remind me of the holidays of the GENERIC_ENTITY_tt:country_0 when i am moving .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1619755	null	whenever i move , inform me of holidays in the GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1619756	null	tell me the holidays in the GENERIC_ENTITY_tt:country_0 when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1619757	null	notify me of GENERIC_ENTITY_tt:country_0 holidays when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1619778	null	whenever i get an email from gmail , let me see tweets from any person that i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1619781	null	tell me tweets from anyone that i follow if i receive a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1619782	null	if i receive an email on gmail , bring me tweets from any person that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1619783	null	the moment it starts raining grab my recently changed dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1619787	null	show the tweets from anybody i follow when i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1619789	null	retrieve my dropbox files that most recently changed when it begins raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1619792	null	show me tweets from anyone i follow if i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1619793	null	when it starts raining at work , please get my most recent dropbox files .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1619797	null	in the event it begins raining at work then fetch my dropbox files that most recently changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1619798	null	as soon as i obtain an email on gmail , display tweets from people that i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1619804	null	get my most recent dropbox files when it starts raining at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1619811	null	when an event is about to begin on my icalendar then proceed to play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1619814	null	i want to see URL_0 on my lg tv when an event begins on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1619816	null	play URL_0 on my lg tv when an event is about to start on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1619822	null	show me my instagram pictures when a new article shows up in the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( ) ;
turking/1619827	null	when there is a new washington post politics section article , show me instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( ) ;
turking/1619828	null	upon a new politics article in the washington post i would like to see my instagram images	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( ) ;
turking/1619831	null	when the washington post has a new politics article show me my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( ) ;
turking/1619837	null	show me my instagram photos when a new article is posted in the politics section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( ) ;
turking/1619839	null	when there is a new article in the washington post politics section , give me my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( ) ;
turking/1619901	null	give me slack messages i got in the last hour whenever i get an email from EMAIL_ADDRESS_0 marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1619902	null	get the slack message that i got in the past hour if i receive an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1619903	null	get slack messages in last hour , if important email from EMAIL_ADDRESS_0 comes in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1619906	null	if i get any important emails from EMAIL_ADDRESS_0 get the slack messages from the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1619908	null	when i receive an important email sent from EMAIL_ADDRESS_0 i want my slack messages from the last hour .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1619921	null	when it stops snowing in home send a photo via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . send_picture ( ) ;
turking/1619923	null	when it stops snowing at home send a picture through email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . send_picture ( ) ;
turking/1619924	null	send a picture through email when it stops snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . send_picture ( ) ;
turking/1619925	null	when a new article is posted to the sports section in the washington post choose a random number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1619927	null	when it ceases snowing in home send a picture via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . send_picture ( ) ;
turking/1619928	null	send a picture via email when the snow stops at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . send_picture ( ) ;
turking/1619929	null	when there is a washington post sports section new article , determine a number at random	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1619930	null	if it stops snowing in home i need a picture through email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.gmail . send_picture ( ) ;
turking/1619931	null	choose a random number whenever there is a new article in washington post sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1619932	null	pick a random number when washington post sports section has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1619937	null	pick a random number when there is a new article in washington post sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1619945	null	if new york times publishes a new article then get me the weather for my work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1619947	null	i would like to know what the weather in work si like whenever an article is published by the new york times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1619949	null	when a new article is made by the new york times , show me the weather in work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1619950	null	if a new article appears in the new york times can you show me the weather at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1619951	null	notify me of the weather at my work if new york times puts out a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1619955	null	display the weather at work whenever the new york times puts out a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1619960	null	whenever an article is posted in the washington post in the sports section choose a random number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1619961	null	retrieve my calendar events at QUOTED_STRING_0 in the event that someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619964	null	if a github issue gets a comment fetch my calendar events going on QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619965	null	show me my calendar events for QUOTED_STRING_0 whenever someone leaves a comment on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619967	null	pull up my QUOTED_STRING_0 calendar events if somebody leaves a comment on an issue on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619974	null	if someone makes a comment on a github issue then tell me my calendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619977	null	if someone makes a comment on a github issue go ahead and my get calendar events for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1619978	null	i want to know my current location when a new article is posted in the washington post but only in the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619979	null	if i receive an important email from EMAIL_ADDRESS_0 , retrieve the slack message sin the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1619980	null	notify me of my current location as soon as the washington post puts out a new article in their politics section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619981	null	if the washington post politics section puts out a new article alert me with my current position .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619982	null	whenever washington post has a new article in the politics section tell me my location currently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1619985	null	if there is a new article in the politics section of the washington post then let me know what my current location is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620001	null	when a new article is posted in the washington post politics section please go ahead and tell me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620011	null	retrieve my dropbox files in reverse alphabetical order when there is a new article in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620017	null	when a new article is placed in the washington post opinions section , set my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620019	null	USERNAME_0 on twitter should stop being followed when there is a new article in washington post national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1620021	null	stop following USERNAME_0 on twitter , when there is a new article in washington post national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1620024	null	stop following USERNAME_0 on twitter if a new article from washington post national section is seen	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1620027	null	if there 's a new article from washington post national section stop following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1620033	null	every time there is a new national section article posted to the washington post , stop following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1620035	null	stop following USERNAME_0 on twitter when a new article posts to washington post national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1620038	null	if there is a new article in the opinions section of the washington post , get my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620055	null	send me washington post powerpost blog posts if my steps on fitbit update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_blog_post ( section = enum powerpost ) ;
turking/1620056	null	when steps of fitbit are no longer the same retrieve washington post powerpost blog articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_blog_post ( section = enum powerpost ) ;
turking/1620058	null	bring up the washington post powerpost blog if my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_blog_post ( section = enum powerpost ) ;
turking/1620060	null	on dropbox tell me the temporary link to PATH_NAME_0 when it 's a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1620062	null	when it is a holiday notify me of the temporary link to PATH_NAME_0 on dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1620065	null	play URL_0 on my lg tv when the washington post powerpost blog has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620066	null	if there 's an update to my fitbit steps show me washington post powerpost blog posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_blog_post ( section = enum powerpost ) ;
turking/1620067	null	start URL_0 on my lg tv if there 's a new article on powerpost blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620068	null	have my lg tv play URL_0 when the washington post powerpost blog publishes a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620069	null	if the washington post 's powerpost blog publishes new articles have my lg tv play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620070	null	when a new article appears on the washington post powerpost blog begin playing URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620072	null	if powerpost by washington post puts up something new , start URL_0 on the lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum powerpost ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620076	null	show me the temporary link to the PATH_NAME_0 file over on dropbox during the holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1620082	null	email EMAIL_ADDRESS_0 when there 's an update in my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620084	null	send updated fitbit steps directly to my email EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620085	null	whenever fitbit steps update send an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620086	null	upon my fitbit steps updating forward the info to the email EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620087	null	when my fitbit steps are updated send an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620088	null	email EMAIL_ADDRESS_0 when the fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620090	null	send an email to EMAIL_ADDRESS_0 with the subject QUOTED_STRING_0 with the new time estimate for uber automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620091	null	send emails messages of new uber time estimate automatically to EMAIL_ADDRESS_0 using QUOTED_STRING_0 as the subject line .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620092	null	send EMAIL_ADDRESS_0 an email with the subject QUOTED_STRING_0 containing the new time estimate for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620095	null	send a new uber time estimate as an email to EMAIL_ADDRESS_0 with the subject of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620096	null	automatically email EMAIL_ADDRESS_0 the new time estimate for uber with the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620100	null	upon new time estimate regarding uber immediately send an email about it to EMAIL_ADDRESS_0 with the subject QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620101	null	show me the temporary link to PATH_NAME_0 on dropbox when it is a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.dropbox . open ( file_name = PATH_NAME_0 ) ;
turking/1620110	null	when my steps from fitbit update show me my emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620111	null	if my fitbit steps change , show me emails from EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620112	null	get me articles posted in the washington post powerpost blog when fitbit steps change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_blog_post ( section = enum powerpost ) ;
turking/1620114	null	i want to see emails from EMAIL_ADDRESS_0 whenever my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620117	null	when there is an update in my fitbit steps , i 'd like to view my EMAIL_ADDRESS_0 emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620118	null	report my emails received from EMAIL_ADDRESS_0 when fitbit updates my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620119	null	if my fitbit should update my steps , show me emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620155	null	when i move display my steps from my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1620157	null	when i move shoe me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1620159	null	whenever i move show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1620160	null	show me my fitbit steps when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1620162	null	use my fitbit to tell me my steps whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1620163	null	show me the instagram pictures i took here when there is a new video from youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1620164	null	if a youtube channel that i follow posts a new video then any instagram pictures that were taken here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1620165	null	show me today 's newest emails when i create a file in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1620166	null	show me the instagram pictures that i took if any youtube channel i follow has a new video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1620167	null	when i move anywhere show me my steps on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1620168	null	find tweets in reply to USERNAME_0 by anyone that i follow every time that i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1620169	null	get me any instagram pictures from here when a youtube channel that i follow puts up a new video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1620170	null	get tweets from people i follow in reply to USERNAME_0 when i get an email through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1620171	null	when one of the youtube channels that i follow posts a new video show me any instagram pics that i took here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1620174	null	if i receive an email to my gmail then get me tweets from anyone that i follow in in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1620175	null	i want to see the instagram photos i took here when there is a new video posted to the youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1620177	null	if i get a gmail email get all the tweets from people i follow that are in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1620180	null	if someone sends me a tweet then email EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620181	null	if i get a tweet email EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620182	null	send an email to EMAIL_ADDRESS_0 whenever i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620183	null	get the tweets from anybody i follow that reply to USERNAME_0 if i get a new gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1620185	null	send EMAIL_ADDRESS_0 an email if i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620186	null	any time i get an email through gmail obtain the tweets from people i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1620187	null	when i receive a tweet email EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620188	null	please email EMAIL_ADDRESS_0 every time i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1620346	null	if my gmail receives an email then play URL_0 back on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620347	null	play URL_0 on my lg tv each time i get something in my gmail account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620351	null	when i get an email on gmail play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620354	null	play URL_0 on the lg tv when i get a new gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620356	null	when i get my gmail play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620365	null	play URL_0 on my lg tv if i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1620377	null	i need a picture via email if there is a new washington post lifestyle article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_picture ( ) ;
turking/1620378	null	anytime a new article in the lifestyle section of the washington post appears , send a picture via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_picture ( ) ;
turking/1620379	null	send a picture via email when a new article in the lifestyle section of the washington post appears	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_picture ( ) ;
turking/1620381	null	send a photo through email if the lifestyle section of the washington post has a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_picture ( ) ;
turking/1620382	null	get washington post articles from the politics section if there is a new rss feed post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1620383	null	when there is a washington post lifestyle section new article , send me a picture through email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_picture ( ) ;
turking/1620384	null	if the rss feed detects a new post , then retrieve article from the washington post in politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1620386	null	if the rss feed finds new posts , i want the articles from the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1620387	null	if the rss feed has a new post then fetch me articles from the politics section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1620392	null	if the rss feed has a new post , pick up the washington post politics section articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1620396	null	when the lifestyle section of the washington post puts out a new article send out a photo through email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_picture ( ) ;
turking/1620400	null	when the rain starts in home get me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620402	null	get washington post articles from the politics section if a new post is on the rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1620403	null	if it starts raining at my home location , then retrieve my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620404	null	whenever it starts raining in home pull up my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620405	null	show my schedule to me whenever the rain starts in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620411	null	pull up my calendar schedule when the snow stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620412	null	when the snow in LOCATION_0 stops , show me my calendar schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620413	null	whenever it stops snowing in LOCATION_0 please display my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620414	null	if it stops snowing in LOCATION_0 , bring up my schedule on my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620415	null	display my calendar schedule when the snow in LOCATION_0 stops .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620420	null	i 'd like to see my calendar schedule if it stops snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620428	null	when there is a new article on the new york times then provide my current location please	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620430	null	notify me of my current location whenever there is a new article published in the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620437	null	i want any new article published in the new york times to result in my current location being give to me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620441	null	give my current location when there is a new article published by the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620466	null	when a new article gets posted in washington post sports section give me my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620467	null	when new washington post sports article gets put up produce my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620468	null	when the sports section on the washington post publishes something new send me my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620469	null	when the the washington post sports section adds something new send me my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620470	null	if a new article is posted in the sports section of the washington post give me my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620471	null	provide my schedule from my calendar when the washington post has a new sports section article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1620497	null	shut my lg tv if a new article is posted in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1620499	null	shut up my lg tv when there is a new article in washington post opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1620500	null	if there is a new article in washington post opinions section shut up my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1620501	null	show the reverse alphabetical order of my dropbox files if i get an email that is marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620505	null	if i receive an email marked as important retrieve my dropbox files in backward alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620506	null	arrange my dropbox files in reverse alphabetical order when i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620507	null	if i get an important email retrieve my dropbox files in the opposite of alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620513	null	get my dropbox files in reverse alphabetical order when i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620514	null	get my dropbox files in reverse alphabetical order when i get an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1620516	null	when there is a new article in washington post opinions section shut down my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1620527	null	post nasa 's new apod and post it on twitter with QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . apod ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1620530	null	upload nasa 's apod new post and put the caption as QUOTED_STRING_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . apod ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1620531	null	find new nasa 's apod and post it on twitter with QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . apod ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1620532	null	monitor any new apod 's by nasa then post them with a message that says QUOTED_STRING_0 to my twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . apod ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1620534	null	post the newest apod from nasa and caption it QUOTED_STRING_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . apod ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1620536	null	grab EMAIL_ADDRESS_0 emails if a person i follow replies to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620537	null	fetch all emails from the user EMAIL_ADDRESS_0 whenever there 's a reply to USERNAME_0 on twitter from someone that i currently follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620542	null	show me my emails from EMAIL_ADDRESS_0 when someone i follow replies to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620543	null	when someone i follow makes a reply to the user USERNAME_0 on twitter , retrieve any email from the address EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620544	null	get my emails from EMAIL_ADDRESS_0 whenever anyone i follow replied to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620546	null	if anyone i follow sends USERNAME_0 a reply on twitter show me my EMAIL_ADDRESS_0 emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1620550	null	when my location changes translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1620551	null	when my location changes , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1620552	null	translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 if my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1620553	null	if i leave this place , translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1620554	null	when i switch locations , change QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1620556	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 the moment my location is different	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1620594	null	tell me my current location if my icalendar events have a time change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620595	null	show me my current location when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620596	null	display my current location when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620597	null	when some event 's time changes on my icalendar tell me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620598	null	let me know my current location in the event that some event 's time changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620602	null	if event times change on my icalendar , let me know my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1620679	null	if the washington post opinions section has a new article , tell me what the room temperature is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620683	null	notify EMAIL_ADDRESS_0 saying QUOTED_STRING_0 when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620684	null	when there are new opinion section articles in the washington post , send me the temperature of the room	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620685	null	when the washington post publishes an article in the opinions section tell me the room temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620686	null	when the washington post publishes an article in the opinions section notify me the temperature in the room	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620687	null	reply QUOTED_STRING_0 to EMAIL_ADDRESS_0 when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620694	null	when the washington post opinions section publishes an article then give me temperature in the room	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1620697	null	send a message to EMAIL_ADDRESS_0 saying QUOTED_STRING_0 when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620698	null	QUOTED_STRING_0 said in reply to EMAIL_ADDRESS_0 when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620702	null	in reply to EMAIL_ADDRESS_0 when i move away from home send QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1620749	null	show me last slack messages when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . channel_history ( ) ;
turking/1620753	null	tell me what my most recent slack messages are when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . channel_history ( ) ;
turking/1620756	null	show me the last messages i received on slack when my fitbit updates my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . channel_history ( ) ;
turking/1620761	null	when my fitbit updates my steps get my last messages from slack for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . channel_history ( ) ;
turking/1620762	null	tell me recent slack messages when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . channel_history ( ) ;
turking/1620764	null	whenever my fitbit updates my steps tell me my most recent slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . channel_history ( ) ;
turking/1620767	null	let me see washington post articles from the world section whenever a channel i follow on youtube adds a video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1620769	null	anytime a video is posted to a youtube channel that i follow , i want to see articles from washington post world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1620772	null	whenever a new video posts from my followed youtube channels show me the world washington post 's articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1620780	null	i need to see the weather in LOCATION_0 when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1620783	null	when times of events change on my icalendar show the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1620786	null	if the time of an event changes on my icalendar then show the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1620787	null	show me the weather in LOCATION_0 whenever an event in icalendar changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1620789	null	send the text of new tweets automatically for anyone i follow with email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text ) ;
turking/1620791	null	automatically send text of any new tweet from anyone i follow via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text ) ;
turking/1620792	null	send the text of new tweets from all people i follow via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text ) ;
turking/1620794	null	grab the text of tweets from a person i follow and send them over email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text ) ;
turking/1620796	null	for all people i follow via email , send the text of new tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text ) ;
turking/1620834	null	if the event time changes in my calendar i would like the weather in LOCATION_0 shown	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1620859	null	using linkedin share my new dropbox files in alphabetical order automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.linkedin . share ( status = $result ) ;
turking/1620892	null	provide me with my dropbox files in alphabetical order when i exit LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1620893	null	alphabetize my dropbox files and send them to me when i 'm out of LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1620895	null	as soon as i 'm out of LOCATION_0 please send me all my dropbox files ordered alphabetically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1620896	null	send my dropbox files to me in alphabetical order when i leave LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1620897	null	in the place my recent instagram pics were taken , tell me when their humidity goes below NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter humidity <= NUMBER_0 ;
turking/1620898	null	alert me when humidity dips below NUMBER_0 in the place my most recent instagram photos were taken .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter humidity <= NUMBER_0 ;
turking/1620900	null	when i exit LOCATION_0 send my dropbox files in alphabetical order to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1620909	null	i want to be told every meme template if i receive an email that 's marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.imgflip . list ( ) ;
turking/1620911	null	tell me all the meme templates whenever i get an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.imgflip . list ( ) ;
turking/1620915	null	tell me the meme templates whenever i get an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.imgflip . list ( ) ;
turking/1620918	null	if an email is marked as important and i receive it show me every meme template .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.imgflip . list ( ) ;
turking/1620923	null	if the email i receive is marked important start reading all the meme templates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.imgflip . list ( ) ;
turking/1621025	null	if there 's a new article seen in the washington post national section play on my lg tv URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621026	null	play link URL_0 on my lg tv once there is a new article in washington post national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621027	null	whenever there is a new article in washington post national section , play this link on my lg tv - URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621032	null	if there happens to be a new article in washington post national section play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621033	null	when i upload a photo to instagram show me what my dropbox quota is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . get_space_usage ( ) ;
turking/1621039	null	get recent instagram pictures when something changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1621040	null	play link URL_0 on my lg tv whenever there is a new article in washington post national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621041	null	when anything changes on my icalendar , retrieve my recent instagram photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1621042	null	pull up dropbox quota when i upload to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . get_space_usage ( ) ;
turking/1621043	null	grab my recent pictures from instagram if my icalendar changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1621045	null	get my recent instagram pics when there is a change on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1621046	null	if something changes on my icalendar then get my latest instagram images	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1621047	null	if there 's a change to my icalendar fetch my most recent instagram photos .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1621050	null	find the language of QUOTED_STRING_0 anytime the temperature falls below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1621052	null	if it is below freeing in here find the language of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1621054	null	tell me what language QUOTED_STRING_0 is in as soon as the temperature dips below freezing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1621055	null	if it gets below freezing tell me the language of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1621088	null	any time there is a new article in the washington post national section get my dropbox files and post them in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621089	null	if there is a new article in the national section of the washington post , retrieve my dropbox files in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621101	null	retrieve my dropbox in reverse alphabetical order when there is a new article in the national section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621105	null	when there 's a post in the national section of the washington post obtain and post my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621106	null	retrieve my dropbox files in reverse alphabetical order when there is a new article in the national section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621107	null	retrieve my dropbox files in reverse alphabetical order when there is a new washington post article in the national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621136	null	when i leave home show me a nasa picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @gov.nasa . apod ( ) ;
turking/1621137	null	give me a nasa picture when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @gov.nasa . apod ( ) ;
turking/1621140	null	show me a nasa picture when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @gov.nasa . apod ( ) ;
turking/1621141	null	when i go away from my home , tell a nasa picture to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @gov.nasa . apod ( ) ;
turking/1621146	null	when i exit home show me a nasa photo	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @gov.nasa . apod ( ) ;
turking/1621150	null	display nasa pic when i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @gov.nasa . apod ( ) ;
turking/1621160	null	on slack tell me my emails with label QUOTED_STRING_0 when i receive a message in channel HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1621161	null	if i get a message on HASHTAG_0 from slack read me my emails with labels that have QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1621166	null	i want to have emails with QUOTED_STRING_0 shown to me if i get a message on the HASHTAG_0 channel on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1621169	null	when the HASHTAG_0 channel on slack sends me a message , notify me via email using the label QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1621174	null	in channel HASHTAG_0 when i receive a message tell me my emails with label QUOTED_STRING_0 on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1621228	null	play the link URL_0 when my weight changes on fitbit on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621229	null	play URL_0 on my lg tv whenever my weight changes on fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621230	null	when there is an update to my fitbit weight , play URL_0 on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621231	null	play the video URL_0 whenever my weight changes on fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/1621232	null	if my weight should change as shown on fitbit , play URL_0 on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621237	null	give me dropbox files in reverse alphabetical order when anyone send me a direct message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621239	null	when someone sends a direct message to me send to me my files from dropbox in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621240	null	if i get a dm then show my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621245	null	when a direct message is sent to me , put my dropbox files in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621247	null	when i get a direct message sent to me i want you to give me the files from my dropbox , but in reverse of the alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1621248	null	reveal my body measurements as seen on fitbit when i get direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.fitbit . getbody ( ) ;
turking/1621249	null	if someone direct messages , show my body measurement from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.fitbit . getbody ( ) ;
turking/1621250	null	i need body measurements from my fitbit , whenever i am direct messaged by someone .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.fitbit . getbody ( ) ;
turking/1621251	null	when someone sends me a dm show me my body measurements from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.fitbit . getbody ( ) ;
turking/1621253	null	when i get an email marked important , show me my recently changed dropbox files .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1621256	null	tell me which of my dropbox files have changed most recently when i get an important email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1621257	null	when i get an important email , show me most recently changed dropbox files .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1621258	null	if i should get an email marked as important , tell me about dropbox files that have changed recently .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1621259	null	when i am med , give me my fitbit body measurements .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.fitbit . getbody ( ) ;
turking/1621260	null	when i receive an email marked as important show me my dropbox files that recently changed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1621261	null	tell me about my dropbox files that have changed most recently whenever i get an email marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1621266	null	on fitbit , log my weight anytime i get an email in category primary log from EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.fitbit . recordweight ( ) ;
turking/1621272	null	log my weight should i get an email from EMAIL_ADDRESS_0 in the primary folder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.fitbit . recordweight ( ) ;
turking/1621273	null	log my weight on fitbit when i get an email from EMAIL_ADDRESS_0 in my primary inbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.fitbit . recordweight ( ) ;
turking/1621274	null	if EMAIL_ADDRESS_0 sent me an email in category primary log , then please go to fitbit and log my weight .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.fitbit . recordweight ( ) ;
turking/1621278	null	if i get an email from EMAIL_ADDRESS_0 in my primary inbox , log my weight on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.fitbit . recordweight ( ) ;
turking/1621305	null	post a facebook pic with QUOTED_STRING_0 caption when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1621312	null	any time i move make a post on facebook of a picture with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1621316	null	when my location changes retrieve the washington post politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1621317	null	retrieve washington post politics articles whenever my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1621318	null	when my location changes get me washington post politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1621319	null	where there is a change in my location , get the washington post politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1621320	null	get politics from the washington post when a change in my location happens	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1621321	null	when a new article goes up in the washington post opinions section , get the holidays in the GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1621322	null	get the washington post politics any time there 's a change in my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1621324	null	get me the GENERIC_ENTITY_tt:country_0 holidays whenever washington post adds an article to the opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1621327	null	whenever washington post publishes a new article to the opinions section retrieve the GENERIC_ENTITY_tt:country_0 holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1621337	null	get me the GENERIC_ENTITY_tt:country_0 holidays if a new opinions section article is in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1621339	null	if a new opinions section article in the washington post is available retrieve the holidays in the GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1621358	null	any time a new article goes up in the washington post opinions section , obtain the holidays in GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1621383	null	send an automatic message to EMAIL_ADDRESS_0 with QUOTED_STRING_0 as the subject and the message being the text of any new tweets from anyone that i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1621384	null	if a new tweet is posted from someone i follow , then put the text of the tweet in an email message to EMAIL_ADDRESS_0 under the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1621385	null	give an email message to EMAIL_ADDRESS_0 containing the latest tweets from those i follow , and title it QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1621386	null	send the text of new tweets from those i follow in an email to EMAIL_ADDRESS_0 subject line QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1621387	null	send an auto email to EMAIL_ADDRESS_0 , subject QUOTED_STRING_0 , message text of any new tweets from people i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1621388	null	deliver a message titled QUOTED_STRING_0 via email to EMAIL_ADDRESS_0 , and include tweets from people i follow as the text	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1621494	null	automatically post on facebook anytime estimates for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1621528	null	reload my new emails anytime my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1621529	null	update me on my new emails from today whenever my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1621530	null	when my fitbit steps update give me emails arrived today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1621531	null	whenever my fitbit steps updates , refresh my emails inbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1621532	null	i want to see my emails whenever fitbit steps updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1621534	null	give me emails that arrived today when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1621548	null	using new emails arrived today as the subject automatically post a twitter picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1621550	null	post a twitter picture with the subject of new emails arrived today automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1621552	null	auto post to twitter a picture which shows today 's new email subjects	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) filter date >= $start_of ( day ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1621553	null	from EMAIL_ADDRESS_0 retrieve my emails from there once the rain stops in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1621554	null	once it stops raining in the home retrieve my emails from the account EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1621555	null	after it finishes raining , send me EMAIL_ADDRESS_0 emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1621556	null	get me my EMAIL_ADDRESS_0 emails when the rain stops at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1621557	null	once the rain stops , send me emails from EMAIL_ADDRESS_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1621559	null	as soon as the rain stops at home let me have my EMAIL_ADDRESS_0 emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1621560	null	after i take above NUMBER_0 steps i want you to get pictures i took at work from instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1621561	null	i want my instagram pictures i took at work if i walk greater than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1621562	null	if i take NUMBER_0 steps or more , get me my work-related instagram photos .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1621563	null	get the photos from instagram i took at work as soon as you notice i took more than NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1621564	null	i want to see work-based instagram pics after walking NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1621567	null	if i walk more than NUMBER_0 steps grab the instagram pics i took while i was at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1621607	null	get washington post world when i acquire an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1621608	null	acquire the washington post world when i get an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1621610	null	when i get an email and it is marked as important get the washington post world	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1621612	null	when i get an email marked important , sent me washington post world .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1621613	null	in my inbox if there is an email and it is marked as important then get washington post world	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1621618	null	show me my unimportant emails whenever i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1621620	null	when i get a tweet send me my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1621622	null	display my unimportant emails anytime i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1621625	null	give me my unimportant emails when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1621626	null	show me my unimportant emails if i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1621629	null	whenever i get a new tweet please show me my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1621669	null	if some comments on a github issue then create a new folder in dropbox empty	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1621670	null	make a empty dropbox folder when someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1621679	null	create an empty dropbox folder whenever someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1621681	null	when someone comments on a github issue create a new empty folder in the dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1621683	null	using dropbox make an empty folder when someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1621686	null	when there is a comment on a github issue create a new empty folder in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1621715	null	when the washington post local section has a new article turn my lg tv off	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1621716	null	turn my lg tv off when there is a new article in the local section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1621718	null	turn off my lg tv when the washington post posts a new local article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1621719	null	turn off my lg tv whenever a new article appears in the local section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1621720	null	when someone i follow tweets give me national washington post 's articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1621721	null	when a new article is posted in washington post in the local section , turn off my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1621722	null	tell me national washington post 's articles when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1621723	null	can you turn off my lg tv any time the washington post publishes a new article in the local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1621726	null	if someone i follow tweets pull up washington post national articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1621729	null	show me national articles from the washington post when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1621752	null	show me tweets of anyone that i am following if my weight on fitbit changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621754	null	when my weight goes up or down on fitbit get me tweets from those i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621756	null	give me tweets coming from anybody i follow when my weight is altered on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621757	null	send me tweets from people i follow when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621758	null	when my weight changes on fitbit show me tweets from anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621760	null	when my fitbit weight changes show me tweets from anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621767	null	whenever i upload a picture to instagram show me tweets from anyone i 'm following that have QUOTED_STRING_0 in them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1621769	null	when i post a new instagram pic let me know the tweets of anyone that i follow if it contains QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1621770	null	look for tweets with QUOTED_STRING_0 from people that i follow on twitter if i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1621771	null	at the point of uploading a photo to instagram i want you to tell me about tweets that contain QUOTED_STRING_0 from anybody i 'm following .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1621772	null	if i upload a photo to instagram show me tweets from anybody i 'm following that have QUOTED_STRING_0 in them .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1621777	null	when i upload new instagram pics tell me when anyone that i follow has tweets containing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1621814	null	if an asteroid comes close to earth and passes , translate to GENERIC_ENTITY_tt:iso_lang_code_0 QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1621818	null	translate to GENERIC_ENTITY_tt:iso_lang_code_0 QUOTED_STRING_0 whenever an asteroid passes close to the earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1621822	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1621824	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 if an asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1621835	null	if an asteroid goes past the earth closely please translate to GENERIC_ENTITY_tt:iso_lang_code_0 the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1621843	null	pull up a picture from curiosity rover from DATE_0 whenever someone i am following tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . rover ( date_taken = DATE_0 ) ;
turking/1621844	null	retrieve a picture that was taken on DATE_0 from the curiosity rover whenever someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . rover ( date_taken = DATE_0 ) ;
turking/1621858	null	fetch me a curiosity rover picture taken DATE_0 if new tweets from someone i follow pop up .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . rover ( date_taken = DATE_0 ) ;
turking/1621863	null	get a picture from DATE_0 of curiosity rover when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . rover ( date_taken = DATE_0 ) ;
turking/1621864	null	get a curiosity rover picture from DATE_0 whenever there 's new tweets from someone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . rover ( date_taken = DATE_0 ) ;
turking/1621866	null	when there is a tweet from someone im following get a picture from curiosity rover that was taken on DATE_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . rover ( date_taken = DATE_0 ) ;
turking/1621918	null	when someone gets on github , i want my important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1621922	null	get all important email when someone makes a commit on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1621923	null	if someone commits to my github then get important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1621924	null	i need my important emails when someone commits to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1621925	null	get important emails if somebody commits to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1621931	null	if someone commits to github get important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1621938	null	raise the volume of the lg tv if there is a new article in the opinion section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1621939	null	increase the volume on the lg tv whenever there 's a new opinion article on the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1621940	null	increase the loudness of the tv whenever there 's a new washington post opinion article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/1621941	null	when the opinions section of the washington post has a new article , raise the volume of my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1621943	null	if i have moved away from home , get youtube channels from tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.youtube . channels_by_category ( category_id = enum from_tv ) ;
turking/1621944	null	get from tv youtube channels whenever i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.youtube . channels_by_category ( category_id = enum from_tv ) ;
turking/1621945	null	turn up the sound on my lg television anytime an article first appears in opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1621946	null	boost my lg tv 's sound if an article is published in washington post opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1621947	null	whenever i move away from the house , get info from tv youtube channels .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.youtube . channels_by_category ( category_id = enum from_tv ) ;
turking/1621948	null	update me on tv youtube channels whenever i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.youtube . channels_by_category ( category_id = enum from_tv ) ;
turking/1621949	null	get my pics from LOCATION_0 off of instagram if some that i follow sends a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1621950	null	if someone that i follow tweets , get the pictures on instagram that i took in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1621951	null	give me instagram photos from LOCATION_0 whenever i receive a tweet from a user that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1621952	null	if i move from my home address , i want the tv youtube stations	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.youtube . channels_by_category ( category_id = enum from_tv ) ;
turking/1621953	null	let me see the instagram pictures i made at LOCATION_0 whenever a followed person tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1621958	null	if i get a twitter message from somebody i follow , obtain my instagram pics taken in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1621974	null	whenever someone i follow on twitter tweets let me see the instagram photos i took at LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1621977	null	go and play URL_0 on my lg tv whenever my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621979	null	if my location should change start playing URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621980	null	if my location updates show URL_0 on the lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621981	null	on my lg tv , when my location changes , play URL_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1621982	null	show tweets from people i 'm following whenever my fitbit steps updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621983	null	tell me tweets from anyone i follow when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1621985	null	play URL_0 on my lg tv when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622040	null	i want to see markets section from wall street journal that were put in the last hour when the weather was below freezing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.wsj . get ( section = enum markets ) filter updated >= $start_of ( h ) ;
turking/1622041	null	when the weather is under freezing in LOCATION_0 , show me articles from the wall street journal market section from the last hour .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.wsj . get ( section = enum markets ) filter updated >= $start_of ( h ) ;
turking/1622043	null	i want to read wall street journal market articles published in the last hour when LOCATION_0 's temperatures are below freezing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.wsj . get ( section = enum markets ) filter updated >= $start_of ( h ) ;
turking/1622058	null	if the temperature in LOCATION_0 is below freezing , show me articles in the markets section of the wall street journal published in the last hour .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.wsj . get ( section = enum markets ) filter updated >= $start_of ( h ) ;
turking/1622117	null	on my lg tv play URL_0 when a change occurs on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622118	null	if icalendar changes play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622119	null	when my icalendar changes use my lg tv to play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622120	null	play URL_0 on my lg tv when my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622122	null	play URL_0 on my lg tv when my icalendar is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622124	null	play URL_0 on lg tv when there is a change on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622135	null	when i leave current location order me a black caramel mocha	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , extras = enum none ) ;
turking/1622138	null	if i change locations then start a black caramel mocha order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , extras = enum none ) ;
turking/1622140	null	get me a black caramel mocha when im no longer here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , extras = enum none ) ;
turking/1622142	null	please get a black caramel mocha for me once i leave this place .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , extras = enum none ) ;
turking/1622145	null	place an order for a black caramel mocha when i leave this location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , extras = enum none ) ;
turking/1622146	null	order me a black caramel mocha if i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @org.thingpedia.demo.coffee . order ( beverage = enum caramel_mocha , extras = enum none ) ;
turking/1622159	null	tweet a picture with caption QUOTED_STRING_0 if someone posts a comment regarding a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622161	null	when someone provides comments to a thread about a github issue , tweet a picture with caption QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622164	null	tweet a picture captioned QUOTED_STRING_0 when a comment is made on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622167	null	when a github issue is commented on use the caption QUOTED_STRING_0 to tweet a picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622175	null	tweet a picture with the comment QUOTED_STRING_0 every time someone mentions a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622200	null	post a photo to tumblr saying QUOTED_STRING_0 when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.tumblr.blog . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622201	null	after i move away from home use tumblr to post a picture that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.tumblr.blog . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622206	null	post QUOTED_STRING_0 on tumblr whenever i move away .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.tumblr.blog . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622207	null	when i move away from home use the caption QUOTED_STRING_0 and post a picture to tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.tumblr.blog . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1622210	null	if a new article is shown in the business section of the washington post , tell me the language that QUOTED_STRING_0 is written in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1622215	null	tell me which language QUOTED_STRING_0 is written in whenever the washington post business section has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1622220	null	give me the language QUOTED_STRING_0 is written in when there is a new article in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1622224	null	show me that language that QUOTED_STRING_0 is written in whenever there 's a new post in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1622242	null	i want phd comics when it starts to rain in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.phdcomics . get_post ( ) ;
turking/1622245	null	let me see phd comics with the rain starts in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.phdcomics . get_post ( ) ;
turking/1622247	null	when it begins to rain in LOCATION_0 send me phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.phdcomics . get_post ( ) ;
turking/1622248	null	get me phd comics when LOCATION_0 starts to get rainfall	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.phdcomics . get_post ( ) ;
turking/1622249	null	when rain starts in LOCATION_0 retrieve phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.phdcomics . get_post ( ) ;
turking/1622253	null	if it starts to shower in LOCATION_0 , send me phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.phdcomics . get_post ( ) ;
turking/1622306	null	when a new article from washington post local section comes in get a random xkcd comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.xkcd . random_comic ( ) ;
turking/1622307	null	get a random xkcd comic when there is a new local section article in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.xkcd . random_comic ( ) ;
turking/1622308	null	post my most recent dropbox file changes on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post ( status = $result ) ;
turking/1622309	null	when the washington post puts up a new article in the local section , grab a random xkcd comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.xkcd . random_comic ( ) ;
turking/1622310	null	post new files in dropbox which changed lately onto twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post ( status = $result ) ;
turking/1622311	null	if there is a new article in washington post local section get an xkcd comic at random	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.xkcd . random_comic ( ) ;
turking/1622312	null	get an xkcd comic at random when there is a new article in washington post local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.xkcd . random_comic ( ) ;
turking/1622313	null	get a random xkcd comic when the washington post local section has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.xkcd . random_comic ( ) ;
turking/1622320	null	check for new dropbox files that changed recently and post that on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post ( status = $result ) ;
turking/1622321	null	go through my dropbox and post the files that most recently changed on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post ( status = $result ) ;
turking/1622323	null	check for new files in my dropbox that changed recently and post them on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post ( status = $result ) ;
turking/1622325	null	check for my new dropbox files that changed most recently and post that on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post ( status = $result ) ;
turking/1622345	null	when a new washington post lifestyle section article is released show me my most recently changed dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1622346	null	display the most recently changed dropbox files when the washington post publishes an article in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1622363	null	i want to see the dropbox files that have been recently changes whenever there 's a lifestyle article on the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1622364	null	whenever the washington post publishes a lifestyle article , show me all dropbox files that have been recently changed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1622378	null	show me my dropbox files that changed most recently when the washington post publishes an article in the lifestyle area	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1622405	null	whenever USERNAME_0 sends out a tweet then turn up the volume on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1622406	null	make my lg tv louder when USERNAME_0 tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1622412	null	make my lg tv volume louder when USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1622415	null	when USERNAME_0 tweets turn up the volume on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1622416	null	when user USERNAME_0 tweets make my lg tv louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1622432	null	if there 's someone who commits to github , play URL_0 on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622433	null	when user USERNAME_0 tweets make my lg tv have higher volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1622434	null	go and play URL_0 on my lg tv whenever there 's someone who commits on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622436	null	play link URL_0 on my lg tv if github gets someone new to commit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622441	null	play the link URL_0 on my lg tv when somebody commits to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622448	null	play the link URL_0 whenever someone commits to github , on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622449	null	use my lg tv to play the link URL_0 if a new person commits to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622464	null	when my steps are updated on fitbit mute my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1622465	null	whenever my fitbit steps is updated mute my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1622466	null	put my lg tv on mute when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1622469	null	turn mute on my lg tv whenever the steps from my fitbit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1622470	null	when the step counter on my fitbit updates , mute the lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1622471	null	mute my lg tv when my fitbit steps begin to update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1622538	null	grab washington post national if in home it starts to rain	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1622540	null	retrieve washington post national when it rains in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1622542	null	retrieve washington post national when raining in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1622543	null	once it starts raining in home , grab the washington post national	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1622545	null	if it begins to rain at home then get the national section from washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1622546	null	get the national articles from washington post if it 's raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1622547	null	when receiving an email marked as important get tweets from people i follow about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1622548	null	get HASHTAG_0 tweets from people i follow when i receive an important marked email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1622549	null	when i receive an email marked important get tweets from people i follow about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1622550	null	using people tweets that i follow that involve HASHTAG_0 grab them when i get an important marked email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1622551	null	if youtube channels i follow post a new video play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622552	null	check for a new video on followed youtube channels and if found , play the link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622553	null	play link URL_0 on my lg tv if there are new videos on any youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622554	null	if an important reaches my inbox then show me tweets from anyone i follow regarding HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1622555	null	i want to view any youtube video added to a channel i follow by playing URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622556	null	if a video posts on a channel i follow on youtube , show it on lg tv using the link URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622575	null	tell me world washington post 's articles whenever my fitbit weight changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1622582	null	i 'd like to know articles from world washington post any time my fitbit weight changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1622583	null	if i have a weight change on my fitbit , tell me world washington post 's articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1622585	null	play the link URL_0 on my lg tv when a new video appears on the you rube channels that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622589	null	if my weight should change , i want you to state all the washington post 's world articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1622590	null	if there 's a change to my weight on fitbit inform me about articles in the world washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1622592	null	when there 's a weight change on fitbit , recite the washington post 's world articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1622601	null	any national section washington post article that posts , show me tweets from those i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . home_timeline ( ) ;
turking/1622606	null	show me the tweets of everyone i follow when the national section of the washington post gets a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . home_timeline ( ) ;
turking/1622608	null	show me tweets from people i follow anytime there is a new washington post article in the national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . home_timeline ( ) ;
turking/1622609	null	if there is a new article in the national section of the washington post then display tweets from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . home_timeline ( ) ;
turking/1622610	null	as soon as there is a new article in the national section of washington post then show me tweets from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . home_timeline ( ) ;
turking/1622611	null	when the national section of the washing post posts a new article show me the tweets of anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @com.twitter . home_timeline ( ) ;
turking/1622612	null	when i get an email on gmail show me lifestyle category youtube channels	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1622615	null	view channels on youtube about lifestyles as subject when gmail shows i get an email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1622618	null	pull up lifestyle category youtube channels when i get a new email through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1622619	null	show me channels on youtube in the lifestyle category when i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1622624	null	let me see the youtube channels with topic lifestyle when i get an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1622625	null	if i get an email via gmail , show me youtube channels in the lifestyle category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1622632	null	show me the time if a new instagram picture is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622633	null	show me the time it is at the exact moment i put up an image on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622634	null	give me the current time when i add a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622637	null	when i upload a picture that is new to instagram let me know what the time current is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622638	null	inform me of the time when i load a pic on instagram at the time of being posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_time ( ) ;
turking/1622647	null	get the most recent posts in the reddit front page when the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.reddit.frontpage . get ( ) ;
turking/1622650	null	when it stops raining in LOCATION_0 then get the latest posts from reddit 's front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.reddit.frontpage . get ( ) ;
turking/1622651	null	grab the latest posts on reddit 's front page whenever it stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.reddit.frontpage . get ( ) ;
turking/1622652	null	when it stops raining in LOCATION_0 get the latest posts from the reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.reddit.frontpage . get ( ) ;
turking/1622654	null	when the rain stops in LOCATION_0 retrieve the latest posts in the reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.reddit.frontpage . get ( ) ;
turking/1622655	null	get me the latest posts from reddit front page whenever the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.reddit.frontpage . get ( ) ;
turking/1622664	null	if it starts raining in here , tell me my newest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) ;
turking/1622666	null	if it starts to rain in here i 'd like to know my recent instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) ;
turking/1622667	null	let me know about my recent instagram photos as soon as it starts to rain in here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) ;
turking/1622668	null	i want to hear about my latest instagram pictures if it starts to rain in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) ;
turking/1622674	null	if my location changes , show me my icalendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1622678	null	i want to see QUOTED_STRING_0 location events whenever my location changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1622680	null	grab all my icalendar events that are at QUOTED_STRING_0 whenever i change locations .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1622697	null	if i get an email through gmail fetch the weather at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1622698	null	if i get a gmail email message and i am at work you are to retrieve the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1622699	null	get me the weather at my work when i get a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1622707	null	you are to fetch the weather at work whenever i 've received a gmail email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1622712	null	show me the weather when i arrive at my workplace at my gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1622714	null	i want to know the weather at work when i get an email through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1622719	null	opinions section of washington post posts new article show my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1622720	null	i want to see what 's going on in my calendar if there is an new opinions article in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1622722	null	please show me events on my calendar when there is a new washington post opinion article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1622723	null	i want to see calendar events whenever there 's a new washington post opinions article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1622724	null	when there is a new article in opinions section of washington post show me my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1622736	null	show calendar events should a washington post opinions article post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1622783	null	send an email to EMAIL_ADDRESS_0 , subject QUOTED_STRING_0 with any new files added to dropbox as the message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1622785	null	email EMAIL_ADDRESS_0 with the subject QUOTED_STRING_0 and the message containing the dropbox files that changed recently from now on	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1622787	null	anytime a new file is added to dropbox , send an email to EMAIL_ADDRESS_0 with subject QUOTED_STRING_0 and message containing the file	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1622792	null	from now on , email EMAIL_ADDRESS_0 with the files that changed recently in dropbox , using the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1622822	null	without my asking send an email message to EMAIL_ADDRESS_0 having the subject QUOTED_STRING_0 along with the most recent changes in dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1622824	null	please email EMAIL_ADDRESS_0 subject QUOTED_STRING_0 without me needing to ask and include a list of most recently changed dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1622828	null	post a facebook picture when my weight fluctuates on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post_picture ( ) ;
turking/1622833	null	when i move away from work show my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( ) ;
turking/1622834	null	when i leave work show me pictures from my instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( ) ;
turking/1622835	null	display my instagram pictures when i go away from work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( ) ;
turking/1622837	null	when i move away from work retrieve my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( ) ;
turking/1622839	null	when i move away from work show me my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( ) ;
turking/1622845	null	i want to see instagram pictures i took when my location is no longer at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( ) ;
turking/1622881	null	go to my lg tv and play URL_0 whenever i put up a current picture for instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622882	null	play on my tv that is lg URL_0 whatever time that i use instagram to load up a picture that is new .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/1622884	null	play URL_0 on my lg tv when i upload a new picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622885	null	if a new photograph is uploaded to instagram play on my lg tv URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622888	null	on my lg tv play URL_0 when i upload a new picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622889	null	play URL_0 on my lg tv if a new photo is put on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622934	null	play the link URL_0 on my lg tv every time there is an asteroid passing nearby earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622935	null	i want to see the link URL_0 played on my lg tv when an asteroid gets near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622936	null	play on my lg tv link URL_0 when an asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622937	null	when an asteroid passes near the earth , let me know by playing URL_0 on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622938	null	earth if asteroid passes close then on my lg tv play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622940	null	send me a meme template entitled QUOTED_STRING_0 when a new lifestyle article posts in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ;
turking/1622941	null	pull up the meme template called QUOTED_STRING_0 every time there is a new lifestyle post from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ;
turking/1622942	null	let me know when lifestyle articles post on the washington post by sending me a meme template named QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ;
turking/1622944	null	give me a QUOTED_STRING_0 meme template when there is a new article in the lifestyle section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ;
turking/1622946	null	in the lifestyle section of the washington post when there is a new article give me meme template named QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.imgflip . list ( ) filter name == QUOTED_STRING_0 ;
turking/1622953	null	play links from URL_0 on my lg tv when an asteroid passes near the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1622973	null	show me the weather report on the holidays .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.weather . current ( ) ;
turking/1622976	null	tell me the weather in here when it 's a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.weather . current ( ) ;
turking/1622978	null	if a date is a holiday , tell me the local weather forecast	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.weather . current ( ) ;
turking/1622979	null	if the day is a holiday , retrieve the weather information .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.weather . current ( ) ;
turking/1622980	null	when it 's a holiday get the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.weather . current ( ) ;
turking/1622985	null	when my fitbit steps update get articles in the washington post in business section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum business ) ;
turking/1622987	null	i want to know the weather at this location for all holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.weather . current ( ) ;
turking/1622989	null	get business related washington post articles when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum business ) ;
turking/1622992	null	whenever fitbit steps updates please grab the business articles in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum business ) ;
turking/1622994	null	when fitbit steps update , get articles in the washington post business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum business ) ;
turking/1622999	null	grab articles in the washington post in the business section whenever fitbit steps updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum business ) ;
turking/1623001	null	post a picture on twitter automatically with the description of new calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623004	null	post up a picture on my twitter with descriptions of my new calendar events automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623008	null	put a picture up on twitter with my new calendar events descriptions automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623009	null	post my new calendar events description to twitter automatically with a picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623012	null	i need a picture automatically posted on twitter that contains the description of my new calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623022	null	please automatically post a picture of the description of my new calendar events on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623026	null	when i upload a picture on instagram then get my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1623027	null	when i upload a picture on instagram , show me the steps on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1623028	null	display my steps from fitbit when i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1623031	null	tell me my fitbit steps whenever i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1623035	null	when i upload a picture on instagram retrieve my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1623044	null	i want you to get my steps from fitbit whenever i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1623072	null	whenever i get an email on gmail i want to see nasa 's apod	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . apod ( ) ;
turking/1623073	null	when received a email on gmail , show nasa apod	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . apod ( ) ;
turking/1623074	null	if i get an email on gmail i want to see nasa 's apod	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . apod ( ) ;
turking/1623091	null	when i upload a new picture on instagram get washington post articles in opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1623092	null	pull up the washington post 's opinion articles after i upload a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1623093	null	get washington post articles from opinions section when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1623094	null	show me opinion articles from the washington post when i upload a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1623095	null	pull up nasa 's atop if i get a new message on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @gov.nasa . apod ( ) ;
turking/1623096	null	i want to see articles from the washington post 's opinions section whenever i post an instagram photo .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1623133	null	send out QUOTED_STRING_0 through email the moment i leave .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623135	null	once i leave send QUOTED_STRING_0 via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623136	null	when i leave here send QUOTED_STRING_0 using an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623139	null	when i leave send QUOTED_STRING_0 on email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623141	null	when i go , send QUOTED_STRING_0 in an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623142	null	i want an email reading QUOTED_STRING_0 , when i leave	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623152	null	when my steps on fitbit update , mark me as away on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1623153	null	make me appear as away whenever my fitbit step updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1623154	null	put me as away on slack when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1623155	null	if there 's a fitbit step update , then put my as away on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1623158	null	when my fitbit steps update mark me as away inside slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1623159	null	mark me as away on slack when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1623180	null	if someone tweets go ahead and get music youtube channels	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . channels_by_category ( category_id = enum music ) ;
turking/1623183	null	grab music youtube channels if someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . channels_by_category ( category_id = enum music ) ;
turking/1623184	null	when a follower tweets , get music youtube channels .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . channels_by_category ( category_id = enum music ) ;
turking/1623185	null	if someone that i 'm following tweets pull up some youtube music channels .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . channels_by_category ( category_id = enum music ) ;
turking/1623187	null	fetch some youtube music channels whenever someone i 'm following tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . channels_by_category ( category_id = enum music ) ;
turking/1623188	null	fetch me music channels on youtube when one of my followers posts a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . channels_by_category ( category_id = enum music ) ;
turking/1623192	null	sports section of washington post posts an article then give me bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623193	null	when the washington post sports section posts an article give me bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623194	null	do a bing search for QUOTED_STRING_0 when an article is published in the sports section in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623197	null	show me matches to the search term QUOTED_STRING_0 when the washington post publishes new sports section articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623205	null	when the washington post publishes new sports section articles let me know which articles come up on bing for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1623219	null	whenever the snowing stops in work , get the schedule from my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1623220	null	when the snow stops at work then gather my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1623221	null	show my calendar if it 's no longer snowing at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1623223	null	if it was no longer snowing at work then show me my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1623224	null	fetch my current calendar schedule when it ceases snowing in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1623233	null	when the snow stops falling at work then advise me of my schedule from my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1623245	null	if there is a reply to user USERNAME_0 on twitter send QUOTED_STRING_0 through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623248	null	should someone i 'm currently following replies to USERNAME_0 over on twitter send QUOTED_STRING_0 through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623250	null	send QUOTED_STRING_0 through gmail when there is a reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623254	null	i want QUOTED_STRING_0 sent through gmail whenever someone i 'm following on twitter replies to USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623261	null	when someone i follow replies to user USERNAME_0 on twitter send QUOTED_STRING_0 using gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623263	null	send QUOTED_STRING_0 via gmail if somebody i follow replies to user USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 ) ;
turking/1623306	null	send all the articles under politics in washington post when i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623308	null	whenever i leave home send me the articles from the politics section of washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623312	null	update me on the politics section of the washington post whenever i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623313	null	if i leave home send me articles on politics from washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623315	null	when my location changes from home , update me on washington post articles from the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623325	null	whenever i leave show me my dropbox files in the opposite of alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623328	null	allow me to view my dropbox files when i exit in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623333	null	i want to see my dropbox files shown in reverse alphabetical order when i leave this place .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623335	null	whenever i leave my current location display my dropbox files , but in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623339	null	let me see in reverse alphabetical order the dropbox files when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623342	null	arrange my dropbox files into reverse alphabetical order and show them to me when i leave my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623344	null	always display the link of new phdcomics posts on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1623345	null	i want my lg tv to show new phdcomics post links automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1623347	null	when my lg tv is turned on play the link of new phdcomics posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1623348	null	on my lg tv automatically show the link to new phdcomics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1623349	null	when new phdcomics post automatically play the link on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1623351	null	put up new phdcomics post links on my lg tv automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1623358	null	get my recent instagram pictures when there is an event that 's about to begin on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.instagram . get_pictures ( ) ;
turking/1623361	null	show my recent instagram pictures when i have an event showing on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.instagram . get_pictures ( ) ;
turking/1623365	null	if an event is starting on my icalendar fetch any recent instagram pictures for me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.instagram . get_pictures ( ) ;
turking/1623370	null	just as an event starts on my icalendar get me my latest instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.instagram . get_pictures ( ) ;
turking/1623372	null	let me see my most recent insta photos when an event is showing on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.instagram . get_pictures ( ) ;
turking/1623381	null	get the holidays in GENERIC_ENTITY_tt:country_0 when there is an update on my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1623382	null	after my fitbit steps update i want you to get the holidays in the GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1623383	null	give me the humidity shown on the thermostat when my fitbit refreshes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1623384	null	get the humidity reported by thermostat when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1623385	null	after my fitbit steps update get the humidity reported by thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1623386	null	get the holidays in the GENERIC_ENTITY_tt:country_0 when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1623387	null	tell me the humidity shown on a thermostat when my fitbit refreshes its data	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1623393	null	i need a humidity report via thermostat when my fitbit steps have updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1623404	null	whenever an event is about to start on my icalendar get my recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.instagram . get_pictures ( ) ;
turking/1623405	null	if i get a tweet translate the words QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623406	null	make a translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 whenever i receive a tweet on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623407	null	as soon as i get a tweet show me how to say QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623409	null	tell me how to say QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 when i get a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623410	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623411	null	when i get tweeted translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623418	null	if my fitbit pests change , get the GENERIC_ENTITY_tt:country_0 holidays .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1623424	null	if my fitbit steps update , send the thermostat humidity report .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1623432	null	when my email arrives in gmail show me phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1623433	null	show me phd comics when i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1623434	null	show when i get emails on phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1623436	null	show me phd comics when my email arrives in gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1623437	null	show my email on phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1623438	null	whenever i get an email on gmail show me phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1623450	null	post a photo to twitter automatically describing my new schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623453	null	post a pic on twitter describing my new schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623454	null	can you upload a picture to twitter of my new schedule description	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623455	null	automate a post to twitter with a photo and my new schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623456	null	put a new picture on twitter showing the description of my new schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623465	null	use a pic twitter post to describe my new schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = description ) ;
turking/1623554	null	find my youtube channel subscriptions every time i get an email that 's marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623555	null	when i get an important email , show me channels i subscribe to on youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623557	null	when i receive email marked as important then get channel subscriptions on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623558	null	shoe me youtube channels i subscribe to whenever i get an important email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623560	null	grabs all channels i 'm subscribed to on youtube when i receive email with the important tag	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623563	null	if i get an email marked important then retrieve the channels that i 'm subscribe to on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623564	null	tell me today 's asteroid info when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1623566	null	once i leave this place , tell me QUOTED_STRING_0 youtube channels .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1623570	null	when my location switches tell me today 's asteroid info	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1623579	null	pull up the latest slack message when some even changes location within the icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.slack . channel_history ( ) ;
turking/1623580	null	show me the local section articles for washington post if i get an email from EMAIL_ADDRESS_0 in primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1623581	null	show me my last slack messages if there 's a different event location on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.slack . channel_history ( ) ;
turking/1623582	null	when the location of any event changes in my icalendar get the last slack message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.slack . channel_history ( ) ;
turking/1623584	null	when some event of my icalendar changes location give me the latest messages from slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.slack . channel_history ( ) ;
turking/1623585	null	if i move play URL_0 to the lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623586	null	get the latest slack messages when an event on my icalendar changes location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.slack . channel_history ( ) ;
turking/1623587	null	if my event location changes on icalendar than display the last slack messages	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.slack . channel_history ( ) ;
turking/1623591	null	play the link URL_0 on my lg tv whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623592	null	send me articles from the local section of the washington post if EMAIL_ADDRESS_0 sends me an email that 's in the category primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1623593	null	when i move use my lg tv to play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623594	null	if i move open URL_0 on lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623595	null	display URL_0 on the lg tv if i make a motion	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623596	null	play the link URL_0 on my lg tv when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623610	null	show me youtube channels that i follow if a new article in the world section of the washington post exists	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623614	null	if a new washington post article in the world section is posted show me the youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623616	null	pull up the channels on youtube that i follow whenever the washington post publishes a new article in the world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623636	null	when a new article appears in the world section of the washington post please display which youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623640	null	i want to see my followed youtube channels whenever i see a new article in the world section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1623675	null	if my fitbit steps update , i want to be sent articles from the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1623677	null	whenever my fitbit steps update , give me articles from the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1623679	null	as soon as my fitbit steps update , show me articles from the new york times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1623680	null	let me see new york times ' articles whenever the steps of my fitbit update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1623684	null	once the steps update on my fitbit give me new york times articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1623685	null	supply me with articles from the new york times when there is an update to the steps on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1623689	null	show tweets from anyone i know hashtag HASHTAG_0 when ever a new article appears on the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623692	null	whenever the new york times publishes a new article please tell me about tweets from people i follow that contain HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623696	null	when the new york times posts a new article , i want to see tweets from people i follow if they have the hashtag HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623698	null	i want to see tweets from people i follow that use the hashtag HASHTAG_0 when the new york times posts a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623701	null	show me tweets from i follow that use the tag HASHTAG_0 when a new article is published to the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623712	null	get me the washington post 's wonk blog blog when ever a the wall street journal business section post a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ;
turking/1623713	null	when a new wall street journal article is published in the us business section pull up the washington post 's wonk blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ;
turking/1623722	null	when the wall street journal posts a new article in the business section , obtain washington post 's work blog blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ;
turking/1623724	null	pull up the washington post 's wonk blog if a new article is added to the us business section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ;
turking/1623726	null	please get washington post 's work blog blog when the wall street journal adds a new article to the business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ;
turking/1623728	null	when the wall street journal post a new article in the us business section get me the washington post 's wonk blog blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum us_business ) ) => @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ;
turking/1623734	null	give me my location any time there is a new article in washington post 's national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623736	null	whenever the national section of the washington post publishes a new article tell me my location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623743	null	notify me of my current location when national section of the washington post publishes a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623744	null	alert me of my new location if the national section of the washington post has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623745	null	when washington post has a new national section article tell me where i 'm at	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623746	null	if a new article from the washington post national section is published alert me of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623768	null	fetch washington post 's section on politics when the rain starts in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623769	null	when the rain begins in here get the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623772	null	if the weather here is rainy , get me articles from washington post politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1623786	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 if i get an email from EMAIL_ADDRESS_0 in category primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623787	null	when EMAIL_ADDRESS_0 sends a primary category email translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623788	null	after receiving a primary category email from EMAIL_ADDRESS_0 , translate to GENERIC_ENTITY_tt:iso_lang_code_0 the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623789	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 if i receive an email from EMAIL_ADDRESS_0 in section primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623793	null	give me the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 when i get an email from EMAIL_ADDRESS_0 in primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1623807	null	can you automatically put up the snippet of my new primary category emails onto facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/1623819	null	turn mute off on my lg webos tv once an event from my calendar starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/1623820	null	if a calendar event starts then turn the volume up on my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/1623821	null	at the start of an event on my calendar take my lg webos tv off of mute .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/1623822	null	whenever an event is beginning from my calendar unmute the lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/1623823	null	if the washington post posts a new article in the sports section fetch the weather for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( ) ;
turking/1623824	null	take my lg webos tv off of mute when a calendar event starts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/1623825	null	if the sports section of the washington post puts out a new article fetch me the weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( ) ;
turking/1623826	null	if there is a new washington post sports section article , get the weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( ) ;
turking/1623827	null	in the washington post sports section , retrieve the weather whenever a new article appears	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( ) ;
turking/1623834	null	let me know of the weather when the sports section of the washington post has a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( ) ;
turking/1623836	null	i want to see the weather whenever the sports section gets a new article by the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( ) ;
turking/1623868	null	turn the mute function off on my lg webos tv if a calendar event begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg webos tv " ) . unmute ( ) ;
turking/1623874	null	when an icalendar event ends i want to know my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623883	null	let me see my current location if an event on my icalendar ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623888	null	if one of my icalendar events ends pull up my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623893	null	when an event from my icalendar is over , give me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623896	null	whenever an event on my icalendar ends please display my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623898	null	if there 's a new phd comic being posted tell me the weather at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1623899	null	give me the weather at home when new phd comics are posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1623900	null	show me where i currently am when an event on my icalendar comes to an end	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623901	null	show me the weather at home whenever a new phd comic is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1623902	null	when new phd comics are posted , tell me home weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1623903	null	when they post a new phd comic i want to know the weather at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1623906	null	i 'd like to see the weather over at home whenever a new phd comic is released .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1623910	null	if a github issue gets a comment have my lg tv play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623911	null	i want my lg tv to play URL_0 if somebody leaves a comment on an issue on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623913	null	play URL_0 on my lg tv when there 's a comment on a github issue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623914	null	if someone on github comments on an issue play URL_0 on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623915	null	when anybody comments on a github issue , play URL_0 on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623916	null	play URL_0 on the lg tv if a github user makes a comment .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1623957	null	when i upload a picture on instagram show me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623958	null	start reading off my dropbox files in reverse alphabetical order on the event i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623971	null	when i upload a photo on instagram tell me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623986	null	on instagram when picture is uploaded then tell me the files in my dropbox in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1623989	null	when uploading a picture on instagram read to me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1624020	null	tell me my dropbox files in reverse alphabetical order when on instagram i upload a picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1624039	null	if an event from icalendar is about to begin , tell me what day it is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624040	null	tell me what day it is whenever an event from my icalendar is about to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624065	null	advise me of my dropbox files sorted in reverse alphabetical order whenever i 've uploaded a photo to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1624066	null	whenever i upload a photo to instagram you are to say to me the dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1624067	null	if i upload a picture to instagram give me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1624069	null	show me my dropbox files in reverse alphabetical order anytime i add a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1624102	null	if the washington post has a new article in the lifestyle section , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624103	null	in washington post lifestyle section if there is a new article then translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624105	null	in GENERIC_ENTITY_tt:iso_lang_code_0 translate QUOTED_STRING_0 when new article appears in washington post lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624107	null	in the lifestyle section of the washington post when there is a new article please translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624108	null	if a new article posts in the lifestyle section of the washington post then translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624109	null	if a new article ends up in the lifestyle section of the washington post , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624110	null	when the location of some event changes on my icalendar get the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624111	null	acquire the weather in here when the location of some event is altered on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624151	null	when i get an email on gmail make my lg tv quieter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624152	null	if i receive an email on gmail make my lg tv quieter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624153	null	if i get an email on gmail , tune down my tv 's volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . lower_volume ( ) ;
turking/1624155	null	whenever i get an email on gmail , lower down the volume of my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624159	null	make my lg tv quieter when i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624161	null	i want to make my lg tv quieter when i receive gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624169	null	when its a holiday translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624170	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when it 's a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624175	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when it 's a holiday .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624176	null	when the holiday arrives , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624177	null	on holidays , please translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624178	null	if it 's a holiday , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624196	null	when an article in the opinions section of the washington post is published display my primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1624197	null	create a GENERIC_ENTITY_imgflip:meme_id_0 meme when a new article is published in the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1624198	null	show the front page of reddit when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1624200	null	i need a new GENERIC_ENTITY_imgflip:meme_id_0 meme when there is an article published in the new york times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1624201	null	when the new york times publishes an article make a GENERIC_ENTITY_imgflip:meme_id_0 meme	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1624202	null	create a meme of GENERIC_ENTITY_imgflip:meme_id_0 when a new article is published by the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1624203	null	when an article is posted in the washington post opinion section , show me my primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1624204	null	when the new york times posts a new article make a GENERIC_ENTITY_imgflip:meme_id_0 meme	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1624205	null	i want to see reddit 's front page whenever i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1624207	null	i want to see the front page of reddit when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1624208	null	when there is a new article in the new york times , make a GENERIC_ENTITY_imgflip:meme_id_0 meme .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1624210	null	pull up the front page of reddit when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1624213	null	if i change locations , show me reddit 's front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1624219	null	show me the front page of reddit when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1624315	null	view a picture from curiosity rover taken on today when there is a new article in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @gov.nasa . rover ( date_taken = $start_of ( day ) ) ;
turking/1624318	null	when there is a new article in washington post opinions section tell me picture from curiosity rover taken on today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @gov.nasa . rover ( date_taken = $start_of ( day ) ) ;
turking/1624321	null	show me a picture from curiosity rover taken on today when there is a new article in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @gov.nasa . rover ( date_taken = $start_of ( day ) ) ;
turking/1624327	null	if user USERNAME_0 initiates an issue on github please fetch followed persons tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . home_timeline ( ) ;
turking/1624328	null	gather tweets from those that i follow whenever USERNAME_0 opens a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . home_timeline ( ) ;
turking/1624330	null	if USERNAME_0 has a ticket on github gather all the tweets from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . home_timeline ( ) ;
turking/1624331	null	if USERNAME_0 initiates a github issue then bring me a tweet from a followed user	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . home_timeline ( ) ;
turking/1624332	null	please gather all of my followed persons tweets when user USERNAME_0 starts an issue on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . home_timeline ( ) ;
turking/1624333	null	PATH_NAME_0 should be renamed after i post a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1624334	null	show me a tweet from anyone i follow on twitter if USERNAME_0 opens up github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . home_timeline ( ) ;
turking/1624335	null	put the description of the calendar schedule in an email addressed to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1624336	null	send a reply to EMAIL_ADDRESS_0 detailing the description of the calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1624337	null	please reply to EMAIL_ADDRESS_0 describing my new calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1624341	null	advise EMAIL_ADDRESS_0 of the description of my new calendar schedule and do it without my asking please .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1624357	null	if i upload a instagram picture rename the file PATH_NAME_0 found over in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1624362	null	rename PATH_NAME_0 in dropbox whenever a new instagram picture is uploaded	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1624368	null	if i upload a photo on instagram please rename the file on dropbox to PATH_NAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1624412	null	when i have uploaded a photo to instagram you are to rename the dropbox file PATH_NAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1624451	null	give me most current slack messages in HASHTAG_0 when something published in rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . channel_history ( ) filter channel == HASHTAG_0 ;
turking/1624453	null	anytime they publish something on the rss feed give me recent slack messages in HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . channel_history ( ) filter channel == HASHTAG_0 ;
turking/1624454	null	send me recent slack messages in HASHTAG_0 anytime something is published on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . channel_history ( ) filter channel == HASHTAG_0 ;
turking/1624457	null	whenever someone publishes on the rss feed please show me recent slack messages in HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . channel_history ( ) filter channel == HASHTAG_0 ;
turking/1624458	null	set power to on on my lg tv when humidity in room goes below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/1624459	null	if the humidity in the room decreases below NUMBER_0 set the power on my lg tv to on .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/1624460	null	get me recent slack messages in HASHTAG_0 whenever they publish something on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . channel_history ( ) filter channel == HASHTAG_0 ;
turking/1624461	null	when something on rss feed is published give me slack messages in HASHTAG_0 that are recent	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . channel_history ( ) filter channel == HASHTAG_0 ;
turking/1624462	null	change the power on my lg tv to on any time the humidity in the room drops below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/1624469	null	when humidity goes below NUMBER_0 in the room turn power on lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/1624470	null	anytime the humidity in the room decreases below NUMBER_0 turn the power on my lg tv on .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/1624472	null	if the humidity in the room drops below NUMBER_0 please set the power on my lg tv to on	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum on ) ;
turking/1624475	null	when there is a change to the icalendar stop following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624476	null	stop following USERNAME_0 from twitter if anything on my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624477	null	stop following USERNAME_0 on twitter when there 's a change on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624478	null	stop following USERNAME_0 on twitter when something changes on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624479	null	if something on my icalendar changes , then stop following USERNAME_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624483	null	turn off follow of USERNAME_0 on twitter when anything on my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624486	null	retrieve my instagram pictures from work if i get an email from EMAIL_ADDRESS_0 in the primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1624487	null	whenever i get an email in my primary category from EMAIL_ADDRESS_0 retrieve the instagram pictures from work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1624488	null	get me the instagram pics i took at work if i get an email from EMAIL_ADDRESS_0 in the primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1624489	null	retrieve the pictures i took at work on instagram if i get a primary category email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1624490	null	if EMAIL_ADDRESS_0 sends me an email in the primary category , then retrieve my instagram pictures that were taken at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1624495	null	when EMAIL_ADDRESS_0 sends an email to the primary category i need my instagram pictures that were taken at work retrieved .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1624533	null	if the the washington post 's plum line blog has a new post show me youtube channels i 'm subscribed to .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1624534	null	let me see my youtube channel subscriptions when the washington post 's plum line blog reports a new posting	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1624535	null	i want to see youtube channels i 'm subscribed to when there is a new plum line blog post in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1624536	null	when there is a new blog posting in the plum line blog contained in the washington post , display all my subscribed channels on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1624537	null	when i leave LOCATION_0 , reply to EMAIL_ADDRESS_0 with QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1624538	null	send a reply to EMAIL_ADDRESS_0 with QUOTED_STRING_0 when i leave LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1624541	null	show me channels i am connected to on youtube when there is a new post in the the plum line blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1624542	null	if i move away from LOCATION_0 please reply saying QUOTED_STRING_0 too EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1624543	null	send EMAIL_ADDRESS_0 a reply that says QUOTED_STRING_0 when i 'm no longer in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1624544	null	send a reply saying QUOTED_STRING_0 to EMAIL_ADDRESS_0 when i move out of LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1624548	null	bring me channels i am subscribed to on youtube when there is a new post in the the plum line blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1624550	null	message EMAIL_ADDRESS_0 if i move away from LOCATION_0 and make the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.gmail . send_email ( message = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1624625	null	if the icalendar event location is different than tell me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624627	null	when an event changes on my icalendar , give me weather notifications .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624628	null	update the weather when the location of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624632	null	if the location of some event changes on my icalendar , get me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624634	null	send me weather notifications every time events change on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624637	null	show me the weather if the icalendar event location is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1624639	null	if there 's a lifestyle post in the washington post tweet out a picture with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1624640	null	tweet a picture with the caption QUOTED_STRING_0 when there is a new article posted to the lifestyle section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1624641	null	if any new articles are created in washington post lifestyle section , tweet a picture and a caption that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1624643	null	show me articles from the local section of the washington post when my fitbit updates my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1624646	null	post something to my linkedin when the washington post posts an article in their opinion section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( ) ;
turking/1624649	null	tweet a picture with caption QUOTED_STRING_0 when there is a new article in the washington post 's lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1624653	null	get the articles on the washington post 's local section whenever my fitbit steps are updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1624654	null	should the washington post publish an opinion piece make a linkedin post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( ) ;
turking/1624656	null	post on linkedin whenever the washington post publishes an opinion article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.linkedin . share ( ) ;
turking/1624663	null	when my steps on fitbit update tell me the best of youtube channels according to youtube .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . channels_by_category ( category_id = enum best_of_youtube ) ;
turking/1624664	null	inform me of youtube 's best of channels on youtube if there 's any updates on my steps on fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . channels_by_category ( category_id = enum best_of_youtube ) ;
turking/1624666	null	display youtube 's best of youtube channels after my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . channels_by_category ( category_id = enum best_of_youtube ) ;
turking/1624669	null	when my fitbit steps finish updating please show me youtube 's best of youtube channels	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . channels_by_category ( category_id = enum best_of_youtube ) ;
turking/1624675	null	order a milk only small white mocha for me if i take over NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha , extras = enum milk , size = enum small ) ;
turking/1624679	null	order a small white mocha with milk only after i 've walked more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha , extras = enum milk , size = enum small ) ;
turking/1624681	null	if i take more than NUMBER_0 steps order a small white mocha with nothing other than milk for me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha , extras = enum milk , size = enum small ) ;
turking/1624687	null	after i walk more than NUMBER_0 steps place me an order of a small white mocha with only milk	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha , extras = enum milk , size = enum small ) ;
turking/1624688	null	place an order for a small white mocha with milk only after i walk NUMBER_0 more steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha , extras = enum milk , size = enum small ) ;
turking/1624700	null	automatically send a picture on slack to HASHTAG_0 with caption the sender host name of new important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = true ) ) => @com.slack . send_picture ( caption = sender_name , channel = HASHTAG_0 ) ;
turking/1624702	null	send a picture automatically on slack to HASHTAG_0 with the sender 's name as caption of new important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = true ) ) => @com.slack . send_picture ( caption = sender_name , channel = HASHTAG_0 ) ;
turking/1624703	null	automatically deliver a picture on slack to HASHTAG_0 with caption the sender name of new important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = true ) ) => @com.slack . send_picture ( caption = sender_name , channel = HASHTAG_0 ) ;
turking/1624705	null	send a picture to HASHTAG_0 with caption the sender name of new important emails automatically on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = true ) ) => @com.slack . send_picture ( caption = sender_name , channel = HASHTAG_0 ) ;
turking/1624706	null	auto send a photo in slack to HASHTAG_0 with a caption that is the sender 's name of new and important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = true ) ) => @com.slack . send_picture ( caption = sender_name , channel = HASHTAG_0 ) ;
turking/1624710	null	send a picture on slack automatically to HASHTAG_0 with caption the sender name for new important emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = true ) ) => @com.slack . send_picture ( caption = sender_name , channel = HASHTAG_0 ) ;
turking/1624738	null	when my location moves from my home alter the slack channel HASHTAG_0 's topic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/1624740	null	when i leave home change the topic of my slack to HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/1624747	null	change the topic to HASHTAG_0 in the slack channel when i move away from my home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/1624749	null	change the HASHTAG_0 slack channel topic when i move out of my home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/1624753	null	when a new phd comic is published , give GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624755	null	when phd publishes a new comic , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624757	null	give me the translation of QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 when a new publication of phd comic is done	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624758	null	i want to see the translation of QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 when phd comic publishes a new comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624760	null	make an automatic change of the volume on my lg tv to the humidity of the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = humidity ) ;
turking/1624762	null	when a phd comic is published show me the GENERIC_ENTITY_tt:iso_lang_code_0 translation for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624764	null	auto make the volume the same as the humidity of the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . set_volume ( volume = humidity ) ;
turking/1624766	null	i want the topic changed of the HASHTAG_0 slack channel topic when i move away from my home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . updateChannelTopic ( channel = HASHTAG_0 ) ;
turking/1624770	null	translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 whenever a new phd comic gets published	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1624771	null	automate the change of volume for my lg tv to the humidity of the current weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = humidity ) ;
turking/1624772	null	match the volume of my lg tv to the humidity of the weather instantly	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = humidity ) ;
turking/1624783	null	post QUOTED_STRING_0 whenever there 's a new article from the washington post 's business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1624785	null	if a new article is published by the new york times , show my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1624786	null	fetch my calendar schedule if a new article is published by the new york times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1624787	null	if a new article is published by the new york times i want my calendar schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1624789	null	i would like to see the calendar schedule whenever the new york times publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1624790	null	grab the calendar schedule whenever the new york times publishes an article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1624791	null	whenever an important email is received show me a list of GENERIC_ENTITY_tt:country_0 holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1624792	null	show a list of holidays in the GENERIC_ENTITY_tt:country_0 when i receive a marked email of important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1624793	null	tell me all the GENERIC_ENTITY_tt:country_0 holidays when i get an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1624794	null	if i get any emailed marked important , list all the holidays for the GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1624818	null	get the pictures from here on instagram when i get an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1624819	null	get the instagram pictures i took at here when i get an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1624822	null	when i get an important email from EMAIL_ADDRESS_0 get me the instagram pictures i took here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1624824	null	i want to see the pictures i took on instagram when i got an email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1624825	null	if i get an important email from EMAIL_ADDRESS_0 get the instagram pics i took at here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1624866	null	get my instagram pictures if the humidity in the room goes below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.instagram . get_pictures ( ) ;
turking/1624867	null	if the humidity is under NUMBER_0 then show my instagram photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.instagram . get_pictures ( ) ;
turking/1624870	null	get me my instagram pictures when the humidity of the room drops below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.instagram . get_pictures ( ) ;
turking/1624871	null	if the room 's humidity goes below NUMBER_0 get my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.instagram . get_pictures ( ) ;
turking/1624874	null	find the work weather information any time the location for an icalendar event changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1624876	null	if the humidity in the room goes below NUMBER_0 get my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.instagram . get_pictures ( ) ;
turking/1624877	null	when the location of some event changes on my icalendar get the weather that are at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1624878	null	if there is a change to an icalendar event location , retrieve the weather forecast in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1624879	null	pull up my ig photos once the humidity of the room is under NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.instagram . get_pictures ( ) ;
turking/1624880	null	get the weather at work if the location of some event is altered on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1624881	null	when there are modifications to a location on any event on my icalendar grab the weather for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1624887	null	show me the weather at work if an event location on my icalendar is different	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1624888	null	get me the current lunar phase at home any time an article appears in washington post opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.weather . moon ( location = $location . home ) ;
turking/1624890	null	retrieve moon phase for location home on date now when there is a new article that are in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.weather . moon ( location = $location . home ) ;
turking/1624891	null	retrieve moon phase for location home on date now once there is a new article that is in opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.weather . moon ( location = $location . home ) ;
turking/1624918	null	turn down my lg tv a little when the rain stops in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624919	null	in LOCATION_0 , if the rain stops , then turn down the volume on my lg tv please .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624920	null	when the rain is done in LOCATION_0 then turn the sound down on my lg television	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624921	null	turn down the volume on my lg tv when the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624922	null	turn the volume down on my lg tv when it stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624923	null	if it is n't raining anymore in LOCATION_0 , turn down the volume on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1624930	null	find the present lunar phase for my home address whenever an article is first published in washington post opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.weather . moon ( location = $location . home ) ;
turking/1624931	null	when i get a gmail email no longer follow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624933	null	if i receive an email on gmail stop following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624934	null	stop following USERNAME_0 on twitter when i get a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624935	null	when receiving a gmail on email , stop following USERNAME_0 twitter account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624937	null	stop following USERNAME_0 on twitter if i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624938	null	unfollow USERNAME_0 on twitter if i receive a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1624960	null	get the blog the fix of the washington post if it starts raining at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.washingtonpost . get_blog_post ( section = enum the_fix ) ;
turking/1624964	null	i want to read the fix blog in the washington post if it calls for rain at my workplace	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.washingtonpost . get_blog_post ( section = enum the_fix ) ;
turking/1624973	null	if it rains at work , retrieve the blog the fix of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.washingtonpost . get_blog_post ( section = enum the_fix ) ;
turking/1624975	null	if it begins to rain at my work location , get me the washington post blog the fix	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter status == enum raining => @com.washingtonpost . get_blog_post ( section = enum the_fix ) ;
turking/1625049	null	i want a tumblr post made whenever there 's an article on the washington post 's sports section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.tumblr.blog . post_text ( ) ;
turking/1625051	null	should there be an article on the washington post 's sports section , create a tumblr post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.tumblr.blog . post_text ( ) ;
turking/1625052	null	when there is a new article in the sports section of the washington post put up a blog post on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.tumblr.blog . post_text ( ) ;
turking/1625054	null	create a new tumblr blog post anytime a new article appears in the sports section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.tumblr.blog . post_text ( ) ;
turking/1625055	null	if there is a new article in the sports section of the washington post make a blog post on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.tumblr.blog . post_text ( ) ;
turking/1625056	null	when a new article shows up in the sports section of the washington post please make a new blog post on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.tumblr.blog . post_text ( ) ;
turking/1625110	null	using my lg tv link URL_0 when temperature at my location is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625111	null	if the temperature in here gets to below freezing play the link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625113	null	play URL_0 on my lg tv whenever the temperature drops below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625114	null	when temperature at my location is below freezing play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625115	null	if the temperature drops below freezing here put URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625116	null	play link URL_0 on my lg tv when the temperature in here is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625128	null	show me lifestyle section of washington post when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625131	null	let me view washington post lifestyle if a person that i follow sends out a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625134	null	if somebody i 'm following tweets show me the washington post 's lifestyle section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625135	null	if someone that i follow tweets , allow me to see lifestyle on washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625155	null	i want to see the lifestyle section of the washington post when somebody i 'm following tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625160	null	pull up my instagram pictures when i get a new message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1625163	null	if i get a message over on slack , go and display my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1625164	null	show my instagram photo when i receive a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1625165	null	retrieve my instagram pictures whenever someone sends me a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1625166	null	when i receive a message on slack , show me my instagram picture .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1625170	null	show off my instagram pictures whenever i get a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1625207	null	get the weather in here when ever my step count goes higher than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.weather . current ( ) ;
turking/1625208	null	show me the weather when i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.weather . current ( ) ;
turking/1625213	null	if walk more than NUMBER_0 steps give me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.weather . current ( ) ;
turking/1625214	null	post the location of my latest schedule on icalendar on linkedin automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.linkedin . share ( status = location ) ;
turking/1625215	null	when i take more than NUMBER_0 steps get the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.weather . current ( ) ;
turking/1625217	null	show my new icalendar schedule location on linkedin automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.linkedin . share ( status = location ) ;
turking/1625219	null	let me know weather updates every time i walk over NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.weather . current ( ) ;
turking/1625223	null	auto post the location of my new schedule on icalendar on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.linkedin . share ( status = location ) ;
turking/1625229	null	automatically post the locale of my new schedule on icalendar on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.linkedin . share ( status = location ) ;
turking/1625234	null	i want to see via gmail my new location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1625235	null	email me my new current location at my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1625236	null	post my updated location details through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1625237	null	always announce my latest location with a gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1625238	null	send me a gmail message when my current location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1625239	null	i want my new location sent to me through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1625245	null	if i get an email tell me where i am	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625246	null	announce my location whenever i receive new gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625247	null	give me my present location if i get a gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625249	null	whenever someone sends me a gmail message , let me know my location at that time	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625250	null	tell me my location if i get mail from gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625252	null	i would like to know the current location if i get a gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625277	null	send an email to somebody when someone commits to github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . send_email ( ) ;
turking/1625278	null	send an email when someone commits to github to somebody .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . send_email ( ) ;
turking/1625281	null	shoot an email when someone does a github commit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.gmail . send_email ( ) ;
turking/1625283	null	fetch me the pictures i took in LOCATION_0 from my instagram when the earth gets a near pass by an asteroid .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1625284	null	fetch me the instagram pictures of when i took at LOCATION_0 when the asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1625285	null	let me see the instagram pictures that i took in LOCATION_0 when the asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1625307	null	show me channels matching QUOTED_STRING_0 on youtube when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1625309	null	show me QUOTED_STRING_0 channels on youtube whenever i get a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1625311	null	tell me channels that have QUOTED_STRING_0 on youtube when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1625312	null	if i receive a tweet alert me channels matching QUOTED_STRING_0 on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1625313	null	notify me of channels matching QUOTED_STRING_0 on youtube when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1625316	null	when i get a new tweet , display QUOTED_STRING_0 youtube channels .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1625326	null	when the location of some event changes on my icalendar pull up wall street journal opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.wsj . get ( section = enum opinions ) ;
turking/1625331	null	when the location of some event changes on my icalendar get wall street journal opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.wsj . get ( section = enum opinions ) ;
turking/1625339	null	get the wall street journal opinions when the event location changes on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.wsj . get ( section = enum opinions ) ;
turking/1625343	null	if there is an event change on icalendar retrieve wall street journal opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.wsj . get ( section = enum opinions ) ;
turking/1625373	null	tell me any pf my dropbox files that recently changed when my fitbit steps updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625374	null	if fitbit steps get updated create a file in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1625375	null	show me most recently changed dropbox files when fitbit updates my steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625380	null	write QUOTED_STRING_0 if a new article from the washington post lifestyle section posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1625382	null	whenever my fitbit steps update tell me all of my dropbox files that changed most recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625383	null	show me the holidays in the GENERIC_ENTITY_tt:country_0 when there is an icalendar event that ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1625384	null	create a facebook post that says QUOTED_STRING_0 each time that washington post puts up a new post in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1625385	null	if an icalendar event ends , tell me the GENERIC_ENTITY_tt:country_0 holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1625386	null	anytime an event on my icalendar ends show me GENERIC_ENTITY_tt:country_0 holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1625387	null	give me the holidays in GENERIC_ENTITY_tt:country_0 if ever an event on my icalendar ends .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1625389	null	when fitbit updates , let me know which dropbox files have updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625390	null	list out GENERIC_ENTITY_tt:country_0 holidays whenever an event ends on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1625391	null	i would like the holidays in the GENERIC_ENTITY_tt:country_0 when an event on my icalendar ends .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) ;
turking/1625397	null	when my fitbit steps are updated , show me the dropbox files that have changed most recently .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625434	null	any time i get an email in my gmail account i want to see the lifestyle articles from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625436	null	show me lifestyle washington post 's articles when i receive an gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625439	null	show me washington post 's articles on lifestyle when i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625440	null	every time i get an email on gmail then let me see washington post 's lifestyle articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625442	null	obtain emails of mine that have the subject QUOTED_STRING_0 and time i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1625443	null	when i upload to instagram with a picture get my emails with subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1625446	null	get me nasa 's astronomy picture of the day when i upload a new picture onto instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . apod ( ) ;
turking/1625447	null	when i upload a new picture on instagram , send me the astronomy picture of the day from nasa	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . apod ( ) ;
turking/1625448	null	any time i upload a photo to instagram grab my emails that have the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1625449	null	when i upload a picture on instagram retrieve my emails with subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1625450	null	retrieve nasa 's astronomy picture of the day when i upload a new picture .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . apod ( ) ;
turking/1625451	null	if i upload a photo on instagram then get nasa 's astronomy picture of the day	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . apod ( ) ;
turking/1625453	null	bring up nasa 's astronomy picture of the day if i upload a new photo on ig	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . apod ( ) ;
turking/1625456	null	swig ne the lifestyle articles from washington post when i get gmail emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625463	null	if i upload a new picture on instagram i want you to fetch nasa 's astronomy picture of the day .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . apod ( ) ;
turking/1625465	null	on my lg tv play URL_0 when the snow stops .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625466	null	if an article is published in politics section of washington post , retrieve my last NUMBER_0 instagram pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625467	null	play URL_0 on my lg tv when the snow stops .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625468	null	if it 's no longer snowing then play link URL_0 on the lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625469	null	when there is a new article in the washington post about politics then get my NUMBER_0 recent instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625470	null	whenever there 's a politics article from the washington post grab my NUMBER_0 recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625471	null	play URL_0 on my lg tv when the snow stops falling in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625472	null	when it 's no longer snowing in here use my lg tv to play the link URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1625480	null	pull up the latest NUMBER_0 photos i posted on instagram any time an article appears in washington post politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625482	null	if there 's a politics column on the washington post get my NUMBER_0 instagram pictures posted recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625495	null	show me lifestyle articles in the washington post whenever i get a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625520	null	let me know eta when i move away from home for uber of type assist at LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum assist ;
turking/1625521	null	when i 'm no longer at home , announce the uber assist eta for LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum assist ;
turking/1625525	null	let me know type assist uber eta in LOCATION_0 once i move out of my home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum assist ;
turking/1625527	null	tell me type assist uber eta after i move away from home at LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum assist ;
turking/1625528	null	when i move away from home , tell me eta for uber of type assist at LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum assist ;
turking/1625532	null	provide me with the uber assist eta for LOCATION_0 whenever i am away from my home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum assist ;
turking/1625535	null	whenever the weather 's wind speed goes higher than NUMBER_0 miles per hour in my instagram pictures ' location , send me a notification .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1625536	null	if the wind speed of the weather gets larger than NUMBER_0 miles per hour at the location of my instagram pictures , make sure that i know about it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1625537	null	if the wind speeds above NUMBER_0 miles per hour at the location of my instagram pictures please notify me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1625538	null	let me know if the wind speed at the location of my instagram pictures gets above NUMBER_0 miles per hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1625539	null	tell me if the wind speed rises above NUMBER_0 miles per hour in the weather in the location of my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1625555	null	find QUOTED_STRING_0 translated to GENERIC_ENTITY_tt:iso_lang_code_0 whenever the temperature here goes to below freezing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625556	null	when the temperature here drops below freezing please display the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625558	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when the temp in here is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625559	null	get my current location if someone commits to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625560	null	if someone commits to github get my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625561	null	when the temperature in here is below freezing get the translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625562	null	retrieve the most recent posts in the reddit front page when an event occurs on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.reddit.frontpage . get ( ) ;
turking/1625563	null	show me the newest reddit front page posts whenever my icalendar has an event about to start .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.reddit.frontpage . get ( ) ;
turking/1625564	null	retrieve the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 if the temperature here dips below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625565	null	fetch my current location whenever someone commits to github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625566	null	if the temperature goes to less than freezing , fetch the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625567	null	if the wind speed rises over NUMBER_0 miles per hour that is in weather in the location of my instagram alert me m pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1625569	null	show the latest reddit page posts if an event is going to start on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.reddit.frontpage . get ( ) ;
turking/1625570	null	at the beginning of an event on my icalendar , obtain the latest posts on the reddit front page .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.reddit.frontpage . get ( ) ;
turking/1625572	null	if there 's a new commits on github retrieve my current place	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625607	null	if i walk more than NUMBER_0 steps retrieve latest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.rss . get_post ( ) ;
turking/1625609	null	when i walk higher than NUMBER_0 steps get the latest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.rss . get_post ( ) ;
turking/1625610	null	get latest posts on an rss feed when i take more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.rss . get_post ( ) ;
turking/1625611	null	if i walk more than NUMBER_0 steps , get new posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.rss . get_post ( ) ;
turking/1625614	null	get latest posts on an rss feed when i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.rss . get_post ( ) ;
turking/1625615	null	when i take more than NUMBER_0 steps locate latest posts on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @org.thingpedia.rss . get_post ( ) ;
turking/1625618	null	whenever someone leaves a comment on a github issue please retrieve my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625620	null	when someone comments on a github issue , retrieve my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1625624	null	when i get an email on gmail get the direct messages i retrieved on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1625625	null	display my direct messages from twitter whenever i receive a new email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1625627	null	when i get an email on gmail get the direct messages i received on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1625628	null	please show me my direct messages from twitter when i have a new email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1625629	null	when i receive an email on gmail get tweets from anyone i follow that have the words QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1625630	null	if an event is starting on my calendar i 'd like to see the latest reddit front page posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.reddit.frontpage . get ( ) ;
turking/1625631	null	pull up tweets from people i follow that say QUOTED_STRING_0 whenever i get a new email in gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1625632	null	if a gmail email is received , fetch me the dm 's on twitter that i have received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1625633	null	when i get a gmail email you are to fetch tweets from followed people that have the words QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1625634	null	you are to gather tweets from people that i am following which contain QUOTED_STRING_0 whenever i receive an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1625635	null	when i receive a message on gmail get tweets from anyone i follow that contain QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1625636	null	every time i get an email on my gmail please pull up tweets from anyone that i follow that contains the words QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1625721	null	show me articles from the lifestyle section of the washington post when the location of an event changes in my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625722	null	in lifestyle section of washington post give me articles if some event location changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625723	null	show me articles in the washington post in section lifestyle when the location of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625724	null	give me articles in the washington post in section lifestyle when the location of some event is different on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625727	null	on my icalendar if location of some even changes the give me lifestyle section articles from washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625728	null	when the location of an event in my icalendar changes i want to see articles from the lifestyle section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1625730	null	when a dangerous asteroid is near to earth , i want you to get my dropbox files that were changed most recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625731	null	obtain my dropbox files that changed most recently when a dangerous asteroid is close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625732	null	on earth when asteroid is dangerously close get dropbox files of mine that changed most recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625733	null	when a catastrophic asteroid is close to earth get my dropbox files that changed most recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625734	null	when a dangerous asteroid is close to earth get my dropbox files that changed lately	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625735	null	translate QUOTED_STRING_0 to the GENERIC_ENTITY_tt:iso_lang_code_0 version when my fitbit registers a weight change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625736	null	whenever my fitbit reports a weight change tell me QUOTED_STRING_0 in the GENERIC_ENTITY_tt:iso_lang_code_0 translation	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625737	null	get my dropbox files that changed most recently when a dangerous asteroid is close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1625738	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when my weight on fitbit changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625739	null	when my fitbit weight changes give GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625742	null	translate the phrase QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 when the weight in my fitbit changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625743	null	if my weight is changed in my fitbit translate the words QUOTED_STRING_0 to the GENERIC_ENTITY_tt:iso_lang_code_0 language	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1625756	null	show me the instagram pictures i took at work if the new york times publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1625757	null	i would like to see my work instagram photos when a new article is published by the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1625758	null	when a new article is available through the new york times pull up my work instagram pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1625760	null	if a new article is published by the new york times show me the pictures i took at work from instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1625761	null	display instagram images i 've taken at work whenever there 's new articles published by the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1625769	null	when a new article is published by the new york times show me all the pictures i 've taken at work on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1625771	null	whenever is starts to snow in here send someone an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.gmail . send_email ( ) ;
turking/1625773	null	whenever it starts snowing here send out an email to someone .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.gmail . send_email ( ) ;
turking/1625776	null	send an email to somebody if it starts to snow in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.gmail . send_email ( ) ;
turking/1625777	null	when it starts snowing in here , i want you to send an email to someone	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.gmail . send_email ( ) ;
turking/1625779	null	if it starts snowing in here please send an email to somebody .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.gmail . send_email ( ) ;
turking/1625780	null	whenever the temperature at work is below freezing grab my instagram photos that are tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) filter temperature <= 0 C ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1625781	null	send an email to someone when it starts snowing in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.gmail . send_email ( ) ;
turking/1625785	null	get all my picture on instagram with the tag HASHTAG_0 if the temperature in work gets below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) filter temperature <= 0 C ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1625786	null	when the temperature in work is below freezing get all my instagram pictures tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) filter temperature <= 0 C ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1625790	null	if the temperature in work drops below freezing get my pictures on instagram tagged with HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) filter temperature <= 0 C ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1625792	null	whenever i upload a new picture to instagram can you find out what language QUOTED_STRING_0 is written in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1625793	null	figure out what language QUOTED_STRING_0 is written in when i put a new picture up on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1625794	null	get QUOTED_STRING_0 in its language when a new picture is uploaded on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1625838	null	generate a meme on template GENERIC_ENTITY_imgflip:meme_id_0 when it starts raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1625843	null	whenever there is a time change on my event in icalendar , get my NUMBER_0 latest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625844	null	get last NUMBER_0 instagram pics when time changes on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625845	null	whenever there is a time change detected on some event from my icalendar , get my NUMBER_0 latest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625846	null	if my icalendar event has a new time then get my NUMBER_0 most recent instagram photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625847	null	the NUMBER_0 recent instagram pictures posted by me if my event time is changed on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625850	null	make a GENERIC_ENTITY_imgflip:meme_id_0 meme if it 's raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1625851	null	get the weather in my home when my steps update in fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1625852	null	when event changes on icalendar , get NUMBER_0 latest instagram pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1625853	null	tweet a picture automatically with a caption from the new dropbox files in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1625855	null	in home , retrieve the weather when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1625856	null	get the weather at my home each time my fitbit updates my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1625857	null	whenever fitbit updates my steps show me the weather at my home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1625859	null	when my steps update in fitbit obtain the weather in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1625860	null	when my fitbit steps update , retrieve the weather in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1625875	null	automatically post a photo on twitter saying the organizer of my new calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = organizer ) ;
turking/1625876	null	post a new image to my twitter automatically that shows the organizer of my schedule in my new calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = organizer ) ;
turking/1625877	null	announce the organizer of my calendar event schedule with a posting of an image on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = organizer ) ;
turking/1625878	null	auto post a picture on twitter saying the organizer of my new calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = organizer ) ;
turking/1625882	null	when i get a tweet give me today 's asteroid info	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1625883	null	when i am sent a tweet give me today 's asteroid info	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1625884	null	show me the current day 's asteroid information whenever i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1625885	null	auto write a post with a picture that says the organizer of my schedule from my new calendar on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = organizer ) ;
turking/1625888	null	whenever someone sends me a tweet , i want to see asteroid details for today 's date	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1625894	null	display the day 's asteroid news if i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1625895	null	when a new tweet is received provide me with today 's asteroid info	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1625917	null	order a white mocha when a new article posts in the washington post politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha ) ;
turking/1625919	null	order a white mocha for me any time there is a new article posted in the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha ) ;
turking/1625920	null	when a new article is posted in the politics section of the washington post order a white mocha for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha ) ;
turking/1625921	null	if washington post has a new article in their politics section , get me a white mocha	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha ) ;
turking/1625922	null	if my location changes email EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1625925	null	if i leave this location , send an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1625929	null	order a white mocha if there 's a new article in the washington post 's politics section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha ) ;
turking/1625931	null	if the washington post publishes a new politics article , order a white mocha for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum white_mocha ) ;
turking/1625932	null	when i move from here send an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1625935	null	email EMAIL_ADDRESS_0 when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1625936	null	send an email to EMAIL_ADDRESS_0 when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1625943	null	email EMAIL_ADDRESS_0 when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1625958	null	show my primary category emails if you see my weight change on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1625960	null	when fitbit reports my weight has changed you are to fetch my primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1625961	null	show primary category emails when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1625962	null	when my weight changes on fitbit show me my primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1625964	null	retrieve my emails under the primary category when on fitbit weight changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1625965	null	when my weight changes using fitbit , let me know the emails i have under the category called primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1625970	null	please turn off my lg tv whenever i upload a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1625972	null	if you see my upload a photo to instagram then power my lg tv off .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1625973	null	when i upload a pic on instagram turn off my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1625974	null	shut off my lg tv if i upload a pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1625975	null	turn off my lg tv when i post a pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1625976	null	shut my lg tv off after i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1625978	null	after an event changes on icalendar , change the PATH_NAME_0 picture name to PATH_NAME_1 in dropbox .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . move ( new_name = PATH_NAME_1 , old_name = PATH_NAME_0 ) ;
turking/1625979	null	rename PATH_NAME_0 to PATH_NAME_1 in dropbox when the location of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . move ( new_name = PATH_NAME_1 , old_name = PATH_NAME_0 ) ;
turking/1625981	null	if the location of an event is altered , go in dropbox and convert PATH_NAME_0 to PATH_NAME_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . move ( new_name = PATH_NAME_1 , old_name = PATH_NAME_0 ) ;
turking/1625992	null	i want to see local articles from the washington post after my fitbit updates its steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1625995	null	when my fitbit steps update get articles that is in washington post in section local	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1625998	null	update my fitbit steps and then show me local articles in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1625999	null	get articles in the washington post in section local when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1626000	null	rename the PATH_NAME_0 picture to PATH_NAME_1 in dropbox after the location of an event changes on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . move ( new_name = PATH_NAME_1 , old_name = PATH_NAME_0 ) ;
turking/1626001	null	when my weight changes in fitbit get my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626002	null	obtain my calendar events as soon as my weight changes in fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626003	null	if you notice my fitbit weight change fetch events from my calendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626004	null	right after my fitbit steps are done updating , fetch me the local section articles in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1626005	null	let me view articles in the local section of the washington post as soon as my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1626006	null	if the location of some event gets altered on my icalendar change the name PATH_NAME_0 to PATH_NAME_1 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . move ( new_name = PATH_NAME_1 , old_name = PATH_NAME_0 ) ;
turking/1626009	null	when there 's a change to my fitbit weight i want you to get my calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626013	null	let me know events on icalendar anytime indoor humidity is less than NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626014	null	change the name of PATH_NAME_0 to PATH_NAME_1 in dropbox whenever an event 's location changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . move ( new_name = PATH_NAME_1 , old_name = PATH_NAME_0 ) ;
turking/1626015	null	tell me my own icalendar events if room humidity dips below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626016	null	whenever room humidity drops under NUMBER_0 percent , get me a list of events from icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626017	null	if the humidity in the room goes under NUMBER_0 please tell me what my icalendar events are	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626020	null	if the room humidity drops below NUMBER_0 tell me the events on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626022	null	read my icalendar events whenever the humidity in the room drops below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626029	null	check for fitbit step updates and then show me the weather at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626032	null	tell me the weather in my home when my fitbit steps change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626033	null	tell me home 's weather whenever fitbit updates my steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626035	null	tell me the home weather if my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626037	null	when steps on my fitbit change tell me the weather inside of home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626043	null	when my fitbit steps get updated , tell me the weather at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626059	null	record my weight on fitbit when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.fitbit . recordweight ( ) ;
turking/1626060	null	log the weight as seen on fitbit whenever i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.fitbit . recordweight ( ) ;
turking/1626061	null	get my calendar events when my weight is different on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626062	null	record my current weight on fitbit when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.fitbit . recordweight ( ) ;
turking/1626063	null	when i arrive at work save my current weight on fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.fitbit . recordweight ( ) ;
turking/1626064	null	use my fitbit to record how much i weigh whenever i reach my work location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.fitbit . recordweight ( ) ;
turking/1626066	null	if my weight changes on fitbit retrieve my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1626067	null	record the weight shown on fitbit once i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.fitbit . recordweight ( ) ;
turking/1626070	null	get all recently change dropbox files whenever a new article is published on the plum line blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626071	null	retrieve recently changed dropbox files if a new article is published the plum line blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626072	null	look for any new dropbox files and send them to me by email in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1626075	null	send me my new dropbox files by email in alphabetical order after checking them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1626078	null	show dropbox files that changed recently when a new article is posted in plum line blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626085	null	if a new article is published the plum line blog of the washington post , download recently changed files from dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626092	null	i want you to monitor for new dropbox files shown in alphabetical order and mail them via email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1626095	null	get my dropbox files that have recently changed when plum line blog posts a new article in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626099	null	i want to see all recently changed dropbox files when a new article is published in the plum line blog in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626105	null	post of facebook whatever dms i get	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1626113	null	whenever someone sends me a tweet , get me dropbox files that have been modified lately	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626122	null	show me dropbox files that have changed most recently when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626123	null	when i get tweeted send my most recent updated files from dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626132	null	when i get a tweet send me my newest dropbox files that have been updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626135	null	retrieve recently modified dropbox files if i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626143	null	when i receive a tweet then list all dropbox files that have changed by most recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1626153	null	when i upload a new picture on instagram , send me all of the direct messages i receive on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1626155	null	when i upload new pictures on instagram , i want to see the direct messages i have on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1626157	null	i want to see my twitter dms any time i post photos to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1626158	null	if i add pics to instagram , get me any dms sent via twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1626175	null	send me all of the direct messages i receive ob twitter after uploading a new picture on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . direct_messages ( ) ;
turking/1626227	null	get nasa 's apod whenever there is an event that is about to start on my 1calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @gov.nasa . apod ( ) ;
turking/1626233	null	retrieve the apod for nasa whenever my icalendar has an event that is about to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @gov.nasa . apod ( ) ;
turking/1626235	null	when any event from my icalendar is getting ready to start , get me nasa 's apod	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @gov.nasa . apod ( ) ;
turking/1626240	null	if a new event will begin on my icalendar then bring up nasa 's apod	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @gov.nasa . apod ( ) ;
turking/1626249	null	send a headline of the new reddit front page posts that were published in the last hour via gmail instantly	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter updated >= $start_of ( h ) ) => @com.gmail . send_email ( message = title ) ;
turking/1626255	null	use gmail to automatically forward the newest headlines of reddit posts that are on the front page published within the hour .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter updated >= $start_of ( h ) ) => @com.gmail . send_email ( message = title ) ;
turking/1626256	null	make a meme anytime a person i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . generate ( ) ;
turking/1626257	null	from gmail send the headline of the new reddit front page posts that have been published in the past hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter updated >= $start_of ( h ) ) => @com.gmail . send_email ( message = title ) ;
turking/1626258	null	i want the headline of the reddit front page of the last hour published automatically via gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter updated >= $start_of ( h ) ) => @com.gmail . send_email ( message = title ) ;
turking/1626259	null	send the title of the latest reddit posts that were published on the front page in the last hour automatically through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) filter updated >= $start_of ( h ) ) => @com.gmail . send_email ( message = title ) ;
turking/1626260	null	create a meme when someone that i follow makes a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . generate ( ) ;
turking/1626264	null	whenever one of the people that i follow tweets , produce a meme .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . generate ( ) ;
turking/1626265	null	whenever a person that i follow sends out a tweet , create a meme .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . generate ( ) ;
turking/1626281	null	show me any gif on giphy after the front page of reddit changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.giphy . get ( ) ;
turking/1626282	null	when there 's an update on reddit 's front page retrieve a random gif from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.giphy . get ( ) ;
turking/1626283	null	get a giphy random gift when there is an update on reddit front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.giphy . get ( ) ;
turking/1626285	null	if the front page of reddit updates , show a random giphy gif .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.giphy . get ( ) ;
turking/1626286	null	get me a random giphy gif when the front page of reddit is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.giphy . get ( ) ;
turking/1626287	null	i 'd like to see a random gif from giphy when reddit 's front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.giphy . get ( ) ;
turking/1626288	null	tell me my thermostat temperature when my calendar event at the QUOTED_STRING_0 location starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1626289	null	when the QUOTED_STRING_0 event on my calendar starts , send me the thermostat temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1626290	null	when an event on my calendar at location QUOTED_STRING_0 begins get me the temperature on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1626291	null	when an event for QUOTED_STRING_0 begins pull up my thermostat 's current temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1626292	null	show me my thermostat 's current setting when any events at QUOTED_STRING_0 begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1626312	null	get me the temperature on my thermostat when an event on my calendar at location QUOTED_STRING_0 begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1626327	null	when LOCATION_0 gets rain email EMAIL_ADDRESS_0 through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1626328	null	email EMAIL_ADDRESS_0 using gmail when rain begins in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1626330	null	i want to send an email to EMAIL_ADDRESS_0 from my gmail at the time it starts raining in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1626331	null	when it begins to rain in LOCATION_0 , email EMAIL_ADDRESS_0 using my gmail account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1626335	null	send an email to EMAIL_ADDRESS_0 with my gmail account when it starts to rain in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1626365	null	if my reddit front page updates , show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1626370	null	update me with my fitbit steps whenever the front page of reddit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1626371	null	whenever the front page of reddit updates , show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1626374	null	i want to see my fitbit steps whenever the reddit front page updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1626380	null	whenever reddit 's front page updates , show me my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1626381	null	i 'd like to know how many steps i took on fitbit when the front page of reddit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1626427	null	caption automatically and post the picture of a new picture from curiosity rover as QUOTED_STRING_0 onto twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . rover ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1626430	null	post and automatically caption the picture of a new picture from curiosity rover as QUOTED_STRING_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . rover ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1626431	null	post it on twitter and auto caption the pic of a new picture from curiosity rover as QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . rover ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1626433	null	when the curiosity rover takes a new picture automatically create a caption that says QUOTED_STRING_0 and post the image on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . rover ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1626452	null	get me the channels i 'm subscribed to on youtube whenever my fitbit updates my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1626453	null	any time that my fitbit updates the steps i 've taken get me my youtube channel subscriptions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1626461	null	bring up the channels i 'm subscribed to on youtube when my fitbit steps finally update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1626464	null	upon updating my fitbit steps get me channels that i am subscribed to on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1626472	null	play the link URL_0 on my lg tv when a new article is available in the opinions section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1626474	null	if there is a new article in the opinions section of the washington post play this link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1626475	null	if there is a new opinions article in the washington post then have my lg tv bring up URL_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1626476	null	play link URL_0 on my lg tv when there is a new article in the opinions section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1626479	null	play URL_0 on my lg tv whenever there is a new article in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1626485	null	if i receive a gmail email , get washington post lifestyle	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626486	null	whenever i receive a email on gmail , show washington post lifestyle section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626488	null	if my fitbit steps are updated , show me my subscribed channels on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . list_subscriptions ( ) ;
turking/1626489	null	show washington post lifestyle section when i receive an email on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626492	null	whenever i get a new email on gmail , get washington post lifestyle	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626494	null	can i see the washington post lifestyle when i get a new email on gmail ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626504	null	i want the washington post lifestyle when i get a gmail email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626575	null	if fog goes under NUMBER_0 at the location of my instagram picture alert me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1626576	null	tell me if the fog goes below NUMBER_0 in this weather in any location of my photos on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1626577	null	tell me whenever the fog becomes under NUMBER_0 in the weather where my instagram picture is taken	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1626579	null	if the location of my instagram picture location has fog under NUMBER_0 , inform me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1626580	null	tell me if fog goes under NUMBER_0 in the location of my instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1626583	null	let me know if the fog setting is different from NUMBER_0 in the location that matches my instagram pictures and then tell me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1626585	null	send me notification when the fog differs from NUMBER_0 in the weather of the location of my pictures on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1626590	null	when fog is different then NUMBER_0 at the location in instagram pics , tell me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1626591	null	tell me the weather at home when i get an important email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626592	null	tell me the weather in home when an important marked email is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626593	null	when an important email arrives , tell me what the weather is like at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626594	null	when an email marked as important is received by me get the in home weather for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626598	null	bring it to my attention if the fog goes below NUMBER_0 in the weather of my instagram pictures ' location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter fog <= NUMBER_0 ;
turking/1626604	null	if i 'm getting an important marked email tell me my house 's weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1626609	null	tell me when the fog is different than NUMBER_0 in location of the instagram pics i have	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1626634	null	when i take more than NUMBER_0 steps send me the tweets to people i following in reference to HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1626637	null	display the tweets of people i follow in reference to HASHTAG_0 when my step count in higher than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1626639	null	when i take above NUMBER_0 steps fetch me HASHTAG_0 tweets made by people i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1626641	null	after i walk more than NUMBER_0 steps give me tweets from people i follow about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1626643	null	if i take more than NUMBER_0 steps send me tweets about HASHTAG_0 from people i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1626645	null	if my icalendar has an even that is about to start pick a random number .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1626647	null	from people that i follow give me tweets about HASHTAG_0 when i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1626651	null	on my icalendar when an event is about to start choose a random number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1626654	null	pull up a random number when my icalendar has an event that 's about to start .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/1626658	null	if the weather fog is not NUMBER_0 in the location of my instagram pictures , notify me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1626720	null	get my NUMBER_0 most recent instagram pictures if someone commits to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1626722	null	fetch my NUMBER_0 recent pictures on instagram when github has someone commit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1626723	null	as soon as someone commits to github get my NUMBER_0 recent pictures from instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1626724	null	if someone commits to github then pull up my last NUMBER_0 pictures on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1626725	null	if someone commits to github get my NUMBER_0 newest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1626736	null	fetch my NUMBER_0 newest instagram pictures when there is a commit to github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1626810	null	become a twitter follower of USERNAME_0 when the washington post publishes a lifestyle section article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1626814	null	follow USERNAME_0 if washington post publishes an article in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1626815	null	start following USERNAME_0 on twitter once there is an article published on washington post in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1626822	null	if the washington post publishes a lifestyle section article , become a USERNAME_0 twitter follower	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1626826	null	any time washington post publishes an article in the lifestyle section then follow USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1626845	null	when an article gets posted in the lifestyle section that washington post published begin following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1626876	null	put QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 when there is an even on my calendar ending at QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_1 ) filter status == enum ended => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1626877	null	when an event on my calendar is ending and it 's QUOTED_STRING_0 translate QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum ended => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1626879	null	when QUOTED_STRING_0 location on my calendar ends translate QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum ended => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1626880	null	tweet the subject of my last email automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . post ( status = subject ) ;
turking/1626882	null	tweet subject of newest email automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . post ( status = subject ) ;
turking/1626883	null	as soon as i get a new email tweet the subject on your own	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . post ( status = subject ) ;
turking/1626884	null	tweet the subject of my latest new email automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . post ( status = subject ) ;
turking/1626885	null	when an event at QUOTED_STRING_0 from my calendar is over translate QUOTED_STRING_1 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum ended => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1626886	null	automatically send a tweet with the subject of my most recent email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . post ( status = subject ) ;
turking/1626887	null	tweet the subject automatically of my latest new email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . post ( status = subject ) ;
turking/1626888	null	when event on my calendar QUOTED_STRING_0 ends translate QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum ended => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1626903	null	as soon as USERNAME_0 opens an issue on github give me washington post national	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1626905	null	if USERNAME_0 puts an issue on github then let me have washington post national	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1626908	null	show me washington post national when an issue on github is opened by USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1626909	null	when USERNAME_0 has opened an issue on github then give me the washington post national	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1626913	null	show me washington post national when USERNAME_0 opens an issue on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1626914	null	when USERNAME_0 opens an issue on github show me the washington post national articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.washingtonpost . get_article ( section = enum national ) ;
turking/1626931	null	get the washington post 's lifestyle article if i get an important marked email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626935	null	give me results from the lifestyle section of the washington post whenever an email i get is marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626936	null	when i get an email and it is marked as important fetch the lifestyle section of washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626937	null	if i get an email tagged as important give me washington post lifestyle	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626938	null	when i receive an email marked as important retrieve washington post lifestyle	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626943	null	should i get an important email grab the lifestyle article from the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1626970	null	i want my primary category emails if they publish something via the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1626971	null	show me my primary inbox emails when they publish something that 's on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1626973	null	when anything is published on the rss feed get my primary category emails for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1626978	null	when something is published to the rss feed , show me my primary emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1626979	null	when the snow stops here then retrieve the channels that i follow on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . list_subscriptions ( ) ;
turking/1626980	null	show me the channels i follow on youtube once the snow stops here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . list_subscriptions ( ) ;
turking/1626981	null	show all the channels i 'm following on youtube once it ceases to snow here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . list_subscriptions ( ) ;
turking/1626983	null	show me my primary emails when something is published on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1626984	null	i want to see all my primary emails whenever something has been published on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1626985	null	whenever it stops snowing , i want to get the channels that i follow on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . list_subscriptions ( ) ;
turking/1626986	null	when it stops snowing here , obtain channels i follow on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . list_subscriptions ( ) ;
turking/1626987	null	retrieve channels i follow on youtube when it stops snowing here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . list_subscriptions ( ) ;
turking/1627001	null	when the steps on my fitbit update grab NUMBER_0 curiosity rover pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @gov.nasa . rover ( count = NUMBER_0 ) ;
turking/1627002	null	get NUMBER_0 pictures from curiosity rover if my fitbit steps change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @gov.nasa . rover ( count = NUMBER_0 ) ;
turking/1627004	null	if my fitbit steps update , get NUMBER_0 pictures from curiosity rover	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @gov.nasa . rover ( count = NUMBER_0 ) ;
turking/1627006	null	get me NUMBER_0 curiosity rover photos if an update happens to my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @gov.nasa . rover ( count = NUMBER_0 ) ;
turking/1627008	null	if there 's an update to my fitbit steps fetch me NUMBER_0 curiosity rover pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @gov.nasa . rover ( count = NUMBER_0 ) ;
turking/1627014	null	show me NUMBER_0 curiosity rover pictures when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @gov.nasa . rover ( count = NUMBER_0 ) ;
turking/1627039	null	create a caption with the description of new channels i follow on youtube and place it on a picture sent on my slack to HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_subscriptions ( ) ) => @com.slack . send_picture ( caption = description , channel = HASHTAG_0 ) ;
turking/1627040	null	send a picture on slack to HASHTAG_0 automatically with the caption description set to the new channels that i follow on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_subscriptions ( ) ) => @com.slack . send_picture ( caption = description , channel = HASHTAG_0 ) ;
turking/1627042	null	sent HASHTAG_0 a picture on slack with a description of any new youtube channels that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_subscriptions ( ) ) => @com.slack . send_picture ( caption = description , channel = HASHTAG_0 ) ;
turking/1627045	null	send a picture automatically on slack to HASHTAG_0 that has a caption containing the description of the youtube new channels that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_subscriptions ( ) ) => @com.slack . send_picture ( caption = description , channel = HASHTAG_0 ) ;
turking/1627048	null	send a picture on slack to HASHTAG_0 with caption the description of new channels i follow on youtube from now on	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_subscriptions ( ) ) => @com.slack . send_picture ( caption = description , channel = HASHTAG_0 ) ;
turking/1627191	null	after i leave here , translate the phrase QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627192	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627193	null	convert QUOTED_STRING_0 into the GENERIC_ENTITY_tt:iso_lang_code_0 language once i am gone from here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627195	null	if i leave this location put QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627197	null	in GENERIC_ENTITY_tt:iso_lang_code_0 translate QUOTED_STRING_0 when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627202	null	when fitbit changes my weight tell me in reverse alphabetical order my dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1627212	null	list my dropbox files in reverse alphabetical order when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1627217	null	when my weight on fitbit updates to something new inform me of my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1627226	null	alert me my dropbox files in reverse alphabetical order when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1627228	null	dropbox files in reverse alphabetical order tell me when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1627239	null	when my weight changes on fitbit tell me my dropbox files in reverse alphabetical doer	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1627249	null	whenever i receive an email on gmail give me my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1627251	null	when gmail is received , send calendar email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1627253	null	when i receive a gmail email please tell my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1627254	null	if there is an issue that is opened by USERNAME_0 show my emails that have the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1627256	null	tell me the calendar schedule whenever i 've received a gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1627257	null	if an issue on github is initiated by USERNAME_0 then show me all my emails that have the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1627258	null	put as the subject on emails QUOTED_STRING_0 , if USERNAME_0 opens an issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1627259	null	show my emails with the subject of QUOTED_STRING_0 , when USERNAME_0 opens an issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1627260	null	when i receive an email on gmail i want my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1627261	null	you are to show me my emails that have QUOTED_STRING_0 in the subject if USERNAME_0 were to initiate an issue on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1627262	null	whenever there is an issue opened by USERNAME_0 on github show me my emails with the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1627284	null	send a picture automatically on slack to HASHTAG_0 with the caption , my new steps from fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . send_picture ( caption = $result , channel = HASHTAG_0 ) ;
turking/1627285	null	send a picture on slack to HASHTAG_0 automatically showing my latest fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . send_picture ( caption = $result , channel = HASHTAG_0 ) ;
turking/1627286	null	on slack , i would like to send a picture to HASHTAG_0 with caption my new steps from fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.slack . send_picture ( caption = $result , channel = HASHTAG_0 ) ;
turking/1627294	null	send my calendar schedule when an email is received on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1627303	null	translate QUOTED_STRING_0 phrase to GENERIC_ENTITY_tt:iso_lang_code_0 if the temp in LOCATION_0 is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627305	null	if LOCATION_0 is below freezing , translate the phrase QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627306	null	when you notice a new phd comics post , retrieve my work instagram pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627307	null	when phd comics makes a new post fetch the instagram images i took while i was at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627308	null	get me the images i took at work and put on instagram any time phd comics updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627309	null	whenever there is a new post on phd comics get the instagram pictures i took at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627311	null	when the temperature in LOCATION_0 is below freezing translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627314	null	when it is under the freezing point in LOCATION_0 , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627315	null	if the temperate gets to below freezing in LOCATION_0 , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1627317	null	when there 's a new post on phd comics obtain the instagram photos that i took at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627323	null	give me my pictures on instagram that i took at work when phd comics posts something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627359	null	say my new dropbox files in reverse alphabetical order automatically in message on slack to HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1627365	null	when my new dropbox files are in reverse alphabetical order , send automatic messages on slack to HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1627377	null	to HASHTAG_0 on slack automatically send a message saying my new dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1627379	null	send automatic message to HASHTAG_0 via slack naming new dropbox files backwards alphabetically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1627380	null	automatically post my new instagram photos on twitter with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627381	null	i want twitter to instantly post my latest instagram pictures with a caption saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627384	null	have twitter auto post my new instagram pictures with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627386	null	post my new instagram photos on twitter with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627390	null	using QUOTED_STRING_0 caption , automatically post new picture from my instagram to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627392	null	post my new instagram pictures to twitter with the caption of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627402	null	get me instagram pics taken at my workplace whenever there is an update to my steps on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627403	null	get my instagram pictures i took at work anytime my steps update in fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627406	null	anytime my step count on fitbit updates , give me the instagram photos i snapped at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627407	null	i want to see all the instagram photos i took at work whenever fitbit steps updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627410	null	when my fitbit updates my steps then get me the instagram pictures i took at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1627425	null	start following USERNAME_0 on twitter when a i put a new pic on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1627428	null	follow USERNAME_0 on twitter whenever i upload a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1627429	null	become an USERNAME_0 twitter follower if i upload a new photo onto instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1627432	null	start following USERNAME_0 on twitter as soon as i upload a new instagram photo .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1627433	null	if i upload a new pic to instagram , please start following USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1627436	null	anytime i upload a new instagram picture become a follower of USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1627438	null	display the steps on my fitbit if there is a new article in washington post opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1627439	null	if opinions section of the washington post has a new article show me my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1627440	null	if the washington post publishes a new article in the opinion section , show me my steps from fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1627441	null	when there is a new article in washington post opinions section display my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1627444	null	if there is a new article in the opinions section of the washington post , show my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1627448	null	i want to see my fitbit steps whenever the washington post opinions section has a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.fitbit . getsteps ( ) ;
turking/1627451	null	post photo with new uber eta as the caption on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.tumblr.blog . post_picture ( caption = $result ) ;
turking/1627453	null	search for new uber eta then post it as a caption to pic on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.tumblr.blog . post_picture ( caption = $result ) ;
turking/1627454	null	look for new time estimate on uber and then post a pic with caption them on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.tumblr.blog . post_picture ( caption = $result ) ;
turking/1627455	null	check for new time guess for uber then post a pic with caption them on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.tumblr.blog . post_picture ( caption = $result ) ;
turking/1627456	null	post up a captioned photograph on tumblr after checking for a new uber time estimate .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.tumblr.blog . post_picture ( caption = $result ) ;
turking/1627457	null	look into a new uber time estimate and then put up a captioned picture on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.tumblr.blog . post_picture ( caption = $result ) ;
turking/1627549	null	bring up new york times when the humidity in the room is under NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.nytimes . get_front_page ( ) ;
turking/1627552	null	get new york times as the humidity in the room goes below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.nytimes . get_front_page ( ) ;
turking/1627553	null	when the humidity that is in room goes below NUMBER_0 retrieve new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.nytimes . get_front_page ( ) ;
turking/1627555	null	get the new york times if the room humidity is under NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.nytimes . get_front_page ( ) ;
turking/1627556	null	if the humidity in the room goes under NUMBER_0 , get the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.nytimes . get_front_page ( ) ;
turking/1627557	null	if the humidity in the room drops below NUMBER_0 get new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.nytimes . get_front_page ( ) ;
turking/1627559	null	generate a new empty folder on dropbox every time when a new tweet is sent to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1627560	null	start an empty folder in dropbox if i get a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1627562	null	make a new empty dropbox folder when i get a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1627563	null	when i get a tweet create a new empty folder in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1627581	null	create a new empty folder in dropbox if i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1627606	null	if i receive a new tweet make a dropbox empty folder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . create_new_folder ( ) ;
turking/1627613	null	grab my unimportant emails if fitbit updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1627616	null	when fitbit steps update find any of my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1627618	null	obtain my unimportant emails when my fitbit steps get updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1627620	null	whenever fitbit updates , grab all my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1627622	null	when fitbit updates my steps , get my unimportant emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1627630	null	if there is a new video from youtube channels i follow give me important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1627631	null	when steps on fitbit change locate my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1627632	null	show me important emails once there is a new video from youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1627636	null	in the event there is a new video from youtube channels i follow give me important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1627637	null	when there is a new video from youtube channels i follow send me important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1627647	null	give me my important emails whenever one of my youtube followers posts a new video .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1627833	null	post my new steps from fitbit on twitter after checking for them .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1627834	null	if the washington post publish an article in the politics section , get all the dropbox files in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1627836	null	i would like to see the new steps from fitbit and have them posted on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1627837	null	update me on the steps from fitbit then post it on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1627838	null	if the washington post publishes a political article , grab my dropbox files in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1627839	null	obtain my dropbox files in alphabetical order when the washington post begins to publish an article in the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1627840	null	take the new steps from my fitbit and make a post with them to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1627841	null	post my steps to twitter after checking to see what the new steps are on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1627842	null	check for my new instagram pictures and post it on twitter and caption that as QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627843	null	search for new instagram photos and caption them with QUOTED_STRING_0 then post it to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627844	null	whenever a new article appears in the politics section of the washington post please pull up my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1627846	null	caption that as QUOTED_STRING_0 and post it on twitter after checking for my new instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627850	null	take instagram photos , mark them as QUOTED_STRING_0 and repost to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627851	null	make a post on twitter with any new instagram pictures and make the caption read QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627858	null	look for new instagram pictures and then give them the title QUOTED_STRING_0 then post it to twitter for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1627876	null	show my dropbox files in alphabetical order whenever there is a new article published in the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1627882	null	get me email messages sent by EMAIL_ADDRESS_0 if i post a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1627883	null	any time i add pics to instagram , retrieve mail from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1627885	null	get all the emails from EMAIL_ADDRESS_0 when i upload a new pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1627886	null	if i upload a new pic on instagram retrieve my emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1627893	null	get my email messages from EMAIL_ADDRESS_0 if i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1627894	null	if i upload a picture on instagram , get my emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1627898	null	get my dropbox files in alphabetical order after the washington post publishes articles in the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1627911	null	bring up my fitbit steps if someone on github comments on an issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627912	null	when someone comments on a github issue give me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627913	null	if somebody comments on a github issue show me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627914	null	if there is someone who comments on a github issue , display my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627915	null	display my steps from fitbit if someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627916	null	if there 's a new github comment on an issue than show me the fitbit step number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627917	null	acquire articles in the washington post in section opinions when i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1627918	null	if my location is no longer here then get me any washington post articles from the opinion section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1627919	null	if i leave here get articles that is in the washington post in section that has opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1627920	null	show me washington post opinion articles if i 'm not at the current location anymore	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1627921	null	display the articles in the washington post opinions section when i leave my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1627923	null	when i leave my current location , display the articles in the washington post opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1627930	null	post a twitter photo with the caption QUOTED_STRING_0 when the washington post has a new article in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1627934	null	post QUOTED_STRING_0 over on twitter if there 's an article that 's posted in the washington post 's lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1627935	null	when the lifestyle section of the washington post has a new article then put a photo on twitter with the title QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1627936	null	when i get a new message on slack , send me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627937	null	post a picture on twitter saying QUOTED_STRING_0 whenever there is a new washington post lifestyle article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1627938	null	if i get a message on slack , get my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627939	null	if there 's an article posted in the washington post 's lifestyle section make a twitter post with a picture stating QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1627940	null	grab my steps info from fitbit if i should receive a message from slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627942	null	i want to see my fitbit steps when i receive a message on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627945	null	in the lifestyle section of the washington post , send a picture out on twitter saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1627957	null	show me my fitbit steps when there is a change to something in my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627958	null	show me my fitbit steps when something changes on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627964	null	when i get a message on slack , retrieve my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627971	null	when something changes on icalendar show me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627972	null	display my fitbit steps when there is a modification to my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1627979	null	when there is a change to my icalendar then show my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1628065	null	caption the text of new tweets from people i follow on tumblr on a new picture post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.tumblr.blog . post_picture ( caption = text ) ;
turking/1628068	null	i want pictures posted using the captions of tweets from those followed on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.tumblr.blog . post_picture ( caption = text ) ;
turking/1628069	null	post a picture right away with caption of new tweets of people i follow on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.tumblr.blog . post_picture ( caption = text ) ;
turking/1628070	null	post a picture with the caption showing new tweets from people i follow on tumblr .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.tumblr.blog . post_picture ( caption = text ) ;
turking/1628075	null	post a picture automatically to twitter with the caption detailing the text of any tweets i get	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.tumblr.blog . post_picture ( caption = text ) ;
turking/1628129	null	i want to see tweets from the people i follow when i get an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) ;
turking/1628131	null	put tweets from anyone i follow up when i get an email noted as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) ;
turking/1628136	null	when i get an email that is flagged as important , send me tweets from everyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) ;
turking/1628137	null	if i receive an email marked as important show me tweets from anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) ;
turking/1628148	null	when i leave home post a facebook message saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1628157	null	create a facebook post that says QUOTED_STRING_0 when i leave my house	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1628161	null	figure out my current location that 's new and email it out .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1628163	null	send my newest current location to me by email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1628165	null	send out my new current location through email after you 've checked it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1628192	null	show tweets from followed users if i get an important e-mail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.twitter . home_timeline ( ) ;
turking/1628200	null	when washington post local section has a new article create a GENERIC_ENTITY_imgflip:meme_id_0 meme for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1628201	null	generate a GENERIC_ENTITY_imgflip:meme_id_0 meme when there is a new article in washington post local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1628202	null	when there is a new article in the washington post sports sections show me tweets from anyone i follow that replies to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1628203	null	once there is a new article in washington post local section generate a GENERIC_ENTITY_imgflip:meme_id_0 meme	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1628204	null	if there is a new article in washington post sports section , show me tweets in reply to USERNAME_0 from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1628206	null	let me know of what people i follow have replied to USERNAME_0 when there is a new washington post sports section article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1628208	null	when there is a new article in sports section of washington post tell me tweets from anyone i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1628210	null	make a GENERIC_ENTITY_imgflip:meme_id_0 meme if there is an article in the washington post local section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1628213	null	when there is a new washington post sports article show me tweets from people i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1628214	null	caption my recent instagram photos QUOTED_STRING_0 and share on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1628215	null	in reply to USERNAME_0 tell me tweets from anyone i follow when there is a new article in the sports section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1628219	null	make a GENERIC_ENTITY_imgflip:meme_id_0 meme each time a new article is published in the washington post local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1628222	null	change the caption of my recent instagram pictures to QUOTED_STRING_0 and post it on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1628223	null	the photo of my new recent instagram pictures as QUOTED_STRING_0 automatically caption and post it on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1628225	null	give my newest instagram pictures an automatic caption of QUOTED_STRING_0 and put them on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1628226	null	post on twitter photo of my new recent instagram pictures as QUOTED_STRING_0 automatically caption	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1628227	null	post my new instagram pictures on twitter with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1628283	null	if i move show me my most recently changed dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1628285	null	when i move retrieve my dropbox files that most recently changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1628286	null	get all of my most recently changed dropbox files anytime i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1628303	null	find my most recently changed dropbox files whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1628309	null	i want to see my dropbox files that changed most recently when i change locations	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1628321	null	when i move i want to get the dropbox files that were recently changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1628344	null	upload any pictures that i put on instagram to my tumblr also	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( picture_url = picture_url ) ;
turking/1628346	null	put the photos i uploaded on instagram on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( picture_url = picture_url ) ;
turking/1628348	null	put my instagram pictures on my tumblr when i upload them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( picture_url = picture_url ) ;
turking/1628349	null	if i upload a pic on instagram upload them on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( picture_url = picture_url ) ;
turking/1628350	null	when i put up a picture on instagram upload them on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( picture_url = picture_url ) ;
turking/1628365	null	send me my important emails when i upload a photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1628366	null	i want important emails any time i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1628367	null	retrieve important emails when a photograph is posted to instagram by me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1628369	null	show me my important emails whenever i put a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1628370	null	get me emails that are important when i put a photo on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1628373	null	every time i upload a new picture on instagram please display my important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1628375	null	if there are instagram pictures uploaded , also put them on tumblr	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.tumblr.blog . post_picture ( picture_url = picture_url ) ;
turking/1628387	null	post on facebook something when snow starts here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.facebook . post ( ) ;
turking/1628394	null	make a post to facebook whenever it begins to snow here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.facebook . post ( ) ;
turking/1628400	null	when it starts snowing in here create a post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.facebook . post ( ) ;
turking/1628402	null	on my tv by lg play link URL_0 when on my icalendar something changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/1628403	null	when on my icalendar something changes the link URL_0 should be played	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/1628404	null	play link URL_0 with my lg tv any time that something on my icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628406	null	if my icalendar changes then play play link URL_0 using my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628407	null	when something is different on my icalendar play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628409	null	if something adjusts on my icalendar play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628420	null	when i depart my house alter my slack presence	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . setPresence ( ) ;
turking/1628421	null	if i leave home change my slack presence	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . setPresence ( ) ;
turking/1628423	null	change my slack presence when i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . setPresence ( ) ;
turking/1628425	null	modify my slack presence whenever i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . setPresence ( ) ;
turking/1628426	null	change my slack location if i leave from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.slack . setPresence ( ) ;
turking/1628427	null	on tv lg increase volume when rain stops at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/1628428	null	if it stops raising , increase the volume of my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1628429	null	at home stops raining on lg tv increase volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1628430	null	when it is n't raining anymore in home put the volume up on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1628434	null	turn the volume up on my lg tv when the rain stops in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1628437	null	turn up the volume of my lg tv whenever it 's raining .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1628482	null	notify me when i receive a slack post facebook message that says QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1628485	null	let me know when i get a facebook message from slack post saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1628491	null	i need my newest instagram pictures when i get a fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1628492	null	show me my newest instagram posts if i get an update on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1628493	null	show me my recent instagram pics when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1628494	null	when my fitbit steps update give me my recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1628496	null	i 'd like to see my newest instagram pictures whenever my fitbit steps updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1628497	null	whenever my fitbit updates , show me my recent instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1628507	null	i want to grab my dropbox files in alphabetical order if it starts to snow at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1628511	null	get my dropbox files in alpha order if it starts snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1628513	null	should it be snowing at home , grab my dropbox files over in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1628518	null	put up a picture saying QUOTED_STRING_0 on twitter as soon as the washington post 's politics section has a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1628519	null	if there is a new article in the washington post politics section , put an image on twitter that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1628520	null	can you put a picture up on twitter that says QUOTED_STRING_0 if a new article appears in the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1628521	null	post a twitter picture that says QUOTED_STRING_0 any time the washington post publishes a new article in the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1628523	null	send a picture on twitter that says QUOTED_STRING_0 if the washington post politics section puts out a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1628524	null	retrieve my dropbox files in alphabetical order if it starts snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1628526	null	get my dropbox files in abc order when it starts snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1628537	null	if the washington post politics section puts out a new article post a photo to twitter that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1628545	null	use my new dropbox files in alphabetical order as a message and make the subject QUOTED_STRING_0 and automatically send an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1628547	null	send an email to EMAIL_ADDRESS_0 automatically with my new dropbox files in alphabetical order and subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1628549	null	automatically send an email to EMAIL_ADDRESS_0 with my new dropbox files in alphabetical order as the message and QUOTED_STRING_0 as the subject	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1628550	null	after my fitbit steps update , retrieve tweets from anyone i follow that contain QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628551	null	retrieve tweets from anyone i follow that contain QUOTED_STRING_0 , when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628552	null	when my fitbit updates get me tweets from anyone i follow that has QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628553	null	get tweet messages that include QUOTED_STRING_0 from people i follow whenever my fitbit steps change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628554	null	when the fitbit steps update get tweets from anyone i follow that has QUOTED_STRING_0 in it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628555	null	with subject QUOTED_STRING_0 and my new dropbox files in alphabetical order send an email to EMAIL_ADDRESS_0 automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1628557	null	if my step count on fitbit updates , pull up tweets from those i have followed featuring the phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628559	null	send an email to EMAIL_ADDRESS_0 using the subject QUOTED_STRING_0 and order the dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1628562	null	file the dropbox files in alphabetical order and send out an email to EMAIL_ADDRESS_0 with QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1628564	null	automatically post the text of new tweets from anyone i follow on the facebook site	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = text ) ;
turking/1628668	null	please retrieve the link for the newest and latest posts on an rss feed for my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1628669	null	play automatically the link of latest new posts on an rss feed on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1628670	null	can you automatically display a link of the latest posts from an rss feed onto my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1628671	null	on my lg tv automatically play the link of new latest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1628676	null	automatically get the latest rss feed post link and make my lg tv play it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1628707	null	get the link to new rss feed posts and have them play on my lg tv automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1628720	null	if the temperature goes below freezing in LOCATION_0 , retrieve my schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1628721	null	display my schedule if the temperature in LOCATION_0 is below freezing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1628724	null	if the temperature in LOCATION_0 is below freezing , show my schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1628725	null	i need to see my schedule when the temperature dips below freezing in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1628727	null	get me the washington post sports section when someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1628728	null	give me washington post sports when someone comments on a github issue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1628729	null	show the washington post sports section to me any time someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1628730	null	if it 's under freezing in LOCATION_0 , tell me my schedule .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1628731	null	if someone comments on a github issue , show me washington post sports .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1628733	null	display washington post sports section if somebody comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1628764	null	something needs posted when i move away from work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.facebook . post ( ) ;
turking/1628784	null	play URL_0 on my lg tv whenever the steps update on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628785	null	play URL_0 on my lg tv when the fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628786	null	play URL_0 on my lg tv when my fitbit steps are updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628792	null	please send URL_0 to my lg tv when you see the steps on my fitbit have updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628793	null	once my fitbit steps are updated , play URL_0 with my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628796	null	start playing URL_0 on my lg tv if the fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1628810	null	when washington post adds a new sports article grab my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.fitbit . getsteps ( ) ;
turking/1628812	null	get my steps from fitbit when there is a new article in the sports section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.fitbit . getsteps ( ) ;
turking/1628814	null	collect my fitbit steps when a new article in the washington post sports section appears	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.fitbit . getsteps ( ) ;
turking/1628824	null	retrieve my steps from fitbit when there is a new article in the sports part of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.fitbit . getsteps ( ) ;
turking/1628826	null	anytime i post a picture on instagram , get all emails that arrived today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1628831	null	when i post a new pic on instagram retrieve today 's emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1628838	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 if it stops snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1628844	null	translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 whenever the snow stops at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum snowy ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1628851	null	grab my instagram pictures that are tagged as HASHTAG_0 whenever fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1628852	null	if fitbit steps update get the instagram pictures labeled with the hashtag HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1628853	null	when my fitbit updates steps , show my HASHTAG_0 instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1628857	null	get my instagram pictures tagged HASHTAG_0 when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1628859	null	when my fitbit steps update retrieve my instagram pics tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1628860	null	immediately deliver a medium espresso to the location of my new instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum espresso , delivery_location = location , size = enum medium ) ;
turking/1628863	null	automatically send a medium espresso to the location of my new instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum espresso , delivery_location = location , size = enum medium ) ;
turking/1628864	null	please deliver a medium espresso to the location of my latest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum espresso , delivery_location = location , size = enum medium ) ;
turking/1628865	null	if there is a new article in the wall street journal world news section give me the weather in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1628866	null	can you send a medium espresso over to the location my newest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.demo.coffee . order ( beverage = enum espresso , delivery_location = location , size = enum medium ) ;
turking/1628867	null	when there is a new article in the wall street journal world news section send me the weather in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1628868	null	please send me the weather details for home whenever a new article appears in the world news section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1628870	null	can you send me the weather for home when the wall street journal publishes a new article in their world news section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1628871	null	tell me my home weather forecast anytime a wall street journal article is published in world news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1628873	null	each time an article first appears in world news of the wall street journal , let me know the weather at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1628976	null	whenever i move from the location grab the latest instagram pictures from LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1628978	null	find my instagram pictures from LOCATION_0 when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1628979	null	grab the instagram pictures i 'm getting at LOCATION_0 when i move from this spot .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1628980	null	when i move away from here retrieve instagram pictures that were taken by me at LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1628984	null	retrieve the instagram pictures i took at LOCATION_0 when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1628985	null	get the instagram photos i took at LOCATION_0 when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.instagram . get_pictures ( ) filter location == LOCATION_0 ;
turking/1629022	null	show me all the direct messages on twitter for all QUOTED_STRING_0 events seen on calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.twitter . direct_messages ( ) ;
turking/1629023	null	if an event organized by QUOTED_STRING_0 about to start then tell me about new dms on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.twitter . direct_messages ( ) ;
turking/1629026	null	notify me of any direct messages on twitter if a event on the calendar set up by QUOTED_STRING_0 starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.twitter . direct_messages ( ) ;
turking/1629028	null	remind me of the direct twitter message i got when an QUOTED_STRING_0 organized event from my calendar is going to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.twitter . direct_messages ( ) ;
turking/1629029	null	tell me the direct message i got on twitter when an event organized by QUOTED_STRING_0 from my calendar is about to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.twitter . direct_messages ( ) ;
turking/1629044	null	if an event of my icalendar switches time then show me my most recently changed dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629051	null	locate my recent files from dropbox that were updated when event times change from my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629053	null	retrieve my recent dropbox files that have been updated when event times from my icalendar change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629061	null	whenever my icalendar events change get my dropbox files that have changed recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629084	null	show my steps from fitbit when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1629085	null	show me my fitbit steps when i get a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1629086	null	if i get a tweet i 'd like to know my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1629090	null	when a tweet comes to me show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1629113	null	send today 's new york times articles when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1629114	null	whenever i receive a tweet send me my number of steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1629116	null	get the new york times articles from today when i move from the area	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1629117	null	in the new york times retrieve today 's articles when i move away from here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1629118	null	when i move away from here go to the new york times and retrieve articles for today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1629119	null	when i leave the area get today 's articles in the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1629121	null	if i receive a tweet , then give me my steps from my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1629128	null	if the washington post publishes a business article , rearrange my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1629130	null	if an article is published in the business section of the washington post , show me my dropbox files in abc order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1629140	null	if the business section of the washington post puts out an article i want you to get files from my dropbox in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1629150	null	when the washington post 's business section publishes an article fetch my dropbox files in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1629152	null	when my steps on fitbit update give me my emails that have the QUOTED_STRING_0 subject	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1629153	null	send me my emails with the subject QUOTED_STRING_0 whenever my steps on fitbit are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1629154	null	set my dropbox files in alphabetical order whenever the washington post has an article in the business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1629155	null	show me emails with the subject QUOTED_STRING_0 any time my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1629158	null	send me a email with the subject QUOTED_STRING_0 when i have a fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1629160	null	i want my dropbox files in abc order when an article is published in the washington post business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1629164	null	download my schedule if my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629166	null	i want to see my schedule once my fitbit steps get an update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629168	null	when my fitbit steps update , i want an email that has the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1629169	null	give me my schedule when my steps are updated on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629172	null	if my fitbit steps update , get my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629174	null	when the steps on my fitbit are updated show me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629183	null	if my fitbit steps update , show my emails that have a subject of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1629188	null	whenever my fitbit updates my steps then show me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629189	null	when my location is within NUMBER_0 km of LOCATION_0 notify me of the uber cost	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @com.uber . price_estimate ( end = location , start = LOCATION_0 ) ) filter distance <= NUMBER_0 km ;
turking/1629190	null	if a harmful asteroid comes close to earth , show me the weather in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1629191	null	show me what the weather is like in work if a dangerous asteroid comes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1629193	null	tell me when the distance decreases below NUMBER_0 km in the cost of an uber from LOCATION_0 to the location of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @com.uber . price_estimate ( end = location , start = LOCATION_0 ) ) filter distance <= NUMBER_0 km ;
turking/1629194	null	tell me the cost of an uber from LOCATION_0 to my location if the distance is below NUMBER_0 km	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) => @com.uber . price_estimate ( end = location , start = LOCATION_0 ) ) filter distance <= NUMBER_0 km ;
turking/1629196	null	show me washington post articles in the opinions section when i put pictures up on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1629197	null	show me the weather in work when close to earth is dangerous asteroid	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1629198	null	if i upload an instagram picture , show me washington post opinion section articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1629199	null	if i put pictures on instagram then show me opinion articles from washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1629200	null	i want to see washington post opinion articles if i upload an instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1629202	null	email somebody when there 's a new opinion article in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( ) ;
turking/1629203	null	in the washington post opinions section send an email to somebody when a new article is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( ) ;
turking/1629206	null	when new articles post send somebody and email if it is from the washington post opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( ) ;
turking/1629218	null	the moment a new opinions article appears in the washington post , email someone	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( ) ;
turking/1629220	null	if there is a new opinions section article of the washington post , send somebody an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( ) ;
turking/1629221	null	let me know my current location if there 's a new article in the sports section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629222	null	each time the washington post publishes a new article from the sports section , show me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629223	null	update me with my current location each time the washington post publishes an article in the sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629224	null	if the washington post puts up an article in the sports section alert me of my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629225	null	i want to see my current location when the washington post publishes a sports section article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629264	null	when an article in the sports section of the washington post is published report my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629313	null	using my lg tv play URL_0 when rain starts at this location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1629321	null	i want you to play URL_0 on my lg tv when it starts raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1629323	null	play URL_0 on my lg tv when it starts raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1629324	null	when rain begins at current location start playing URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1629327	null	when someone i follow tweets something give me washington post 's lifestyle articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1629329	null	give me washington post 's lifestyle articles when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1629332	null	whenever a person that i follow tweets i want to see articles in the lifestyle section from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1629335	null	i want to see articles from washington post 's lifestyle section whenever a tweet is posted from someone i follow on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1629336	null	when a person i follow tweets locate washington post lifestyle section articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1629340	null	retrieve washington post lifestyle section articles when a tweet is posted by someone i 'm following	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1629380	null	when i walk more than NUMBER_0 steps , retrieve tweets from anyone i follow that contain QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1629382	null	read me tweets from anyone i follow that contain QUOTED_STRING_0 when i walk more than NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1629383	null	pull up tweets from anyone i follow that contain QUOTED_STRING_0 when i walk over NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1629384	null	when i walk more than NUMBER_0 steps give me tweets from anyone i follow that contain QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1629385	null	when i walk more than NUMBER_0 steps give me tweets from anyone i follow that contains phrase QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1629395	null	whenever an event is about to start on my icalendar , display my steps from fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.fitbit . getsteps ( ) ;
turking/1629396	null	show me my steps from fitbit when an event is about to start on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.fitbit . getsteps ( ) ;
turking/1629397	null	display fitbit steps when i have an event starting on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.fitbit . getsteps ( ) ;
turking/1629398	null	show me fitbit steps when an event on icalendar show is about to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.fitbit . getsteps ( ) ;
turking/1629399	null	if i receive a new gmail email then show my dropbox files from z to a	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1629400	null	alert me that once an icalendar event is about to start show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.fitbit . getsteps ( ) ;
turking/1629405	null	get my dropbox files listed from z to a if i get a new gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1629406	null	get my dropbox files in reverse abc order when i get a gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1629409	null	show me websites matching QUOTED_STRING_0 whenever there is a new article in the opinions section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1629410	null	when the washington post opinions section adds a new article locate QUOTED_STRING_0 websites	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1629411	null	after i get an email via gmail , get my files on dropbox in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1629412	null	give me my files on dropbox , organized in reverse alphabetical order , when i get a new gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1629413	null	when there is a new article in the washington post opinions section , retrieve websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1629414	null	if a new article is posted in washington post opinions section retrieve any an all websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1629425	null	when the washington post opinions section publishes a new article find websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1629426	null	when i get a gmail , i want my dropbox files in reverse abc order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1629429	null	retrieve QUOTED_STRING_0 matching websites when a new article in the opinions section posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1629440	null	show my fitbit steps an event on my icalendar is about to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.fitbit . getsteps ( ) ;
turking/1629441	null	obtain my calendar events for QUOTED_STRING_0 when it starts raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1629443	null	when it starts raining here obtain my list of calendar events for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1629451	null	grab my calendar events at QUOTED_STRING_0 when the rain starts here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1629455	null	if i get a twitter direct message get the new york times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1629458	null	fetch the new york times as soon as i get a direct twitter message .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1629459	null	receive new york times when i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1629462	null	display new york times when i receive a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1629464	null	get me the new york times whenever someone sends me a direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1629473	null	when i get a new dm on twitter , get me the new york times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.nytimes . get_front_page ( ) ;
turking/1629496	null	at home if it begins to snow show me my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629499	null	retrieve my schedule on icalendar when it starts snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629501	null	show me my schedule on icalendar if it begins snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629503	null	display my schedule on icalendar when it starts snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629504	null	when it starts snowing in home get my schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @org.thingpedia.icalendar . list_events ( ) ;
turking/1629533	null	when an event is starting on my icalendar then find my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629534	null	obtain my current location if an event on my icalendar is about to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629535	null	if an event is starting on my icalendar pull up my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629536	null	when my icalendar has an event that 's just starting fetch my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629539	null	show my current location whenever there 's an event beginning on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629543	null	if there is an event that is about to start on my icalendar get my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1629561	null	when motion is detected , show me which channels i am subscribed to on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.motion . motion ( ) ) filter state == enum detecting => @com.youtube . list_subscriptions ( ) ;
turking/1629601	null	automatically post new weather updates on linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/1629603	null	on linkedin post new weather automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/1629604	null	auto share the latest weather on my linkedin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/1629607	null	share the most recent weather automatically on my linkedin page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/1629612	null	share the latest weather updates on linkedin automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.linkedin . share ( status = $result ) ;
turking/1629629	null	send me a GENERIC_ENTITY_imgflip:meme_id_0 meme from imgflip when there 's an upload on instagram by me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1629630	null	when i upload a new picture on instagram give me a GENERIC_ENTITY_imgflip:meme_id_0 meme from imgflip	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1629631	null	send me a GENERIC_ENTITY_imgflip:meme_id_0 imgflip meme when i post a ig photo	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1629633	null	if i upload a new picture on instagram show me a GENERIC_ENTITY_imgflip:meme_id_0 meme from imgflip	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1629634	null	show me the meme of GENERIC_ENTITY_imgflip:meme_id_0 on imgflip when i upload a new photo on my instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1629635	null	when a new image is posted by me on instagram , show me a GENERIC_ENTITY_imgflip:meme_id_0 meme from the site imgflip	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.imgflip . generate ( template = GENERIC_ENTITY_imgflip:meme_id_0 ) ;
turking/1629681	null	if the location of an event from my icalendar changes , show me tweets from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1629682	null	i want to see tweets from those i follow if the location of an event from icalendar changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1629686	null	give me all the tweets from people i follow when an event location switches on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1629689	null	show me tweets from anyone i follow if the location of the event is different on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1629694	null	if a location of an event on my icalendar changes , show me tweets from everyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1629702	null	tweet a picture and caption it QUOTED_STRING_0 whenever USERNAME_0 opens an issue on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629704	null	when on github USERNAME_0 opens an issue then tweet with QUOTED_STRING_0 caption picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629705	null	tweet out a photo captioned QUOTED_STRING_0 when an issue is opened on github by USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629706	null	tweet a picture with QUOTED_STRING_0 caption when on github USERNAME_0 opens an issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629710	null	if it 's snowing bring up youtube channels classified under lifestyle	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1629712	null	retrieve lifestyle youtube channels if it starts snowing in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1629714	null	find the lifestyle youtube channels if it begins to snow in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1629715	null	go to the lifestyle youtube channels when it begins to snow in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1629724	null	i want to be set as away on slack when the lifestyle section of the washington post publishes an article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1629726	null	if there 's a new lifestyle washington post article set my status to away on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1629728	null	make me away on slack if wapo posts a new lifestyle article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1629729	null	if an article is posted in the lifestyle section by the washington post , change my status to away on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1629731	null	reply to EMAIL_ADDRESS_0 automatically with tweets from followed users	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , to = EMAIL_ADDRESS_0 ) ;
turking/1629732	null	reply to EMAIL_ADDRESS_0 automatically with the new tweets from anyone that i am following	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , to = EMAIL_ADDRESS_0 ) ;
turking/1629734	null	automatically send EMAIL_ADDRESS_0 texts from new twitter posts from followed users	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , to = EMAIL_ADDRESS_0 ) ;
turking/1629735	null	get the latest tweets from anyone i 'm following and automatically reply to EMAIL_ADDRESS_0 with what 's said in them .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , to = EMAIL_ADDRESS_0 ) ;
turking/1629736	null	if the lifestyle section of the washington post puts out an article i want to be set as away on my slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.slack . setPresence ( presence = enum away ) ;
turking/1629738	null	get what 's said in the newest tweets from anybody i 'm following and reply to EMAIL_ADDRESS_0 with them automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , to = EMAIL_ADDRESS_0 ) ;
turking/1629742	null	i want EMAIL_ADDRESS_0 to see automatically the text from new tweets of people i am following	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . send_email ( message = text , to = EMAIL_ADDRESS_0 ) ;
turking/1629763	null	can i get the post from the icalendar when phdcomics happens to post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.phdcomics . get_post ( ) ;
turking/1629767	null	check any information on phdcomics when an event on my icalendar had passed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.phdcomics . get_post ( ) ;
turking/1629782	null	if it starts snowing in here get the lifestyle youtube channels	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.youtube . channels_by_category ( category_id = enum lifestyle ) ;
turking/1629799	null	using the description of my new icalendar events reply to EMAIL_ADDRESS_0 automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1629800	null	use the description of new events on my icalendar to automatically reply to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1629801	null	when EMAIL_ADDRESS_0 emails me , reply automatically with the description of the new icalendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1629802	null	say the description of my new icalendar events in a reply to EMAIL_ADDRESS_0 automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1629806	null	send automatically a reply with the description of my new icalendar events to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1629864	null	show me the weather if an email marked important is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( ) ;
turking/1629868	null	i want a weather update if i get an email message tagged important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( ) ;
turking/1629869	null	if this is an important email let me know of the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.weather . current ( ) ;
turking/1629891	null	retrieve front page posts by USERNAME_0 on reddit when the washington post publishes an article in the world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.reddit.frontpage . get ( ) filter user == USERNAME_0 ;
turking/1629892	null	when the washington post puts up a new world section article , show me USERNAME_0 front page posts on reddit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.reddit.frontpage . get ( ) filter user == USERNAME_0 ;
turking/1629893	null	i need to see front page posts by USERNAME_0 on reddit when the washington post publishes in the world section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.reddit.frontpage . get ( ) filter user == USERNAME_0 ;
turking/1629894	null	get front page posts by USERNAME_0 on reddit when the washington post releases an article in the world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.reddit.frontpage . get ( ) filter user == USERNAME_0 ;
turking/1629897	null	when the washington post has a new article in the world section , get me the reddit front page posts by USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.reddit.frontpage . get ( ) filter user == USERNAME_0 ;
turking/1629898	null	i want to see the reddit front page posts from USERNAME_0 when there is something new published in the washington post world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.reddit.frontpage . get ( ) filter user == USERNAME_0 ;
turking/1629921	null	give me all recently changed dropbox files whenever i receive a new email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629922	null	tell me my newest-updated dropbox files whenever i get a new message on gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629923	null	give me articles in the washington post in section politics when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1629924	null	show me washington post articles from the politics section when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1629925	null	when i get an email through gmail , show me my most recently changed dropbox files .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629926	null	whenever i get an email on gmail give me all dropbox files that have recently changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629927	null	show me dropbox files changed recently if i get a new gmail message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1629928	null	when i start to move , provide me with the articles from the section called politics in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1629933	null	give me all the articles in the politics section of the washington post when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1629937	null	when i move i want the articles in the washington post politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1629945	null	when the fog is different than NUMBER_0 in the weather then show my location on my recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1629946	null	on my recent instagram pictures please show the location and alert me when the fog is different than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1629947	null	if the fog is n't NUMBER_0 in my instagram latest pictures then show me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1629948	null	send me a notification when the fog is different than NUMBER_0 in the location of my newest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1629950	null	can you let me know if the fog is different than NUMBER_0 at the location of my most recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1629954	null	please notify me if the fog is not NUMBER_0 in the location of my latest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter ! ( fog == NUMBER_0 ) ;
turking/1629957	null	show me articles in the washington post in section politics when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1629970	null	if USERNAME_0 opens an issue on github show me in home weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1629971	null	show me the weather in home when USERNAME_0 opens an issue on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1629973	null	i want to see the weather in home when USERNAME_0 opens an issue on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1629974	null	as soon as USERNAME_0 opens an issue on github display the weather at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1629975	null	once USERNAME_0 opens an issue on github let me see the weather at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1629976	null	when an issue is opened on github by USERNAME_0 show me weather in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1629982	null	get meme templates for QUOTED_STRING_0 off imgflip anytime someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/1629984	null	whenever someone i 'm following sends out a tweet fine me meme templates about QUOTED_STRING_0 off imgflip	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/1629985	null	i want to see image templates related to QUOTED_STRING_0 in imgflip when someone i follow tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/1629986	null	if there is a new tweet from someone i follow , show me meme templates in imgflip about QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/1629987	null	show me a meme template in imgflip related to QUOTED_STRING_0 when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/1629989	null	show me meme templates in imgflip about QUOTED_STRING_0 any time someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/1630017	null	when i upload an image to instagram , notify me of tweets from the people i follow with HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1630018	null	when i put a photo on instagram , show me twitter posts from followed people about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1630027	null	him me tweets from those people i 'm following about HASHTAG_0 if i upload an instagram photo	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1630077	null	email EMAIL_ADDRESS_0 from my gmail if there 's an opinions articles published by the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1630078	null	when a new article gets posted to the opinions sections of the washington post email EMAIL_ADDRESS_0 using my gmail account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1630079	null	send an email to EMAIL_ADDRESS_0 using my gmail when there is a new article posted in the opinions section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1630080	null	see if there 's a opinions section article published by the washington post and send out an email to EMAIL_ADDRESS_0 using my own gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1630082	null	when the washington post publishes a new article in the opinions section please send an email to EMAIL_ADDRESS_0 from my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1630083	null	deliver a cappuccino to work when it stops raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @org.thingpedia.demo.coffee . order ( beverage = enum cappuccino , delivery_location = $location . work ) ;
turking/1630084	null	if a new article appears in the opinion section of the washington post can you send an email to EMAIL_ADDRESS_0 using my gmail account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1630085	null	send me a cappuccino to work if it stops raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @org.thingpedia.demo.coffee . order ( beverage = enum cappuccino , delivery_location = $location . work ) ;
turking/1630086	null	deliver a cappuccino to my work when it stops raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @org.thingpedia.demo.coffee . order ( beverage = enum cappuccino , delivery_location = $location . work ) ;
turking/1630087	null	deliver a cappuccino to work if it stops raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @org.thingpedia.demo.coffee . order ( beverage = enum cappuccino , delivery_location = $location . work ) ;
turking/1630088	null	if the rain stops in here deliver a cappuccino to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @org.thingpedia.demo.coffee . order ( beverage = enum cappuccino , delivery_location = $location . work ) ;
turking/1630093	null	send a cappuccino to work after it stops raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @org.thingpedia.demo.coffee . order ( beverage = enum cappuccino , delivery_location = $location . work ) ;
turking/1630120	null	if there is a holiday show me my up to date location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630123	null	when it is a holiday show me where i am located	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630124	null	when it 's a holiday give me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630125	null	when it 's a holiday send me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630126	null	tell me my current location any time it 's a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630171	null	if i get an email marked important , show me my most recent instagram pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( ) ;
turking/1630173	null	i want to view my newest instagram photos whenever i get an email tagged important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( ) ;
turking/1630175	null	whenever it is a holiday retrieve my current where about	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630178	null	if i get an email message labeled important , let me see my latest instagram pics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( ) ;
turking/1630179	null	whenever i receive an email marked as important i want to see my recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( ) ;
turking/1630184	null	when i get a new email marked as important , display my newest instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( ) ;
turking/1630188	null	refresh my email from EMAIL_ADDRESS_0 after it stops snowing at my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1630189	null	if i get an email marked as important i want to see my recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.instagram . get_pictures ( ) ;
turking/1630190	null	when it stops snowing here obtain my emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1630195	null	after it stops snowing , get my email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1630196	null	when it is no longer snowing at my location get my emails sent from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1630197	null	when snow stops at my location retrieve my emails from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1630202	null	retrieve emails from EMAIL_ADDRESS_0 when it stops snowing here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1630208	null	once an event ends on my icalendar give me washington post articles from their politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1630209	null	any time an event ends on my icalendar show me politics articles from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1630211	null	show the articles in the washington post that are in section politics when an event on my icalendar ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1630212	null	if i have an event on my icalendar end send me articles from the washington post politics section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1630233	null	show me articles in the washington post in section politics if an event on my icalendar ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.washingtonpost . get_article ( section = enum politics ) ;
turking/1630255	null	show me bing QUOTED_STRING_0 when the steps on my fitbit update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630257	null	when the steps on my fitbit are updated tell me bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630258	null	whenever my fitbit updates show me QUOTED_STRING_0 results on bing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630261	null	look up QUOTED_STRING_0 on bing if my fitbit step count updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630263	null	i want to see bing 's QUOTED_STRING_0 results whenever fitbit updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1630328	null	whenever there is a new article from washington post opinions section then tweet a pictures with the caption saying QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630330	null	when there is a new article from the washington post opinions section tweet a picture with caption QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630333	null	tweet a picture that has QUOTED_STRING_0 as the caption whenever there is a new opinion article in washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630334	null	if a new article in washington post opinions section appears tweet a picture with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630335	null	send a tweet with a picture and caption saying QUOTED_STRING_0 when there 's a new article in the washington post opinions sections	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630336	null	whenever there is a new article in washington post opinions section tweet a picture with caption QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630338	null	whenever i get an email in my gmail account , tell me the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1630341	null	give me LOCATION_0 's weather when my gmail has a new email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1630343	null	when a new email comes in on gmail , show me the current weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1630344	null	when i get an email through gmail , get the weather in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1630346	null	when gmail sends me a new email , update the weather for LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1630355	null	pick a number between NUMBER_0 and NUMBER_1 when i get an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1630357	null	pick a number between NUMBER_0 and NUMBER_1 if i get an email from EMAIL_ADDRESS_0 that 's important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1630362	null	when i get emails from EMAIL_ADDRESS_0 and they 're marked important , give me a random number that 's between NUMBER_0 and NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1630363	null	if i get an important email from EMAIL_ADDRESS_0 pick a number between NUMBER_0 and NUMBER_1 at random .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1630364	null	find me a HASHTAG_0 gif if an icalendar event ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1630365	null	at the end of an event on my icalendar show me a HASHTAG_0 gif	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1630366	null	if an icalendar event ends , fetch a gif tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1630368	null	send a gif marked HASHTAG_0 whenever an icalendar event ends	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1630369	null	if an icalendar even ends , grab a HASHTAG_0 gif .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1630370	null	show me a gif with the hashtag HASHTAG_0 whenever an icalendar event ends .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum ended => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1630408	null	when my fitbit steps change notify me of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630409	null	let me know my current location when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630410	null	give me the current location if my fitbit steps have updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630415	null	show me where i am if my fitbit steps have updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630420	null	every time my fitbit steps update send me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630424	null	get primary category emails when the fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630426	null	when i have updated fitbit steps , get my emails from my primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630429	null	tell me my current location if my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630430	null	when my fitbit steps are updated , get me my emails for the category primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630432	null	once my fitbit steps update show me my primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630449	null	if a new article is up in the washington post politics section then get the weather for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( ) ;
turking/1630450	null	get the weather when there 's a new washington post article about politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( ) ;
turking/1630451	null	when there is a new washington post article in politics , get me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( ) ;
turking/1630452	null	grab the weather when there 's a new washington post article in the politics section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( ) ;
turking/1630456	null	i want to know the weather when there 's a new political article in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( ) ;
turking/1630457	null	when i get an email over gmail retrieve my calendar events that are organized by QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1630458	null	get me the weather if the washington post politics section puts up a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( ) ;
turking/1630459	null	find my calendar events organized by QUOTED_STRING_0 whenever i get gmail emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1630463	null	show me my calendar events organized by QUOTED_STRING_0 when i receive a gmail email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1630586	null	get my current location if i receive a message in slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630587	null	get my current location if i get a message on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630593	null	should i receive a message on slack , show me my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630594	null	record my current location when a message comes in on slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630618	null	when it stops raining in LOCATION_0 get a QUOTED_STRING_0 video on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ;
turking/1630619	null	get any QUOTED_STRING_0 videos on youtube after the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ;
turking/1630620	null	get a QUOTED_STRING_0 video on youtube whenever it stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ;
turking/1630626	null	show me a QUOTED_STRING_0 video on yt once LOCATION_0 is n't raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.youtube . search_videos ( query = QUOTED_STRING_0 ) ;
turking/1630629	null	put up a picture on twitter with the caption QUOTED_STRING_0 when a new washington post lifestyle section article goes up	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630632	null	put URL_0 on my lg tv whenever the rain stops in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630634	null	if a new washington post lifestyle section article comes up then put a picture on twitter with the words QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630636	null	on my lg tv , play URL_0 as soon as the rain stops in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630639	null	whenever a new article is posted in the lifestyle section of the washington post , go on twitter and upload a picture that has the phrase QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1630662	null	if i 'm uploading a picture on instagram grab the latest front page reddit posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1630664	null	go to reddit and get the most recent front pages post as soon as i upload an image to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.reddit.frontpage . get ( ) ;
turking/1630680	null	show all the QUOTED_STRING_0 calendar events when i 'm out of the house	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1630681	null	when i leave home tell me what my calendar events for QUOTED_STRING_0 are	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1630682	null	when i leave the home i want to see all calendar events from QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1630684	null	get all calendar events for QUOTED_STRING_0 when i head out	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1630685	null	grab my QUOTED_STRING_0 calendar events when i leave my house	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1630686	null	when i exit home pull my calendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1630725	null	tell me my body measurements from fitbit when the time of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getbody ( ) ;
turking/1630727	null	tell me my fitbit body measurements when time of some icalendar event changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getbody ( ) ;
turking/1630728	null	when the time of some icalendar event changes , i want to know what my body measurements from my fitbit are	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getbody ( ) ;
turking/1630730	null	on my icalendar when the time of some event changes tell me my body measurements from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.fitbit . getbody ( ) ;
turking/1630740	null	if someone i follow tweets then get important emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1630741	null	get all email marked as important if someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1630742	null	bring up my important emails if someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.gmail . inbox ( is_important = true ) ;
turking/1630755	null	when i get an email on my gmail account , let me know my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630757	null	if i get an email from gmail , tell me my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630758	null	show me my location whenever i get a new email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630759	null	tell me my current location on gmail whenever i receive a gmail email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630760	null	when i get a new email from gmail , let me know my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1630777	null	when i upload a picture to instagram show my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1630780	null	when i put a photo on instagram then tell me my schedule from my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1630781	null	when i upload a picture on instagram , show me my calendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1630782	null	i would like to see my calendar schedule when i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1630783	null	get my fitbit steps when there is a new youtube video from one of the channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1630784	null	when there is a new video posted from a channel i follow on youtube then tell me fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1630785	null	i want my fitbit steps when there is a video posted on one of the youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1630786	null	when i have a picture uploaded on instagram then show me the schedule on my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1630787	null	when there is a new video from youtube channels i follow , retrieve my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1630789	null	whenever the rain ends in LOCATION_0 , go to my lg tv and play URL_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630793	null	i would like to know my fitbit steps whenever a youtube channel i follow uploads a new video	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1630797	null	i would like to retrieve my steps from fitbit if there is a new video from youtube channels i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1630841	null	post my new instagram pictures to twitter automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( picture_url = picture_url ) ;
turking/1630844	null	as soon as i post new instagram photo add them to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( picture_url = picture_url ) ;
turking/1630845	null	add instagram pics to twitter as soon as i first post them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( picture_url = picture_url ) ;
turking/1630847	null	whenever i have new instagram pictures post them on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( picture_url = picture_url ) ;
turking/1630851	null	show me primary emails when it stops raining at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630853	null	when it stops raining in work , get my primary emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630855	null	on twitter post my new instagram pictures automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( picture_url = picture_url ) ;
turking/1630860	null	when it stops raining in work retrieve my emails from my primary account .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630862	null	when i am no longer at this location translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1630863	null	when the rain stops at my work , give me the emails in my primary folder .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1630866	null	when i leave this location translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1630867	null	translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 when i leave this location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1630871	null	if i leave , translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1630872	null	when i leave where i 'm at translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1630874	null	translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 for me whenever i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1630918	null	when new articles appear in the wall street journal lifestyle section turn up the sound on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630920	null	whenever there is a new article in the lifestyle section of the wall street journal make my lg tv louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630922	null	turn the volume up on my lg tv when the wall street journal posts a new lifestyles section article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630923	null	if any new articles come up in lifestyles on the wall street journal , turn my tv up	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " tv " ) . raise_volume ( ) ;
turking/1630925	null	turn up the volume on my lg tv when there is a new article published in the wall street journal lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630934	null	make my lg tv louder when there is a new article in the lifestyle section of the wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630942	null	go and play URL_0 on the lg tv whenever i upload an instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630943	null	should i upload an instagram pic , go ahead and play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630944	null	play the following on my lg tv : URL_0 when i complete a picture upload	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630945	null	play URL_0 on my lg tv if i upload a pic on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630946	null	if i upload a pic on instagram play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630949	null	whenever it stops raining in LOCATION_0 show emails that have arrived in the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1630952	null	if it stops raining in LOCATION_0 get emails arrived that is in last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1630953	null	get emails that have arrived in the last hour the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1630955	null	in LOCATION_0 , when the rain ends , obtain last hour 's emails received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1630957	null	after i have uploaded a picture , use my lg tv to play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1630965	null	i want to see emails that have come in the last hour when it stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1630985	null	once an event the location QUOTED_STRING_0 on my calendar starts then make the volume louder on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630986	null	if there 's a QUOTED_STRING_0 calendar event , increase my volume on the lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630987	null	one event with location QUOTED_STRING_0 begins increase the sound on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630989	null	increase volume of lg tv when an even on calendar location QUOTED_STRING_0 begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1630994	null	when event at QUOTED_STRING_0 location begins on my calendar increase the volume of my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1631000	null	bump up the volume of my lg tv whenever a QUOTED_STRING_0 calendar event starts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @org.thingpedia.volume-control ( name = " lg tv " ) . raise_volume ( ) ;
turking/1631031	null	show me my schedule when i get email marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631032	null	if i get email marked as important i want to see my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631034	null	show me my schedule when an important marked email is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631035	null	when an email marked as important is received show my schedule to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631037	null	when email marked as important arrives show me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631041	null	show me my schedule when an email marked important arrives	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631073	null	if it ever stops raining in LOCATION_0 , rename the file PATH_NAME_0 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1631074	null	rename file PATH_NAME_0 in dropbox if it ever stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1631075	null	LOCATION_0 stops raining , rename file PATH_NAME_0 in dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1631076	null	in dropbox rename file PATH_NAME_0 when raining stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1631078	null	i want to know my icalendar events that QUOTED_STRING_0 is organizing when there is a new phd comics posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1631079	null	in LOCATION_0 if it stops raining then rename file in dropbox PATH_NAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.dropbox . move ( old_name = PATH_NAME_0 ) ;
turking/1631081	null	let me know any events that QUOTED_STRING_0 organized on my icalendar when there is a post of a new phd comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1631082	null	when a new phd comic comes out then tell me my QUOTED_STRING_0 organized events on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1631083	null	when a new phd comics is posted tell me my icalendar events organized by QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1631084	null	let me know what QUOTED_STRING_0 events are on my icalendar events when a new phd comic gets posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1631086	null	inform my icalendar events organized by QUOTED_STRING_0 when a new phd comics is posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1631103	null	play link URL_0 on my lg tv when USERNAME_0 opens an issue on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631105	null	if USERNAME_0 opens a github issues play on my lg tv the link URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631106	null	play link URL_0 on my lg tv when USERNAME_0 opens an issue on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631109	null	whenever USERNAME_0 opens an issue on github , i want the link URL_0 to be played on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631112	null	play the link URL_0 on my lg tv once an issue is opened by USERNAME_0 on github	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631119	null	as soon as USERNAME_0 opens an issue on github play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue ( ) filter user == USERNAME_0 ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631131	null	when there is a new article in the politics section of the washington post show me my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1631132	null	when the washington post politics section has a new article display my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1631133	null	when the washington post politics section has a new published article show my emails that are n't important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1631134	null	i want to see emails that are n't important when the washington post publishes a new article in politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1631136	null	when an article by the washington post gets published in the politics section show me emails marked unimportant	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1631139	null	give me the unimportant emails once there is a new article that is in politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1631149	null	if my step counter exceeds NUMBER_0 steps provide me with websites that match the term QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631150	null	display QUOTED_STRING_0 websites as soon as NUMBER_0 steps or more are taken	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631151	null	after i walk NUMBER_0 steps get me websites that match QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631153	null	let me see websites that match QUOTED_STRING_0 after walking more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631154	null	show me websites matching QUOTED_STRING_0 after i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631163	null	look up websites that match QUOTED_STRING_0 and let me have them after i take over NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1631176	null	if the washington post publishes a new fix blog , grab all my latest atom feeds .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1631177	null	display the latest posts on an atom feed when a new article is published the fix blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1631178	null	i want the newest atom feed posts if a new article is published by the washington post fix blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1631180	null	show me latest posts on an atom feed when a new article is published the fix blog of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1631182	null	when i get an email on gmail , tell me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631184	null	give me my latest atom feed posts when a new fix blog article is published in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_fix ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1631185	null	tell me about the weather any time i get an email on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631186	null	whenever i get an email through gmail , pull up the weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631187	null	i 'd like to know the weather whenever i get a gmail email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631188	null	whenever i get an email on gmail get the weather for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631190	null	pull up the weather if i get an email through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631216	null	turn down my lg tv sound when there 's a change in my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1631217	null	lower the volume of my lg tv whenever there 's a change on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1631218	null	when my icalendar changes , turn down the sound on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1631221	null	when anything changes on my icalendar decrease the volume of my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1631225	null	if something should happen or change on my icalendar , lower down the volume of my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1631227	null	decrease the sound level of my lg tv when something changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1631268	null	when USERNAME_0 tweets me get my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631269	null	go and get my calendar events when ever USERNAME_0 sends me a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631270	null	USERNAME_0 sends tweet i receive retrieve my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631274	null	when i receive a tweet from USERNAME_0 retrieve my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631275	null	whenever there is a USERNAME_0 tweet for me , retrieve my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631278	null	if USERNAME_0 tweets me retrieve my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631287	null	if i upload a photo to instagram then unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1631289	null	unfollow USERNAME_0 's twitter if a new pic 's posted to my ig	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1631291	null	unfollow USERNAME_0 on twitter when i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1631295	null	please unfollow USERNAME_0 on twitter whenever i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1631296	null	on instagram when i upload a picture unfollow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1631297	null	if i add a photo to instagram then stop following USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/1631299	null	post captions of my new ig pics on fb automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = caption ) ;
turking/1631318	null	post picture on twitter saying subject of new primary category emails automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1631320	null	post a photo on twitter that has captioned the subject of the primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1631321	null	using the subject of my new primary category emails post a twitter picture automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1631322	null	using the a caption of the primary emails , put a photo out on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1631325	null	i want a caption to be automatically posted for my instagram pictures that are shared on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = caption ) ;
turking/1631329	null	using twitter , i want a picture automatically posted saying the subject of my new primary category emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1631331	null	post a picture on twitter automatically with the subject line of new primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.twitter . post_picture ( caption = subject ) ;
turking/1631341	null	get today 's asteroid info when i put a new photo on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1631345	null	if i upload a new picture onto instagram , retrieve today 's asteroid information	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1631347	null	when i post a new photo on instagram you are to fetch me today 's asteroid info .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1631348	null	update me with today 's asteroid information whenever i upload a new picture on to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1631356	null	show the asteroid info for the day every time i upload a new pic to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1631375	null	turn on URL_0 on my lg tv whenever you see a new article from the washington post business section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631378	null	washington post business section when there is a new article play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631379	null	if there is a new article in the washington post business section play link URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631380	null	in the business section of the washington post , if there is a new article , put URL_0 up on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631382	null	play link URL_0 on my lg tv when there is a new article in the business section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631392	null	play link URL_0 on my lg tv when new article in washington post business section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1631408	null	i want to know the weather at work whenever there 's an update to my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1631409	null	show me the weather at work when steps on my fitbit update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1631410	null	check the weather at my work whenever the steps on my fitbit update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1631411	null	get the weather in work when my fitbit steps change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1631412	null	once the steps update on my fitbit show me the weather at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1631426	null	show the asteroid information for today when i get a new pic on insta	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1631463	null	search through my files in reverse alphabetical order , then send a photo through tweet with that	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631466	null	locate my new files on dropbox in reverse alphabetical order and use them as a caption for a photo on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631467	null	find my new dropbox files in reverse alphabetical order and use them as a caption for a twitter pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631473	null	send a tweet photo after searching through my files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631479	null	review for new dropbox files in reverse alphabetical order and then tweet a picture with caption that	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631481	null	pull up tweets from anyone i follow when the wall street journal publishes new articles in the world news section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.twitter . home_timeline ( ) ;
turking/1631488	null	if the wall street journal world news section puts out a new article fetch tweets from anybody i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.twitter . home_timeline ( ) ;
turking/1631489	null	get me tweets from anybody i follow if a new article is published in the world news section of the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.twitter . home_timeline ( ) ;
turking/1631492	null	i would like to see all tweets from those that i follow whenever the wall street journal publishes a world news article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.twitter . home_timeline ( ) ;
turking/1631496	null	get tweets from anyone i follow when the wall street journal has published a new article in the world news section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.twitter . home_timeline ( ) ;
turking/1631497	null	set the volume of the lg tv to NUMBER_0 whenever there 's an article found in the politics section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1631498	null	should there be a new article to be found in the politics section of the washington post , set the lg tv 's volume to NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1631500	null	when a new politics article is published in the washington post , put my lg tv volume to NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1631502	null	when the washington post politics section adds a new article put the volume to my lg tv to NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1631504	null	set the volume of my lg tv to NUMBER_0 when a new politics article appears in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1631505	null	if a new article is added to the washington post politics section set volume to NUMBER_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1631537	null	locate my new dropbox files in alphabetical order and use them as a caption when creating a twitter pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631540	null	analyses for my new dropbox files in reverse alphabetical order and then tweet a picture with caption that	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631547	null	find my new dropbox files in alphabetical order and use them as a caption when tweeting a pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631562	null	give me my location when an event on my calendar begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1631563	null	if an event starts from my calendar then show me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1631568	null	tell me my current location as an event on my calendar starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1631571	null	update me on my current location when an event from my calendar begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1631572	null	tell me what my current location is if a calendar event begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1631573	null	each time an event on my calendar begins , provide me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1631575	null	update me on my fitbit steps when it starts raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.fitbit . getsteps ( ) ;
turking/1631576	null	get my fitbit steps as soon as it begins raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.fitbit . getsteps ( ) ;
turking/1631578	null	show my fitbit steps if it starts raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.fitbit . getsteps ( ) ;
turking/1631580	null	have my fitbit show my steps whenever it starts raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.fitbit . getsteps ( ) ;
turking/1631604	null	if i get an important email , i want to know about the washington post local articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1631606	null	when receiving an important marked email , get local section articles from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1631607	null	i want to see articles in the washington post in the local section when i get an important email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1631608	null	if i were to receive an email that is marked as important , obtain section local articles from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1631611	null	when my fitbit steps update retrieve my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1631617	null	when my fitbit updates steps get my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1631619	null	if fitbit steps updates , then put my dropbox files in alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1631624	null	alphabetize my dropbox files when fitbit steps is updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1631634	null	display local washing tom post articles if an important email is sent to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.washingtonpost . get_article ( section = enum local ) ;
turking/1631636	null	if an event on my calendar organized by QUOTED_STRING_0 is about to begin , get my emails with subject QUOTED_STRING_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_1 ;
turking/1631638	null	when my fitbit steps update get my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1631640	null	when a calendar event organized by QUOTED_STRING_0 is almost beginning fetch my emails with a QUOTED_STRING_1 subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_1 ;
turking/1631641	null	when an event organized by QUOTED_STRING_0 is close to begin get my emails that have a QUOTED_STRING_1 subject .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_1 ;
turking/1631643	null	download my emails with subject QUOTED_STRING_0 when an event in the calendar with QUOTED_STRING_1 is about to begin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum upcoming => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1631644	null	gather my emails that have the subject QUOTED_STRING_0 when a QUOTED_STRING_1 event starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum upcoming => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_0 ;
turking/1631646	null	if a QUOTED_STRING_0 event is about to start , get all my QUOTED_STRING_1 subject emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.gmail . inbox ( ) filter subject =~ QUOTED_STRING_1 ;
turking/1631647	null	get my dropbox files in alphabetical order when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1631676	null	whenever an article is published in the local section by the washington post send my instagram photos to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.instagram . get_pictures ( ) ;
turking/1631677	null	i would like to see my pictures from instagram whenever a local article is published by the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.instagram . get_pictures ( ) ;
turking/1631678	null	whenever the washington post posts an article in the local section , show my my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.instagram . get_pictures ( ) ;
turking/1631680	null	have my new steps from fitbit automatically send to gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1631681	null	notify me of my fitbit steps automatically through gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1631683	null	show me my instagram pictures if the washington post posts an article in the local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.instagram . get_pictures ( ) ;
turking/1631684	null	when the washington post publishes an article in the local section pull up my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.instagram . get_pictures ( ) ;
turking/1631686	null	always send new steps data to gmail from my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1631687	null	update my new fitbit steps data via gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1631688	null	send my new steps to gmail from my fitbit automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1631689	null	i want to see the instagram pictures i post when the washington post publishes local section articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.instagram . get_pictures ( ) ;
turking/1631693	null	send me my new fitbit steps by gmail automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1631716	null	i want my quota for dropbox once it starts snowing where i live	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . get_space_usage ( ) ;
turking/1631726	null	when the snow starts falling at home get the quota from my dropbox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . get_space_usage ( ) ;
turking/1631729	null	retrieve my dropbox quota if it starts snowing in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . get_space_usage ( ) ;
turking/1631731	null	display my dropbox quota whenever it starts snowing at my home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . get_space_usage ( ) ;
turking/1631735	null	show me the translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 with yandex if an event on my calendar at location QUOTED_STRING_1 starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631737	null	when an event on my calendar at location QUOTED_STRING_0 begins show me the translation of QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0 with yandex	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1631738	null	please pull up my quota for dropbox when it begins to snow at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . get_space_usage ( ) ;
turking/1631740	null	translate QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 to yandex when there is a calendar event at QUOTED_STRING_1 beginning	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631741	null	when an event at QUOTED_STRING_0 starts i want a translation of QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1631744	null	when an event from my calendar begins at location QUOTED_STRING_0 , i want the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_1 with yandex .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1631747	null	get my dropbox quota when it starts snowing at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.dropbox . get_space_usage ( ) ;
turking/1631757	null	give me the translation to GENERIC_ENTITY_tt:iso_lang_code_0 of QUOTED_STRING_0 using yandex when an event from my calendar in QUOTED_STRING_1 begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631761	null	when asteroid passes near earth retrieve my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631763	null	when an asteroid passes close to earth send me my calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631764	null	if there 's a close pass by an asteroid , i want to see my calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631767	null	i want to see my calendar events in the event an asteroid passes close to the earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631768	null	display my calendar events when an asteroid passes in the vicinity of earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631771	null	when an asteroid passes close to earth give me my calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1631805	null	show me articles that is in washington post in section opinions if i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1631806	null	when i receive a tweet give me articles in the washington post in section opinions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1631808	null	whenever i receive a tweet , give me articles from the opinion section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1631809	null	when i get a tweet , send me articles from the washington post from the opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1631811	null	show me articles from the opinions section of the washington post when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1631812	null	i want to see articles from the opinion section of the washington post any time i see a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.washingtonpost . get_article ( section = enum opinions ) ;
turking/1631819	null	whenever fitbit steps are updated show me weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631821	null	display weather when my fitbit step count changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631823	null	show me the weather whenever my fitbit steps are changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631833	null	i want my EMAIL_ADDRESS_0 emails if there 's a change to the location of an event on my icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ;
turking/1631834	null	i want to know my fitbit steps at the beginning of a calendar event .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.fitbit . getsteps ( ) ;
turking/1631835	null	at the start of an event on my calendar , tell me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.fitbit . getsteps ( ) ;
turking/1631837	null	give me the weather when step count on fitbit is no longer the same	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631838	null	when a calendar event begins notify me of my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.fitbit . getsteps ( ) ;
turking/1631839	null	tell me how many steps i took on fitbit when an event begins on my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @com.fitbit . getsteps ( ) ;
turking/1631846	null	locate my most recent dropbox files that been updated when the rain stops at my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1631850	null	when it stops raining retrieve my latest changed dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1631855	null	if the washington post sports section has a new article , make a GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631858	null	create a GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 whatever time the sports section of the washington post has the latest article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631859	null	when sports section of washington post has new article then translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631860	null	when it is no longer raining at my location get my most recent updated dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ;
turking/1631862	null	GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 when sports section in washington post post new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631863	null	any time there is a new article in the washington post sports section please translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631865	null	when a new article appears in the sports section of the washington post translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1631874	null	if the everything blog of the washington post has a new post then soften my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1631875	null	when the washington post everything blog has a new post lower speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1631876	null	when the everything blog on the washington post has an update then lower my speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1631877	null	set my speaker softer if there is a new post in the washington post 's post everything blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1631881	null	if the washington post 's post everything blog has a new entry , set my speaker to a softer volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1631918	null	decrease speaker sound when the washington post everything blog has something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum post_everything ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1631987	null	mute my lg webos tv when i post pictures on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1631988	null	when a picture is uploaded by me on instagram make my lg webos tv muted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1631989	null	when i upload an instagram picture turn my lg webos tv to mute	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1631990	null	mute my lg webos tv if i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1631992	null	mute my lg webos tv when i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1631993	null	if i post a picture on instagram mute my lg webos tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1632083	null	show me a random xkcd comic whenever i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1632084	null	give me an xkcd comic at random when i upload a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1632085	null	if i send a new picture to instagram then show me a random xkcd comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1632086	null	show me a random xkcd comic anytime i put a new pic on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1632087	null	give me a random xkcd comic when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1632094	null	if a new picture is uploaded to my instagram account , choose a random xkcd comic for me please .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1632100	null	when i receive an important email , retrieve my QUOTED_STRING_0 calendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1632101	null	when i receive an important email show QUOTED_STRING_0 organized events from my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1632102	null	get calendar events with QUOTED_STRING_0 as the organizer if i get an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1632103	null	get my QUOTED_STRING_0 calendar events when i get an important email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1632105	null	show me events on my calendar organized by QUOTED_STRING_0 when i obtain an important email .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1632107	null	when i get a significant email , fetch my calendar events that are organized by QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1632128	null	i want my drop files sent to me alphabetically whenever i put a new instagram picture up	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1632139	null	auto play the link of my new recent instagram pics on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1632140	null	always let me watch my latest instagram pics on lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1632141	null	automatically play the link of my new recent instagram pictures on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1632143	null	show me my fitbit step count if the room humidity falls below NUMBER_0 percent	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/1632144	null	automatically play the link of new instagram pictures and display them on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1632145	null	any time the indoor humidity is under NUMBER_0 percent , inform me of my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/1632146	null	mention to me my steps from fitbit when the humidity in the room decreases below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/1632147	null	alert me my steps from fitbit when the humidity that is in room lowers below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/1632148	null	if the rooms humidity is lower than NUMBER_0 then alert me of my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/1632149	null	when the humidity in the room decreases to below NUMBER_0 tell me what my steps are at from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/1632150	null	display any new instagram pictures on my lg tv and play any associated links	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1632153	null	show me my files on dropbox in alphabetical order if i post a new image on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1632154	null	list my dropbox files in a to z order when i post a new instagram photo	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1632173	null	organize my dropbox files alphabetically once there 's a new picture i uploaded on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1632177	null	make a post on facebook any time i upload a new image to my instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( ) ;
turking/1632190	null	i want to view my recently posted photos to instagram by playing them on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = link ) ;
turking/1632193	null	tell me the language of QUOTED_STRING_0 when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1632195	null	inform me what language QUOTED_STRING_0 is in when i get to work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1632196	null	let me know what language QUOTED_STRING_0 is in when i get to work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1632198	null	once i arrive at work let me know the language of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1632200	null	when i get to work tell me what language QUOTED_STRING_0 is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1632204	null	if i put up a new instagram picture , show my dropbox files alphabetically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1632208	null	when i get to work , tell me the language QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . work => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/1632209	null	find tweets about HASHTAG_0 from people that i follow when my steps are updated on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1632214	null	when my fitbit updates my steps show me tweets about HASHTAG_0 from people that i follow on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1632216	null	once my step counter updates on my fitbit show me tweets from users i follow on twitter regarding HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1632217	null	i want to see tweets about HASHTAG_0 from anyone i follow whenever my steps on fitbit update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1632221	null	if a new article shows up in the location section of the washington post go ahead and tell me my icalendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632226	null	notify me of my icalendar events at QUOTED_STRING_0 in the event of a new article in the washington post 's local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632228	null	show me my icalendar QUOTED_STRING_0 events when there is a new local section washington post article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632229	null	if there is a new article in the washington post local section tell me my icalendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632232	null	when there is a new article in the washington post local section , i want to see the QUOTED_STRING_0 events on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632240	null	show me my icalendar events at QUOTED_STRING_0 if there is a new article in the washington post local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632248	null	turn the volume back on on my lg tv when one of my followers tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1632250	null	if i 'm following someone on twitter and they tweet restore the volume on my lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1632251	null	restore my lg tv volume when a new tweet is posted by one of my followers .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1632252	null	show me my thermostat temp whenever someone commits on github .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1632253	null	when someone commits to github tell me the thermostat temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1632254	null	if someone i follow tweets restore my lg tv volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1632255	null	when a new person commits to github , tell me the temperature on my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1632256	null	get me my thermostat temperature when someone on github commits	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1632257	null	return the volume back on my lg tv whenever someone i follow on twitter makes a post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1632258	null	restore volume on my lg tv when a tweet is sent by someone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . unmute ( ) ;
turking/1632259	null	if a new article is in the washington post local section get me the technology wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.wsj . get ( section = enum technology ) ;
turking/1632260	null	i want to see the wall street journal technology section when there 's one posted in the washington post 's local section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.wsj . get ( section = enum technology ) ;
turking/1632261	null	when there 's a github commit , show me the temperature on my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_commit ( ) ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1632262	null	get me wall street journal technology any time there 's a new local article in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.wsj . get ( section = enum technology ) ;
turking/1632263	null	grab the wall street journal 's technology article when the washington post 's local article posts .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.wsj . get ( section = enum technology ) ;
turking/1632264	null	when the washington post posts a new local article , get wall street journal technology .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.wsj . get ( section = enum technology ) ;
turking/1632295	null	when there is a new article on the local section of the washington post get technology from wall street journal	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.wsj . get ( section = enum technology ) ;
turking/1632308	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 whenever there 's a new article posted in washington post lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632309	null	when someone posts a new article in the lifestyle section on washington post translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632310	null	send me QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 whenever a new article in the lifestyle section of the washington post appears .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632313	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 for me if the washington post 's lifestyle section has a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632315	null	if the washington post puts out a new article in their lifestyle section translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632328	null	saying the description of my new schedule on icalendar automatically reply to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1632329	null	send the description of my new schedule on icalendar right now to EMAIL_ADDRESS_0 as a reply	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1632330	null	send description of my schedule on icalendar to EMAIL_ADDRESS_0 automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1632331	null	reply at once to EMAIL_ADDRESS_0 with the description of my new schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1632339	null	tell me my current location , when a new article shows up in the wsj opinions section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632340	null	retrieve my current location when there is a new article in wsj opinions section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632341	null	show my current location when there is a new article in wsj opinions section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632342	null	get my current location on the event there is a new article in the wsj opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632343	null	in the wall street journal opinions section , a new article being posted should lead to you giving me my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632344	null	when a new article shows up in the wsj opinions section get my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632413	null	post new ig photos captioned QUOTED_STRING_0 to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1632416	null	automatically generate new instagram photos to twitter saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1632420	null	auto post my latest instagram pictures on twitter with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1632421	null	post my new pictures from instagram onto twitter with the heading QUOTED_STRING_0 automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1632423	null	post my latest instagram pictures on twitter with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1632427	null	go on twitter and send a dm to USERNAME_0 with the name of the sender from my most recent new email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . send_direct_message ( message = sender_name , to = USERNAME_0 ) ;
turking/1632430	null	find the latest email sender name and send it to USERNAME_0 directly on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . send_direct_message ( message = sender_name , to = USERNAME_0 ) ;
turking/1632431	null	please send direct message to USERNAME_0 over twitter with the sender 's name of my newest email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . send_direct_message ( message = sender_name , to = USERNAME_0 ) ;
turking/1632432	null	automatically deliver a dm on twitter to USERNAME_0 saying the sender name of my new latest email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . send_direct_message ( message = sender_name , to = USERNAME_0 ) ;
turking/1632433	null	take my newest instagram photos and put them on twitter with a caption of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = picture_url ) ;
turking/1632435	null	automatically bring me a dm on twitter to USERNAME_0 saying the sender name of my new latest email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . send_direct_message ( message = sender_name , to = USERNAME_0 ) ;
turking/1632438	null	dm the name of the sender of my newest email to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( ) ) => @com.twitter . send_direct_message ( message = sender_name , to = USERNAME_0 ) ;
turking/1632440	null	tell EMAIL_ADDRESS_0 what the description of my new icalendar schedule is automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = description , to = EMAIL_ADDRESS_0 ) ;
turking/1632443	null	put a post on fb showing the room 's new temp .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1632445	null	i want to see my important emails when wonk blog of the washington post posts something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1632453	null	whenever the washington post publishes an article from the wonk blog , show me my primary emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1632456	null	show me new emails from the wonk blog if something new is put up by the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1632458	null	tell me my current location if my icalendar is updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632459	null	should icalendar update , grab my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632460	null	if there 's a change to my icalendar fetch my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632461	null	should my icalendar have any changes immediately acquire my current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632463	null	when there is a change on my icalendar then get my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632475	null	when wp 's wonk blog category has a new post , show me my primary emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1632488	null	display my primary emails when the washington post wonk blog has a new article posted .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1632496	null	play URL_0 on my lg tv when calendar event begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1632497	null	i would like to see my primary category emails should the washington post have an article in its wonk blog blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum wonkblog ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1632501	null	play URL_0 on my lg tv when an event on my calendar begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1632502	null	if an event starts on my calendar play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1632503	null	on leg tv when calendar event begins play URL_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/1632505	null	on holidays please display lifestyle articles from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632506	null	i want URL_0 to play on my tv whenever a calendar event kicks off .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum started => @org.thingpedia.iot.tv . play_url ( url = URL_0 ) ;
turking/1632507	null	show me articles from washington post 's lifestyle section during a holiday .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632509	null	give me the washington post 's lifestyle articles once it 's a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632510	null	if it 's a holiday show me the washington post 's lifestyle articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632512	null	if it 's a holiday let me see washington post articles from the lifestyle section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632513	null	if wind speed is higher than NUMBER_0 miles per hour using the weather from the location of my instagram pictures notify me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1632514	null	please let me know if the wind speed goes above NUMBER_0 miles per hour in the location of my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1632515	null	check the location of photographs on my instagram and show me if the wind speed is NUMBER_0 miles per hour higher in the weather there .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1632516	null	alert me if the wind speed rises above NUMBER_0 miles per hour in the location of my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1632521	null	can you show the lifestyle articles from the washington post if it 's a holiday	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632523	null	alert me if the weather in my instagram pictures location 's wind speed reaches more than NUMBER_0 miles per hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1632527	null	is the wind speed NUMBER_0 miles per hour higher higher in the weather at the location of photos on my instagram ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 mph ;
turking/1632575	null	as soon as i move show me wall street journal world news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.wsj . get ( section = enum world_news ) ;
turking/1632576	null	retrieve the wall street journal world news for me when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.wsj . get ( section = enum world_news ) ;
turking/1632580	null	can you obtain the world news from the wall street journal when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.wsj . get ( section = enum world_news ) ;
turking/1632581	null	if i change locations get the wall street journal world news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.wsj . get ( section = enum world_news ) ;
turking/1632601	null	retrieve my steps from fitbit when the temperature in LOCATION_0 is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.fitbit . getsteps ( ) ;
turking/1632602	null	when the temp in LOCATION_0 is below freezing retrieve my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.fitbit . getsteps ( ) ;
turking/1632604	null	whenever the LOCATION_0 temperature is freezing then retrieve my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.fitbit . getsteps ( ) ;
turking/1632605	null	when LOCATION_0 had below freezing temperature get me my fitbit step count	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.fitbit . getsteps ( ) ;
turking/1632606	null	get my fitbit steps whenever the LOCATION_0 temperature is under freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.fitbit . getsteps ( ) ;
turking/1632650	null	get my fitbit steps when temperature in LOCATION_0 is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.fitbit . getsteps ( ) ;
turking/1632669	null	show me how to say QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 if a calendar event with organizer QUOTED_STRING_1 commences	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632671	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when there is a QUOTED_STRING_1 event on my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632677	null	any time an event organized by QUOTED_STRING_0 starts , translate QUOTED_STRING_1 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1632679	null	please send to me the QUOTED_STRING_0 translation in GENERIC_ENTITY_tt:iso_lang_code_0 when something organized by QUOTED_STRING_1 starts on my calendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632681	null	let me see my fitbit steps any time i put new photos on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1632682	null	write out the QUOTED_STRING_0 translation to the GENERIC_ENTITY_tt:iso_lang_code_0 language when one of my calendar events that has been put together by QUOTED_STRING_1 begins	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_1 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1632687	null	show me what my steps are from fitbit any time i upload a picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1632688	null	when i upload a picture to instagram show my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1632693	null	when there is a QUOTED_STRING_0 event on my calendar , i want to get the translation of QUOTED_STRING_1 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum started => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_1 ) ;
turking/1632694	null	whenever i post pics to instagram , i want to see my fitbit step count	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1632695	null	whenever i upload a picture to instagram show me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1632697	null	notify me of my fitbit steps whenever i upload a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1632713	null	tell me the weather over at home when there 's a new political article in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1632714	null	i want to know the weather when the washington post makes a new politics article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1632715	null	display the weather in my home if the washington post publishes a new article in the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1632716	null	show weather from home when washington post posts a new article in politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1632717	null	when washington post posts new article in the politics show me home weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1632728	null	when a new article shows up in the politics section of the washington post can you tell me what the weather is in my home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1632761	null	notify me of my unimportant emails when a new business article posts in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1632764	null	if a new post appears in the business section of washington post send unimportant emails to me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1632766	null	when the washington post creates a new business article , send me unimportant emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1632768	null	when there is a new article in washington post business section , load my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1632769	null	when a new article is published in washington post business section fetch my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1632771	null	when dangerous asteroids are close to earth get tweets from anyone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.twitter . home_timeline ( ) ;
turking/1632772	null	if a dangerous asteroid comes close to earth send me tweets from anyone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.twitter . home_timeline ( ) ;
turking/1632775	null	when washington post has a new article in the business section give me my unimportant emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1632777	null	when a dangerous asteroids comes near earth find tweets from anyone i know	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.twitter . home_timeline ( ) ;
turking/1632781	null	when a dangerous asteroid gets near the earth fetch tweets from anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.twitter . home_timeline ( ) ;
turking/1632782	null	when there is a new article in washington post world section retrieve the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632783	null	retrieve the weather if there is a new article in washington post world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632786	null	get the weather when there is a new washington post world section article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632798	null	when the washington post has a new world article , i want the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632806	null	when there is a wsj opinion section new article i want my speaker louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1632807	null	turn up my speaker if a wall street journal opinions article is published	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1632808	null	turn up my speaker when there is a new article in the wsj opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1632809	null	raise speaker volume when the wsj opinions section has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1632810	null	make the volume louder on my speaker when wsj opinions section post a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1632815	null	any time an opinions article first appears in the wsj , boost the sound on my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum opinions ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/1632822	null	make a post to facebook site if i leave from my house	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( ) ;
turking/1632861	null	when EMAIL_ADDRESS_0 sends me an important email give me events at QUOTED_STRING_0 from my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632862	null	when i receive an important email from EMAIL_ADDRESS_0 , show me my icalendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632863	null	if i get very important emails from EMAIL_ADDRESS_0 retrieve my icalendar events at QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632864	null	i want my icalendar events shown at QUOTED_STRING_0 when i get an email marked important from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632868	null	display my icalendar events at QUOTED_STRING_0 when i get an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @org.thingpedia.icalendar . list_events ( ) filter location == QUOTED_STRING_0 ;
turking/1632871	null	tell me my fitbit steps whenever i get an email that is important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.fitbit . getsteps ( ) ;
turking/1632873	null	relay my fitbit steps to me when i receive an email that has been marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.fitbit . getsteps ( ) ;
turking/1632875	null	tell me my fitbit steps if i get an email marked important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.fitbit . getsteps ( ) ;
turking/1632876	null	reply with my new schedule on icalendar automatically to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1632877	null	let me know my fitbit steps when i get an email that 's marked as important .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.fitbit . getsteps ( ) ;
turking/1632878	null	give me my steps from fitbit when i get and email marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @com.fitbit . getsteps ( ) ;
turking/1632882	null	send my icalendar new schedule automatically to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1632889	null	send a reply to EMAIL_ADDRESS_0 telling her my new icalendar schedule automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1632891	null	automatically tell EMAIL_ADDRESS_0 my new icalendar schedule in a reply .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.gmail . send_email ( message = $result , to = EMAIL_ADDRESS_0 ) ;
turking/1632914	null	get the weather for my current location whenever my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632915	null	get the weather of my present location anytime my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632916	null	whenever fitbit updates my steps bring up the current weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632919	null	get the weather where i am whenever my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632920	null	le me know the weather in here once my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632922	null	give me the weather in here when my fitbit steps are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1632957	null	when i post a new instagram pic get me the washington post lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632958	null	if the new york times publishes a new article then obtain my dropbox files but in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1632960	null	show me washington post lifestyle when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632961	null	show my dropbox files in reverse alphabetical order when the new york times publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1632962	null	when i post a new photo on instagram retrieve for me the washington post lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632963	null	get my dropbox files in reverse alphabetical order when the new york times publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1632964	null	give me washington post lifestyle when i upload a new photo on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632965	null	if i make a picture on instagram , show the lifestyle article on the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632967	null	i want to see the lifestyle article on the washington post whenever i upload to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.washingtonpost . get_article ( section = enum lifestyle ) ;
turking/1632969	null	retrieve my dropbox files in reverse alphabetical order anytime the new york times publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1632974	null	whenever the new york times publishes a new article get my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1632979	null	anytime the new york times publishes a new article , retrieve my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633042	null	when the snow stops in LOCATION_0 then show my steps in fitbit to me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.fitbit . getsteps ( ) ;
turking/1633043	null	grab the steps from fitbit whenever it stops snowing LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.fitbit . getsteps ( ) ;
turking/1633048	null	once the snow stops let me view channels with QUOTED_STRING_0 on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1633049	null	i want to see QUOTED_STRING_0 videos on youtube once the snow stops	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1633050	null	locate fitbit steps when snow stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.fitbit . getsteps ( ) ;
turking/1633051	null	show me youtube channels matching QUOTED_STRING_0 when it stops snowing at this locations	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1633052	null	when it is no longer snowing any more at this location display youtube channels matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1633053	null	find youtube channels with QUOTED_STRING_0 whenever it stops snowing here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1633054	null	show my steps in fitbit when it stops snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.fitbit . getsteps ( ) ;
turking/1633055	null	once it stops snowing in LOCATION_0 , get the steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.fitbit . getsteps ( ) ;
turking/1633056	null	when it is no longer snowing in LOCATION_0 find my fitbit step count	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.fitbit . getsteps ( ) ;
turking/1633059	null	when the snow stops here look for youtube channels with QUOTED_STRING_0 in them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum snowy ) => @com.youtube . search_channel ( query = QUOTED_STRING_0 ) ;
turking/1633061	null	i want to see my instagram pictures with the HASHTAG_0 tag when it starts raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1633065	null	when it starts raining in here i want to see my instagram pictures tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1633066	null	when it starts raining in here show me my instagram pictures tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1633067	null	when it starts raining here , show me my instagram pictures tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1633068	null	if it starts raining in my location show me my instagram pictures tagged HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1633069	null	pictures tagged HASHTAG_0 on my instagram show me when raining in here starts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.instagram . get_pictures ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1633071	null	when the temperature in home is below freezing tell me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633076	null	give me the dropbox files in reverse alphabetical order when the temperature in home is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633078	null	when i get a message in channel HASHTAG_0 on slack , translate the phrase QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633079	null	translate the words QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 whenever i receive a message in channel HASHTAG_0 on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633080	null	in channel HASHTAG_0 on slack when i receive a message translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633081	null	when the temperature at my home location is below freezing , tell me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633082	null	if i get a message in the HASHTAG_0 channel on slack then write QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633083	null	from GENERIC_ENTITY_tt:iso_lang_code_0 translate QUOTED_STRING_0 when message is received on HASHTAG_0 channel in slack	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633087	null	when the temperature in home is below freezing tell me the dropbox files in reverse alphabetical	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633088	null	reverse alphabetical order my dropbox files tell me when the temperature in home is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633090	null	if the temperature at my home location falls below freezing , tell me my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633113	null	show me my calendar evens when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633114	null	notify me on my calendar evens when i get a new fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633116	null	when my fitbit steps update tell me my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633122	null	to the translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when i get a message on scale in HASHTAG_0 channel	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) filter channel == HASHTAG_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633123	null	inform me of my calendar events when the steps on my fitbit change	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633127	null	when steps on fitbit change tell me my calendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633150	null	display translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 with yandex when EMAIL_ADDRESS_0 sends me mail on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633151	null	if i 'm getting an email from EMAIL_ADDRESS_0 on my gmail i want to see the translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 using yandex	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633152	null	show me the translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 with yandex when EMAIL_ADDRESS_0 sends and email to my gmail account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633153	null	show me the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0 with yandex when an email is received from EMAIL_ADDRESS_0 on gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633156	null	when EMAIL_ADDRESS_0 from gmail sends me an email show me with yandex the QUOTED_STRING_0 translation in GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633167	null	when i get an email on gmail show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633169	null	if i get an email through gmail i want to see my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633172	null	tell me my steps from my fitbit if i get an email in my gmail box	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633178	null	fetch me any instagram images i have taken in my current location whenever i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1633179	null	when i receive a tweet give me the instagram pictures i took here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1633180	null	give me the instagram pictures taken here whenever i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.instagram . get_pictures ( ) filter location == $location . current_location ;
turking/1633181	null	fetch the location i 'm currently at whenever a new phd comic gets published	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633185	null	when a new phd comic is published get my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633186	null	when a new phd comic is published pull up my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633187	null	give me search results for QUOTED_STRING_0 from bing when my steps on fitbit show an update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633188	null	when phd publishes a new comic retrieve the location i am at	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633189	null	pull up my current location when they publish a new phd comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633193	null	if my step counter on my fitbit gets an update show me all the results for QUOTED_STRING_0 from bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633195	null	show QUOTED_STRING_0 findings on bing when the steps on my fitbit are no longer the same	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633196	null	when my fitbit steps update show me bing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633197	null	when fitbit steps change display QUOTED_STRING_0 findings on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633198	null	find my current location when phd post a new comic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633200	null	let me know if my instagram picture 's location has a weather cloudiness of less than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter cloudiness <= NUMBER_0 ;
turking/1633221	null	if i receive a new gmail email , tell me how much an uber costs from LOCATION_0 to LOCATION_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.uber . price_estimate ( end = LOCATION_1 , start = LOCATION_0 ) ;
turking/1633222	null	i want to know the cost of using an uber to go from LOCATION_0 to LOCATION_1 when i get an email through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.uber . price_estimate ( end = LOCATION_1 , start = LOCATION_0 ) ;
turking/1633225	null	if i get email through gmail let me know how much it would cost to take an uber ride from LOCATION_0 to LOCATION_1 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.uber . price_estimate ( end = LOCATION_1 , start = LOCATION_0 ) ;
turking/1633228	null	send me an updated price of an uber from LOCATION_0 to LOCATION_1 when i get an email via gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.uber . price_estimate ( end = LOCATION_1 , start = LOCATION_0 ) ;
turking/1633237	null	lower the volume on my speaker whenever the washington post publishes a new article in the national section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1633238	null	turn down my speaker volume if there is a new national section article in the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1633239	null	if the washington post national section has a new article decrease the speaker volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1633240	null	when the washington post publishes a new national section article lower the volume on my speakers	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1633241	null	turn the volume down on my speaker if a new national section article in the washington post is released	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1633251	null	when a new article appears in the washington post national section please turn down my speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum national ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1633269	null	if a QUOTED_STRING_0 organized event is about to start then organize my dropbox files in abc order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633270	null	when an event that is organized by QUOTED_STRING_0 and is on my calendar is about to begin get my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633272	null	please automatically post a picture on twitter of my new schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633273	null	auto post a picture to twitter that says my new icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633276	null	post a picture on twitter saying my new schedule on icalendar , automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633277	null	when an event organized by QUOTED_STRING_0 on my calendar is about to start get my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633278	null	on twitter automatically post a picture saying my new schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633282	null	update my twitter with a picture of my new schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633284	null	every time i get a new schedule in icalendar automatically post a picture on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633287	null	when an event on my calendar organized by QUOTED_STRING_0 is about to begin get my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ) filter status == enum upcoming => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633304	null	identify my current location when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633307	null	show me my current spot when i upload a new picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633308	null	i want to see my current location when i upload a new instagram picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633309	null	let me know my current location when i add a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633313	null	when i post a new picture to instagram report my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633363	null	give me my steps stats from fitbit every time someone i follow sends a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633364	null	when a twitter person i follow tweets tell me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633369	null	can you display my fitbit steps when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633372	null	tell me my steps from fitbit when someone i follow tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633379	null	if someone i follow on twitter tweets send me my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1633396	null	when the location of some event changes on my icalendar tell me today 's asteroid info	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1633399	null	inform me of today 's asteroid info when the location of some events change on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1633401	null	today 's asteroid info tell me when the location of some event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1633404	null	let me know today 's asteroid info when the location event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1633410	null	if there is a change to an icalendar event location , inform me about the day 's asteroid news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @gov.nasa . asteroid ( ) ;
turking/1633446	null	when i move around send me the files on dropbox in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633454	null	read me my emails with the label QUOTED_STRING_0 whenever my steps on fitbit update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1633455	null	if an update happens to fitbit steps , i want to know about emails with the label QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1633456	null	if i have an update to my fitbit steps tell me all of my emails with a QUOTED_STRING_0 label	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1633457	null	if there 's an update to my steps on my fitbit say my emails labeled with QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.gmail . inbox ( ) filter contains ( labels , QUOTED_STRING_0 ) ;
turking/1633458	null	when i move , i need my dropbox files in alphabetical order from z to a.	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633459	null	i 'd like my dropbox files in reverse alphabetical order when i change locations .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633461	null	if i move give me my dropbox files in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633471	null	when one of the people i follow on twitter tweets get my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633478	null	if i get an email via gmail fetch me my recent pictures on instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1633480	null	if i receive a an email in gmail show me my recent instagram photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1633481	null	fetch me my recent pictures on instagram as soon as an email comes in through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1633482	null	if someone i 'm following tweets , please get me my dropbox files in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633483	null	if i get an email on gmail find me my recent instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1633486	null	if someone i 'm following tweets fetch the files in my dropbox in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633489	null	when there 's a new washington post lifestyle article , i need an email to be sent to someone .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1633490	null	somebody should be sent an email when there is a new lifestyle article on washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1633494	null	when the washington post lifestyle section get a new article added email someone	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1633495	null	when the lifestyle section of the washington post has a new article send somebody an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1633499	null	when the washington post lifestyle section publishes a new article send someone an email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1633500	null	email somebody when the washington post lifestyle section has a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.gmail . send_email ( ) ;
turking/1633501	null	translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 whenever i get a tweet from USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633503	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when i get a message from USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633504	null	i want files from dropbox retrieved in reverse alphabetical order whenever a person that i follow on twitter tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633505	null	when i get a tweet from USERNAME_0 , put QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633507	null	when USERNAME_0 tweets me translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633508	null	when i get a tweet from USERNAME_0 show the GENERIC_ENTITY_tt:iso_lang_code_0 translation of QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633509	null	i want to get the files from my dropbox in reverse alphabetical order when there 's a tweet from someone i 'm following .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1633511	null	if a new article on the lifestyle section of the washington post is detected , tell me latest rss feed posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1633515	null	i want to see the latest posts in an rss feed when the washington post has a new article in the lifestyle section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1633516	null	tell me latest rss feed posts if a new lifestyle washington post section article is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1633517	null	if a new article appears on washington post 's lifestyle section , let me know the newest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1633518	null	translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when USERNAME_0 tweets me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633531	null	list latest post information from an rss feed whenever a new article inside the section titled lifestyle appears for the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1633538	null	when there is a new washington post lifestyle section article show me the latest posts in an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1633546	null	show me my current location if i get an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633553	null	when an email comes in marked important tell me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633555	null	email labeled important than notify me of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633557	null	i need to know my current location if an email comes in that is flagged as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633564	null	give me information on my latest location if i obtain an email that has been listed as essential .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1633585	null	when i move , get my calendar events organized by QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1633588	null	when my location changes , get my calendar events organized by QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1633625	null	send email to EMAIL_ADDRESS_0 with subject saying QUOTED_STRING_0 and message with the new weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1633626	null	with message the new weather automatically send EMAIL_ADDRESS_0 an email that has the subject QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1633627	null	send an email with new weather and QUOTED_STRING_0 for the subject to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1633628	null	grab my dropbox files and put them in alphabetical order if a followed person tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633631	null	automatically send EMAIL_ADDRESS_0 an email with the subject QUOTED_STRING_0 with the new weather message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1633638	null	mail out QUOTED_STRING_0 to EMAIL_ADDRESS_0 with the message the new weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.gmail . send_email ( message = $result , subject = QUOTED_STRING_0 , to = EMAIL_ADDRESS_0 ) ;
turking/1633642	null	whenever someone i follow sends a tweet retrieve my dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633644	null	retrieve all my dropbox files in alphabetical order if someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633655	null	get dropbox files in alphabetical order if someone i follow on twitter tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633670	null	if someone i follow on twitter send a tweet then get all dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.dropbox . list_folder ( order_by = enum name_increasing ) ;
turking/1633675	null	when there are new latest posts on an rss feed message those to slack with the hashtag HASHTAG_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1633676	null	message HASHTAG_0 on slack after checking for new latest posts on an rss feed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1633677	null	monitor the rss feed and when there is a latest post , send a message HASHTAG_0 on slack saying that .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1633678	null	first check for new latest posts on an rss feed , then send a message HASHTAG_0 on slack .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1633680	null	scour for new latest posts on an rss feed then message HASHTAG_0 on slack saying that .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1633688	null	check for new latest posts on an rss feed then post HASHTAG_0 on slack saying that .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.slack . send ( channel = HASHTAG_0 , message = $result ) ;
turking/1633738	null	whenever there is a new article in the wall street journal lifestyle section send an email to EMAIL_ADDRESS_0 using my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1633739	null	when there is a new article in the wall street journal lifestyle section create an email to EMAIL_ADDRESS_0 using my gmail	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1633753	null	when a new article shows up in the lifestyle section of the wall street journal use my gmail to send an email to EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1633755	null	use my gmail to send an email to EMAIL_ADDRESS_0 when there is a new lifestyle article in the wall street journal .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum lifestyle ) ) => @com.gmail . send_email ( to = EMAIL_ADDRESS_0 ) ;
turking/1633804	null	when i change locations i need to see my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633805	null	when i am in motion get my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633806	null	show me my icalendar icalendar when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633807	null	grab my schedule on icalendar whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633808	null	if i move get my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633809	null	using my newest updated drop files as a caption post a twitter pic automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633812	null	when i 'm moving retrieve my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1633821	null	send a tweet picture out automatically with a caption of my new dropbox files that have most recently changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633860	null	spontaneously tweet a photo and make the caption my newest updated dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633879	null	tweet a picture automatically along with the caption my new dropbox files that have updated recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1633905	null	when USERNAME_0 posts a tweet , send a translation of QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633909	null	i want QUOTED_STRING_0 translated into GENERIC_ENTITY_tt:iso_lang_code_0 when there are tweets from user USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633910	null	send a translation of QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 every time USERNAME_0 makes a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633912	null	show QUOTED_STRING_0 in GENERIC_ENTITY_tt:iso_lang_code_0 if i get an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633915	null	when i receive an important email from EMAIL_ADDRESS_0 , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633916	null	when EMAIL_ADDRESS_0 sends me an important email translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633920	null	if i get an important email from EMAIL_ADDRESS_0 , translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633922	null	translate the saying QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633925	null	whenever there are tweets from USERNAME_0 translate QUOTED_STRING_0 into GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633926	null	when i get an important email from EMAIL_ADDRESS_0 translate QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633936	null	make a translation of QUOTED_STRING_0 to GENERIC_ENTITY_tt:iso_lang_code_0 when i receive an important email from EMAIL_ADDRESS_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.yandex.translate . translate ( target_language = GENERIC_ENTITY_tt:iso_lang_code_0 , text = QUOTED_STRING_0 ) ;
turking/1633940	null	get articles from the washington post sports section when the wall street journal has a new article about world news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1633941	null	when the wall street journal makes a world news article grab the sports article from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1633943	null	i want to see the sports articles from the washington post when there is a wall street journal article in the world news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1633944	null	when the wall street journal publishes a new world news article , get articles from the washington post sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1633945	null	i want to see the sports section from the washington post whenever the wall street journal puts out a new world news article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1633947	null	if the wall street journal is publishing a world news article retrieve the washington post 's sports article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wsj . get ( section = enum world_news ) ) => @com.washingtonpost . get_article ( section = enum sports ) ;
turking/1633956	null	post a picture on tumblr saying the description of my new schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.tumblr.blog . post_picture ( caption = description ) ;
turking/1633962	null	auto post a picture on tumblr saying the description of my new schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.tumblr.blog . post_picture ( caption = description ) ;
turking/1633965	null	let me know of my dropbox quota when there is a dangerous asteroid heading near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . get_space_usage ( ) ;
turking/1633972	null	display posts from phdcomics whenever i receive a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1633973	null	any time i get a new tweet give me phdcomics posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1633974	null	give me posts on phdcomics when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1633976	null	show me phdcomics posts when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1633977	null	when a tweet arrives show me phdcomics posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1633978	null	let me see posts on phdcomics when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1633980	null	should a dangerous asteroid come close to earth display my dropbox quota	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . get_space_usage ( ) ;
turking/1633981	null	i want to see my dropbox quota whenever there 's a dangerous asteroid near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.dropbox . get_space_usage ( ) ;
turking/1634004	null	if the weather goes above NUMBER_0 degrees in the location of my recent instagram pictures alert me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1634005	null	notify me in the event that the temperature goes above NUMBER_0 degrees in the location of my recent instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1634007	null	send out of a notification if the locations shown in my instagram photo get higher than NUMBER_0 degrees	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1634010	null	bring up the latest posts in reddit 's front page when i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.reddit.frontpage . get ( ) ;
turking/1634011	null	whenever the temperature is over NUMBER_0 degrees in weather at the location of my recent instagram photos you are to alert me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1634012	null	advise me when the temperature is greater than NUMBER_0 degrees at the location of my recent instagram photos	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1634015	null	should i walk more than NUMBER_0 steps , show the reddit front page '' s latest posts	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.reddit.frontpage . get ( ) ;
turking/1634019	null	on the event that my walking steps exceed NUMBER_0 bring up the latest posts on reddit 's front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.reddit.frontpage . get ( ) ;
turking/1634021	null	show me the latest posts in the reddit front page if i make more than NUMBER_0 steps while walking	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.reddit.frontpage . get ( ) ;
turking/1634022	null	if the temperature increase over NUMBER_0 degrees in the locations of my instagram pictures , notify me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter temperature >= NUMBER_0 F ;
turking/1634061	null	get an icalendar events organized by QUOTED_STRING_0 when i get an email marked important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1634063	null	when i get an email marked as important , get my icalendar events organized by QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1634064	null	show me icalendar events organized by QUOTED_STRING_0 if i get an important email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1634065	null	obtain my icalendar events organized by QUOTED_STRING_0 when i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1634075	null	get my icalendar events organized by QUOTED_STRING_0 when i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.icalendar . list_events ( ) filter organizer == QUOTED_STRING_0 ;
turking/1634133	null	upon receiving a tweet , find a gif with tag HASHTAG_0 from giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1634134	null	use giphy to find a gif that 's tagged HASHTAG_0 anytime i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1634136	null	whenever my steps update through my fitbit show me my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634137	null	send me my schedule on icalendar whenever my fitbit updates my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634138	null	retrieve from giphy a gif with tag HASHTAG_0 when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1634139	null	if i get a tweet then find me a gif with the tag HASHTAG_0 on giphy	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.giphy . get ( tag = HASHTAG_0 ) ;
turking/1634140	null	when fitbit steps change get my icalendar schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634142	null	if i receive an email marked as important play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1634143	null	when i get an email marked as important play URL_0 on my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1634145	null	give me my schedule on icalendar when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634146	null	when my fitbit steps update show me my schedule on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634147	null	if i receive a tweet from USERNAME_0 , then retrieve my emails from my primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634148	null	pull up URL_0 on my lg tv whenever i receive an email marked as important	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( is_important = true ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . play_url ( url = URL_0 ) ;
turking/1634149	null	refresh my emails from my primary category if i receive a tweet from USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634151	null	get my emails from the primary category if i receive one of USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634153	null	when i get a twitter message from USERNAME_0 , gather my emails from the primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634154	null	post QUOTED_STRING_0 onto twitter anytime i upload picture onto instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1634155	null	show emails of primary category when USERNAME_0 tweet 's at me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634156	null	when i receive a tweet from USERNAME_0 show my primary category emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634157	null	post QUOTED_STRING_0 on twitter after i post a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1634158	null	anytime i upload a picture onto instagram , post QUOTED_STRING_0 on to twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1634160	null	if i put a photo on instagram , tweet QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1634162	null	tweet QUOTED_STRING_0 when i post a picture on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1634164	null	when i sent instagram a photo , post to twitter a msg that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1634177	null	let me know today 's articles in the new york times when the washington post publishes an article in the section of politics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1634185	null	let 's see today 's articles in the new york times where the washington post publishes articles in the politics section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1634186	null	if something is posted in the politics section of the washington post , tell me today 's new york times articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1634205	null	if i get an email on my gmail then message me what the thermostat is showing for the humidity	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1634206	null	i want to know what humidity my thermostat reports when i get an email through gmail .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1634207	null	every time i get an email through gmail show me the humidity report on the thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1634211	null	tell me the humidity on the thermostat when i get an email to my gmail account	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1634216	null	if i get an email via gmail tell me what my thermostat reports for humidity .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1634218	null	if my gmail gets an email then show me the thermostat 's humidity report	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( email_id of @com.gmail . inbox ( ) ) => @org.thingpedia.iot.humidity . humidity ( ) ;
turking/1634229	null	fetch me the instagram pictures i took at work when i get home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1634230	null	show me the instagram pictures i took at work as soon as i get home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1634231	null	when i get home give me the instagram pictures i took at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1634233	null	when i get home , show me the instagram pictures i took at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1634240	null	get me the instagram pictures i took at when when i get home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter location == $location . home => @com.instagram . get_pictures ( ) filter location == $location . work ;
turking/1634273	null	pressingly send my new dropbox files in reverse alphabetical order by email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1634284	null	i would like you to automatically send me my new dropbox files in reverse alphabetical order through email	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.gmail . send_email ( message = $result ) ;
turking/1634300	null	can i get all my drop box files in reverse alphabetical order whenever i walk more than NUMBER_0 steps ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1634303	null	if the wind speed is over NUMBER_0 km per hour in my instagram pictures locations , let me know	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 kmph ;
turking/1634304	null	when the wind speed picks up to NUMBER_0 kilometers per hour in the weather of my instagram pictures send me an alert	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 kmph ;
turking/1634305	null	if the wind speed reaches NUMBER_0 kilometers per hour in the weather report for the location of my instagram pictures send me a notification	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 kmph ;
turking/1634306	null	when the weather in my instagram pictures location goes over NUMBER_0 kilometers per hour , send me an alert	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 kmph ;
turking/1634308	null	when i walk more than NUMBER_0 steps get my dropbox notes in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1634311	null	automatically post my new calendar events on the facebook media	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634312	null	when the wind speed is not less than NUMBER_0 kilometers per hour that is in weather in the location of my instagram pics alert me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 kmph ;
turking/1634319	null	put dropbox files in reverse alphabetical order whenever i walk more than NUMBER_0 steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1634323	null	when the washington post publishes a new opinion section article retrieve QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1634325	null	if a person i follow tweets then display the schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634326	null	if a new opinions article is released by the washington post , put QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1634327	null	anytime someone i follow tweets , send me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634328	null	get QUOTED_STRING_0 on bing when the washington post puts out an article that is in opinions section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1634329	null	bring up my schedule if a person i follow makes it twitter post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634330	null	show my schedule when someone i follow posts a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634331	null	mute the lg tv when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1634332	null	when someone i follow on twitter makes a post , show my schedule to me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634333	null	if i move , mute my lg tv	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1634334	null	turn off the volume of my lg tv if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1634335	null	show me my schedule whenever someone i follow posts a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634336	null	tell me when the wind speed is more then NUMBER_0 kilometers per hour as far as the weather goes at the location of my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) => @org.thingpedia.weather . current ( location = location ) ) filter wind_speed >= NUMBER_0 kmph ;
turking/1634337	null	when i move from a position , please mute my tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " tv " ) . mute ( ) ;
turking/1634340	null	when i walk more than NUMBER_0 steps at anytime get my dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.dropbox . list_folder ( order_by = enum name_decreasing ) ;
turking/1634343	null	when a new opinion section article is posted by the washington post retrieve a relevant search on for QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1634351	null	if i make a motion then shut off the lg tv sound	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . mute ( ) ;
turking/1634374	null	display the NUMBER_0 latest instagram photos i made once i 've left work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1634375	null	display NUMBER_0 latest instagram pictures when i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1634376	null	display me my NUMBER_0 latest instagram pictures when i leave work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1634377	null	if i leave the workplace , display my NUMBER_0 newest instagram pictures .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1634379	null	if an article is published in the washington post 's plum line blog show me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634380	null	once i 'm out from work , you are to show me the NUMBER_0 latest instagram photos from me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.instagram . get_pictures ( count = NUMBER_0 ) ;
turking/1634382	null	send my schedule whenever an article in the plum line blog posts from the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634383	null	when the washington post publishes an article in the plum line blog show me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634384	null	display any slack messages i 've received in the last hour whenever a new article is posted in the washington post 's local section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1634385	null	display my schedule whenever the washington post publishes an article to the plum line blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1634386	null	if a new article appears in the local section of the washington post please show me all slack messages i 've been sent in the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1634387	null	if the washington post publishes a new local section article show me my slack messages from the last hour	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1634388	null	list film and entertainment channels from youtube whenever the time for an event changes on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.youtube . channels_by_category ( category_id = enum film_and_entertainment ) ;
turking/1634390	null	if the time for an event on my icalendar changes tell me about film and entertainment channels on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.youtube . channels_by_category ( category_id = enum film_and_entertainment ) ;
turking/1634391	null	send me my received slack messages from the last hour whenever there is a new post to the local section from washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum local ) ) => @com.slack . channel_history ( ) filter date >= $start_of ( h ) ;
turking/1634393	null	when there is a change of events on my icalendar tell me youtube 's film and entertainment channels	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.youtube . channels_by_category ( category_id = enum film_and_entertainment ) ;
turking/1634394	null	if the time of some event changes on my icalendar , tell me youtube 's film and entertainment channels	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.youtube . channels_by_category ( category_id = enum film_and_entertainment ) ;
turking/1634396	null	when there is a change of time for any of my icalendar events tell me the film and entertainment channels on youtube	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.youtube . channels_by_category ( category_id = enum film_and_entertainment ) ;
turking/1634409	null	send me the film and entertainment channels for youtube whenever any of my event times change on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( start_date , end_date of @org.thingpedia.icalendar . list_events ( ) ) => @com.youtube . channels_by_category ( category_id = enum film_and_entertainment ) ;
turking/1634464	null	alert me of my steps synced with fitbit whenever the new york times comes out with a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1634465	null	i would like to know my fitbit steps anytime a new article is published from the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1634467	null	tell me my steps from fitbit if the new york times publishes a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1634475	null	when a new article is published by new york times , tell me my steps from fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1634476	null	mute my lg webos tv when something changes on icalendar .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1634477	null	mute the sounds of my lg webos tv when a change comes through on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1634478	null	if anything is updated on my icalendar then turn off the sound to my lg webos television	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1634479	null	on icalendar , if anything is changed , mute my lg webos tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @org.thingpedia.volume-control ( name = " lg webos tv " ) . mute ( ) ;
turking/1634487	null	show me phd comics when my steps on fitbit update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1634489	null	i need phd comics whenever my fitbit steps are updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1634490	null	when my steps on fitbit are updated show me phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1634491	null	show me phd comics when my steps update on my fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1634493	null	if there 's an update to fitbit steps , please show me phd comics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1634494	null	anytime my fitbit updates the steps i ' v taken send me some phd comics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.phdcomics . get_post ( ) ;
turking/1634495	null	when someone who i follow tweets turn my lg tv off	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1634496	null	if someone i am following tweets , please shut off the lg tv .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1634497	null	turn my lg tv off when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1634501	null	if someone that i 'm following on twitter sends out a tweet then please turn my lg tv off	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1634502	null	turn off my lg tv if someone that i follow sends out a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.iot.tv ( name = " lg " ) . set_power ( power = enum off ) ;
turking/1634544	null	when it 's a holiday in GENERIC_ENTITY_tt:country_0 then give me unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1634545	null	in GENERIC_ENTITY_tt:country_0 when it 's a holiday give me my unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1634547	null	display my unimportant emails when there is a holiday in GENERIC_ENTITY_tt:country_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1634548	null	if there 's a holiday in GENERIC_ENTITY_tt:country_0 send me my emails of low importance .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1634552	null	i want to receive my emails that are n't important when there 's a holiday in GENERIC_ENTITY_tt:country_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( country = GENERIC_ENTITY_tt:country_0 ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.gmail . inbox ( is_important = false ) ;
turking/1634555	null	lower volume on my lg tv when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1634556	null	decrease my lg tv 's volume as soon as my fitbit steps have an update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1634558	null	when my steps on fitbit update make the volume of my lg tv lower	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1634561	null	fitbit steps update then lower lg tv volume	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1634563	null	turn down the volume of my lg tv when my steps update on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1634580	null	turn down my lg tv volume when my steps from fitbit update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @org.thingpedia.volume-control ( name = " lg tv " ) . lower_volume ( ) ;
turking/1634587	null	post a photo on twitter of my fitbit step count when updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634591	null	check for my new steps from fitbit and then post a picture on twitter broadcasting them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634592	null	look for my new fitbit steps and then put a picture on twitter showing them off	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634594	null	alert for my new steps from fitbit and then post a picture on twitter saying them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634614	null	when i have a new event on my icalendar post it to my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634615	null	automate facebook posts for my icalendar events	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634616	null	post all new icalendar events to facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634617	null	update my facebook to show new events on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634618	null	from now on , post any new icalendar events to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634619	null	post on my facebook an update that says QUOTED_STRING_0 when the rain stops in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634620	null	when it is n't raining anymore in LOCATION_0 , post an update on my facebook with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634621	null	post QUOTED_STRING_0 for me on facebook when the rain stops in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634622	null	when the rain stops in here make a post for me on facebook saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634623	null	say QUOTED_STRING_0 on facebook once it stops raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634624	null	post QUOTED_STRING_0 on facebook when it stops raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634637	null	when the humidity on my thermostat changes , post the new number on facebook automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634639	null	if i 'm leaving from here , make a post saying QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634640	null	post the thermostat 's new humidity onto facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634641	null	make a new post of the new humidity as reported by thermostat onto facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634642	null	post QUOTED_STRING_0 on facebook when i leave this place	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634643	null	on my location changes then post on facebook the text QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634644	null	when i leave this location post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634645	null	if someone i follow tweets retrieve my google drive files larger than NUMBER_0 gb	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.google.drive . list_drive_files ( ) filter file_size >= NUMBER_0 GB ;
turking/1634646	null	post QUOTED_STRING_0 on facebook when i exit this location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634648	null	if it happens that someone i follow tweets retrieve my google drive files larger than NUMBER_0 gb	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.google.drive . list_drive_files ( ) filter file_size >= NUMBER_0 GB ;
turking/1634650	null	get my google drive files that are bigger than NUMBER_0 gb when there is a tweet from someone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.google.drive . list_drive_files ( ) filter file_size >= NUMBER_0 GB ;
turking/1634654	null	when someone that i 'm following tweets i want to get my google drive files that are bigger than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.google.drive . list_drive_files ( ) filter file_size >= NUMBER_0 GB ;
turking/1634657	null	whenever i walk NUMBER_0 steps or more , i want QUOTED_STRING_0 to be posted on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634659	null	if i have been shows to have walked more than NUMBER_0 steps , make a post on facebook saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634660	null	if i should walk more than NUMBER_0 steps , post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634662	null	when i go over NUMBER_0 steps post to facebook QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634663	null	when i send a new photo to instagram , please post QUOTED_STRING_0 to facebook for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634665	null	whenever i sent a picture to instagram then post on facebook saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634666	null	post QUOTED_STRING_0 on facebook when i put a new instagram picture up	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634667	null	make a post on facebook saying QUOTED_STRING_0 when i upload to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634668	null	post on facebook saying QUOTED_STRING_0 if you 've seen me upload a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634700	null	post the new latest posts in the reddit front page on facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634701	null	put the newest reddit posts in facebook 's front page automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634708	null	whenever the washington posts has a new article in the lifestyle section then change the bluetooth speaker value to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . set_volume ( volume = NUMBER_0 ) ;
turking/1634710	null	show me emails that arrived today when a file is created in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1634711	null	i want to see emails that arrived today when a file is created in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1634712	null	when i make a new google drive file show me today 's newest emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1634713	null	if a file is created in google drive then show me any emails that came today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1634714	null	display the emails from today whenever a file is created in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @com.gmail . inbox ( ) filter date >= $start_of ( day ) ;
turking/1634715	null	auto post the latest reddit posts to the front page of facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634718	null	i 'd like to see the newest reddit posts on facebook 's front page	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634719	null	post the latest posts in reddit to the front page of facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634720	null	when there are new latest posts on the reddit front page , automatically post them on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634725	null	if a new video posts from a followed youtube channel retrieve the world washington post 's articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.youtube . list_videos ( ) ) => @com.washingtonpost . get_article ( section = enum world ) ;
turking/1634733	null	when i post a new instagram pic make a file on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634734	null	create a google drive file when i post new instagram pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634735	null	make a new google drive file any time i add photos to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634736	null	create a google drive file for each instance i load pics to instagram site	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634737	null	create a new file in google drive every time i upload a new photo on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634739	null	i want a photo with title QUOTED_STRING_0 posted to facebook when i change locations	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1634741	null	post the weather update automatically on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634742	null	set up an automatic weather update on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634743	null	whenever i upload a new photo to instagram make a new file in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634746	null	add new time estimates to facebook automatically for uber	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634747	null	post the new weather information on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634748	null	auto post the time estimate for uber on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634749	null	auto post new time estimate for uber on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634750	null	post on facebook saying QUOTED_STRING_0 something new from phd comics is released	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634751	null	automatically post new eta for uber on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634752	null	post on facebook saying QUOTED_STRING_0 when a new phd comics is posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634753	null	post on facebook saying QUOTED_STRING_0 when phd comics has something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634757	null	when a new phd comics is uploaded post on facebook something that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634760	null	when the room 's humidity dips below NUMBER_0 fetch my files on my google drive that were modified today .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.google.drive . list_drive_files ( ) filter modified_time >= $start_of ( day ) ;
turking/1634762	null	if the humidity goes below NUMBER_0 in the room then get me any google drive files that have been modified today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.google.drive . list_drive_files ( ) filter modified_time >= $start_of ( day ) ;
turking/1634764	null	show me google drive files that have modified today if the room 's humidity falls below NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.google.drive . list_drive_files ( ) filter modified_time >= $start_of ( day ) ;
turking/1634766	null	using facebook automatically post new uber eta	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.uber . time_estimate ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634782	null	post a picture to facebook when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post_picture ( ) ;
turking/1634783	null	when my fitbit weight changes post a photo on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post_picture ( ) ;
turking/1634784	null	post to facebook an image whenever there is a change to my weight on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post_picture ( ) ;
turking/1634785	null	post a picture on facebook when my weight changes on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post_picture ( ) ;
turking/1634786	null	get the eta for uber select in LOCATION_0 when it starts to rain here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum select ;
turking/1634787	null	fetch me the select uber eta at LOCATION_0 when the rain starts coming down in here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum select ;
turking/1634788	null	get me the eta for select uber at LOCATION_0 if it starts to rain in here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.uber . time_estimate ( start = LOCATION_0 ) filter uber_type == enum select ;
turking/1634789	null	post QUOTED_STRING_0 on facebook whenever i post a new photo to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634790	null	if i upload a new photo to instagram then please post a message on facebook stating QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634791	null	when new pic uploaded on instagram , post the words QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634807	null	when i get new primary category emails automatically post their snippets on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/1634808	null	post the snippets of my new emails of category primary on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/1634809	null	please post a snippet of my new primary category emails to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/1634810	null	automatically put up the snippet of the new primary category emails on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/1634812	null	create a new file on my google drive when i get a direct message on my twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634813	null	whenever i receive a new dm on my twitter , make a new file in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634814	null	make a google drive file when i get a direct message on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634815	null	make a file on google drive when i get a twitter direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634816	null	auto post the snippet of my new primary category emails on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) ) => @com.facebook . post ( status = snippet ) ;
turking/1634822	null	if there is a new article posted in the world section of the washington post then post something to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.facebook . post ( ) ;
turking/1634823	null	post something on facebook when a new article is found in the world section of the washington post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.facebook . post ( ) ;
turking/1634824	null	tell me the weather at my home if a file is created on my google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1634826	null	notify me of the weather at home every time a google drive file is created .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1634827	null	post something on facebook if there is a new article in the world section of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.facebook . post ( ) ;
turking/1634828	null	tell me the weather in home when a file is created using google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1634830	null	inform me of the weather in home if a file is created in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1634832	null	when a google drive file is created , send me the weather update at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1634833	null	if a file is created in google drive then tell me the weather at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1634835	null	when a new article in the opinions section is posted in the washington posts , i want to see my main emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum opinions ) ) => @com.gmail . inbox ( is_primary = true ) ;
turking/1634836	null	put a file on google drive every time the temperature is below freezing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634839	null	make me a new file in google drive when LOCATION_0 has dropped below freezing in temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634840	null	create a file in google drive whenever the temperature in LOCATION_0 drops below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634842	null	you are to make a new file in google drive when you see that the temperature has dropped below freezing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634847	null	for new dropbox files check in reverse alphabetical order and post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634848	null	check for new dropbox files in reverse alphabetical order and post them on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634849	null	review new dropbox files in reverse alphabetical order then post to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634850	null	review my new dropbox files in reverse alphabetical order and post them on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634852	null	if a new business section article is published by the new york times , post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634853	null	whenever a business article from the washington post is published , post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634854	null	post QUOTED_STRING_0 on my facebook when the business section of the washington post puts out a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634860	null	every time my fitbit steps update i want to see youtube 's best of youtube channel	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.youtube . channels_by_category ( category_id = enum best_of_youtube ) ;
turking/1634868	null	post on facebook saying QUOTED_STRING_0 if i receive an email from EMAIL_ADDRESS_0 in category primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634869	null	if EMAIL_ADDRESS_0 sends me a primary email post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634870	null	if i get a primary category email from EMAIL_ADDRESS_0 then post on facebook QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634871	null	if i get an email from EMAIL_ADDRESS_0 in category primary post on facebook saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634872	null	post QUOTED_STRING_0 using facebook if EMAIL_ADDRESS_0 sends me a email marked primary	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634875	null	make a file in google drive whenever my fitbit steps are changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634876	null	create a file in google drive when my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634877	null	create a google drive file if my steps sync on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634878	null	when my fitbit steps change then make a file in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634881	null	if there is a post in the lifestyle section of the washington post on facebook say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634882	null	using facebook automatically post new calendar event descriptions	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = description ) ;
turking/1634883	null	automatically generate new calendar event posts on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = description ) ;
turking/1634884	null	post QUOTED_STRING_0 on facebook when there is a new article in washington post lifestyle .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634885	null	automatically post new event descriptions from my calendar on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = description ) ;
turking/1634886	null	if fitbit step tracker syncs then start a new google drive file	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1634890	null	post to facebook whenever someone dms me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634893	null	notify me which google drive files have changed most recently , whenever i go over NUMBER_0 ` steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.google.drive . list_drive_files ( order_by = enum modified_time_decreasing ) ;
turking/1634894	null	if i get a direct message , publish it to facebook site	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634895	null	if i get a dm from someone post it on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634896	null	whenever i get a dms , put it on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634897	null	put any dms i get on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1634898	null	whenever i exceed NUMBER_0 steps , let me know of the latest changes to google drive files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.google.drive . list_drive_files ( order_by = enum modified_time_decreasing ) ;
turking/1634899	null	if i walk over NUMBER_0 steps , show me which google drive files have changed the most , recently	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.google.drive . list_drive_files ( order_by = enum modified_time_decreasing ) ;
turking/1634901	null	show me the recently changed google drive files whenever i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.google.drive . list_drive_files ( order_by = enum modified_time_decreasing ) ;
turking/1634905	null	i 'd like to know what google drive files changed the most recently when i walk more than NUMBER_0 steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) filter steps >= NUMBER_0 => @com.google.drive . list_drive_files ( order_by = enum modified_time_decreasing ) ;
turking/1634926	null	post my most recent dropbox file changes to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634928	null	automatically put up on facebook the new dropbox files that most recently changed .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634931	null	post my new dropbox files automatically that were recently changed on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634932	null	post up the new dropbox files that changed recently on facebook automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634933	null	if any of my dropbox files have changed recently then post them to my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1634934	null	automatically put the new icalendar events organizer on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = organizer ) ;
turking/1634936	null	put the organizer for my new icalendar events on facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = organizer ) ;
turking/1634937	null	show me my google drive files that were created most recently when an event is about to start on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ;
turking/1634938	null	show me my google drive files that were created most recently the next time an event is starting on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ;
turking/1634939	null	show my most recently created google drive files whenever an icalendar event is going to start	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ;
turking/1634940	null	always publish to facebook my latest icalendar event organizers	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = organizer ) ;
turking/1634941	null	tell me recently created google drive files in the situation that an event is about to start on my icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ;
turking/1634944	null	make a facebook post of the organizer when i have new events on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = organizer ) ;
turking/1634948	null	when an event is about to start on my icalendar bring up my google drive files that were recently created	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) filter status == enum upcoming => @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ;
turking/1634962	null	send the organizer of my calendar events for facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = organizer ) ;
turking/1634974	null	when i leave the house create a new facebook post that reads QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634976	null	post to facebook saying QUOTED_STRING_0 when i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634978	null	when my location changes away from home , post to facebook QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634984	null	if it begins to snow here create a post and put it on facebook for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.facebook . post ( ) ;
turking/1634985	null	on slack when i receive a message post saying QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634986	null	when the snow here starts post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.facebook . post ( ) ;
turking/1634987	null	when it begins snowing in here post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.facebook . post ( ) ;
turking/1634989	null	if anyone i follow on facebook posts a new tweet then post the text	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = text ) ;
turking/1634990	null	if i 'm following a person on facebook post their new twitter messages automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = text ) ;
turking/1634991	null	if i follow someone on facebook automatically post their new tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = text ) ;
turking/1634992	null	if i receive a message on slack post on facebook QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.slack . channel_history ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1634993	null	the text of new tweets from anyone i follow on facebook should be automatically posted	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = text ) ;
turking/1634994	null	automatically post the text of new tweets from everyone i follow on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = text ) ;
turking/1634995	null	when i leave work please make a post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.facebook . post ( ) ;
turking/1634996	null	post something on my facebook after i have moved away from work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.facebook . post ( ) ;
turking/1634997	null	you are to post on facebook whenever you see that i have left work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.facebook . post ( ) ;
turking/1635019	null	whenever i 'm at a new location , post it at facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635020	null	on facebook auto post my new current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635021	null	away post my current location on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635027	null	post QUOTED_STRING_0 to my facebook if an asteroid come near to the earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635029	null	post QUOTED_STRING_0 on my facebook if an asteroid goes by close to earth .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635030	null	post the message QUOTED_STRING_0 to facebook when an asteroid passes close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635031	null	put a post on facebook that says QUOTED_STRING_0 whenever an asteroid passes near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635032	null	if an asteroid passes near to earth post a message to facebook that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635033	null	if someone i follow tweets make a post on facebook with QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635034	null	post new dropbox files in alphabetical order over on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635036	null	make a post on my facebook that says QUOTED_STRING_0 if someone i follow on twitter makes a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635037	null	if someone i follow tweets then post on facebook QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635038	null	post on facebook saying QUOTED_STRING_0 when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635041	null	if someone i 'm following makes a tweet , create a new post on my facebook that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635048	null	if the primary category gets an email from EMAIL_ADDRESS_0 then make a google drive file	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1635049	null	if i am sent an primary email from EMAIL_ADDRESS_0 then generate a google drive file	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1635050	null	i want a new google drive file created every time EMAIL_ADDRESS_0 sends me an email with primary as the category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1635053	null	make a google drive file when i get a message from EMAIL_ADDRESS_0 in the primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1635054	null	if i got a primary email from EMAIL_ADDRESS_0 start a google drive file	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1635055	null	get websites matching QUOTED_STRING_0 when a file is modified on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1635056	null	show websites with QUOTED_STRING_0 if a file is modified on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1635057	null	get websites matching QUOTED_STRING_0 if a file is modified on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1635058	null	when a google drive file is modified retrieve QUOTED_STRING_0 matching websites	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1635059	null	post my new dropbox files in alphabetical order to facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635060	null	put my new dropbox files on facebook in abc order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635061	null	get QUOTED_STRING_0 websites when a google drive file is modified	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1635062	null	if a file is changed on google drive , show me a list of websites containing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1635063	null	i need a file made in google drive if there EMAIL_ADDRESS_0 sends an email from the primary category	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_primary = true ) filter sender_address == EMAIL_ADDRESS_0 ) => @com.google.drive . create_new_drive_file ( ) ;
turking/1635066	null	post to facebook when i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635067	null	anytime i follow someone on tweets please post something to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635068	null	if someone i am following tweets , post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635069	null	post something on my facebook whenever someone i follow posts a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635070	null	put something on facebook when someone i am following tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635071	null	when a person that i am following sends out a new tweet please post something to my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635072	null	if new files in dropbox are checked in alphabetical order post it on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635073	null	post it on facebook after checking alphabetically ordered new dropbox files	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635074	null	retrieve files from my new dropbox in alphabetical order and make a facebook post with them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635075	null	post my new files from dropbox to facebook in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635076	null	post new dropbox files to facebook in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635077	null	make a facebook post of my new dropbox files in alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_increasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635078	null	i want my new dropbox files in reverse alphabetical order and then automatically posted on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635079	null	post my dropbox files in reverse abc order on my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635080	null	posts all new dropbox files to facebook in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635081	null	on facebook automatically post my new dropbox files in reverse alphabetical order	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635087	null	put up any new files in my dropbox on facebook in reverse alphabetical order automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635089	null	get new files from my dropbox and post them onto my facebook automatically in reverse alphabetical order .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum name_decreasing ) ) => @com.facebook . post ( status = $result ) ;
turking/1635092	null	send a random coin when a file is created in google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = 1 , low = 0 ) ;
turking/1635093	null	show me a random coin if a file is created in google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = 1 , low = 0 ) ;
turking/1635094	null	whenever a file is produced in google drive , let me know a random coin .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = 1 , low = 0 ) ;
turking/1635095	null	if a file is created in google drive , display a random coin	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( file_id of @com.google.drive . list_drive_files ( order_by = enum created_time_decreasing ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = 1 , low = 0 ) ;
turking/1635097	null	if i get a tweet then make a post to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635098	null	when a tweet is received , make some kind of post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635099	null	post on my facebook whenever i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( ) ;
turking/1635103	null	retrieve my latest schedule and proceed to update my facebook with it .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635104	null	post QUOTED_STRING_0 when my fitbit steps update on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635105	null	check to see what 's on my schedule and then put it on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635106	null	update my post with QUOTED_STRING_0 on facebook when the steps on my fitbit are updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635107	null	post QUOTED_STRING_0 on facebook when i have an update on my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635108	null	as soon as the happen post my fitbit step count on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635109	null	when my steps sync on my fitbit then send a post with QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635110	null	when i have a fitbit steps update i want to post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635111	null	from fitbit post my new steps on facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635112	null	post any of my new steps from fitbit to facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635113	null	using facebook automatically post my step count on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635114	null	whenever i have new steps from fitbit post them on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635120	null	put my new schedule on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635130	null	please put the caption of my new instagram pictures onto facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = caption ) ;
turking/1635131	null	put an automatic caption post of my new instagram pictures on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = caption ) ;
turking/1635132	null	any time i have new instagram pictures automatically post the caption to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = caption ) ;
turking/1635133	null	put up captions automatically for my new instagram pics on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = caption ) ;
turking/1635135	null	whenever i have new icalendar events automatically post the summary on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = summary ) ;
turking/1635136	null	post summaries automatically of events on my icalendar to my facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = summary ) ;
turking/1635137	null	put a facebook post up with a summary of my new icalendar events .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = summary ) ;
turking/1635138	null	post automatically on my facebook summaries of my new events on icalendar	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = summary ) ;
turking/1635139	null	post the summary of any new icalendar events to facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = summary ) ;
turking/1635147	null	post to my facebook when i use instagram to upload a new photo	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( ) ;
turking/1635148	null	make a post to facebook whenever i upload a new picture to instagram .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( ) ;
turking/1635150	null	post the new room temperature on facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635151	null	i want to know the new room temperature automatically on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635152	null	post the room 's temperature on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.temperature . temperature ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635166	null	post something on facebook when i leave home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( ) ;
turking/1635167	null	when the washington posts adds a new article to its world section then get the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.weather . current ( ) ;
turking/1635168	null	get the weather when the washington posts has a new article in its world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @org.thingpedia.weather . current ( ) ;
turking/1635169	null	when my location changes from home , post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( ) ;
turking/1635170	null	when i exit the house go to facebook and post something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( ) ;
turking/1635171	null	make a post to my facebook whenever i leave my home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( ) ;
turking/1635172	null	get my instagram pictures when a file is changed on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1635173	null	whenever i leave my home , make some kind of post to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.facebook . post ( ) ;
turking/1635174	null	download my instagram pictures when a file is modified on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1635175	null	whenever a file is altered on google drive , give me my pictures on instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1635176	null	when a file is changed on google drive , download my instagram pictures	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.instagram . get_pictures ( ) ;
turking/1635189	null	post on facebook when someone comments on a github issue	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( ) ;
turking/1635190	null	when on a github issues someone comments then on facebook post something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( ) ;
turking/1635196	null	if someone says something about a github issue , post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( ) ;
turking/1635201	null	post QUOTED_STRING_0 to facebook when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635205	null	post any weight changes from fitbit onto facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635206	null	when someone sends me a tweet create a QUOTED_STRING_0 post on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635207	null	post QUOTED_STRING_0 on facebook when i am the recipient of a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635208	null	post QUOTED_STRING_0 on facebook when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635209	null	when a tweet arrives post QUOTED_STRING_0 to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635211	null	post them to facebook when my fitbit weight changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635212	null	if my fitbit steps update post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635213	null	as fitbit steps update post QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635214	null	post QUOTED_STRING_0 on facebook whenever my fitbit steps update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635215	null	post QUOTED_STRING_0 on my facebook as soon as steps on my fitbit update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635216	null	make a facebook post with them when there is a change in my weight on fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635217	null	when my fitbit steps update put QUOTED_STRING_0 on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635218	null	when google drive file changes retrieve my steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1635219	null	i would like to have my weight fluctuations put on facebook using my fitbit data	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635220	null	if there is an update in my google drive file update me on my fitbit steps .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1635221	null	should my google drive files change , show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1635222	null	post something to facebook when the rain stops in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( ) ;
turking/1635224	null	post something on facebook whenever it stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( ) ;
turking/1635225	null	post something on facebook after is stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( ) ;
turking/1635226	null	after it stops raining in LOCATION_0 , post something on facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( ) ;
turking/1635227	null	when a google drive file changes show me my fitbit steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1635228	null	show my fitbit steps when something is changed in a file in google drive .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.google.drive . list_drive_files ( ) ) => @com.fitbit . getsteps ( ) ;
turking/1635229	null	post my new calendar events on facebook automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635232	null	alert me of my schedule if the washington posts puts up an article from the plum line blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1635234	null	if the washington posts publishes an article in the plum line blog , please show me my schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_blog_post ( section = enum the_plum_line ) ) => @org.thingpedia.icalendar . list_events ( ) ;
turking/1635244	null	post sender name of my new unimportant emails on facebook automatically .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = false ) ) => @com.facebook . post ( status = sender_name ) ;
turking/1635245	null	post the sender 's name for all new unimportant emails to facebook from now on	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = false ) ) => @com.facebook . post ( status = sender_name ) ;
turking/1635246	null	on facebook post the sender name of unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = false ) ) => @com.facebook . post ( status = sender_name ) ;
turking/1635247	null	automatically post the sender name on facebook of my new unimportant emails .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = false ) ) => @com.facebook . post ( status = sender_name ) ;
turking/1635248	null	from now on , post to facebook the sender name to all of my new unimportant emails	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = false ) ) => @com.facebook . post ( status = sender_name ) ;
turking/1635249	null	get the sender name of unimportant emails and post it to facebook	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gmail . inbox ( is_important = false ) ) => @com.facebook . post ( status = sender_name ) ;
turking/1635254	null	auto create a new file with name the name of my new dropbox files that changed most recently on google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.google.drive . create_new_drive_file ( file_name = file_name ) ;
turking/1635255	null	automatically create a new file with name the name of my new dropbox files that was altered most recently on my google drive	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.dropbox . list_folder ( order_by = enum modified_time_decreasing ) ) => @com.google.drive . create_new_drive_file ( file_name = file_name ) ;
turking/1635259	null	put up a facebook post saying QUOTED_STRING_0 if i send a new picture to instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635261	null	do a facebook post that says QUOTED_STRING_0 when it stops raining in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635262	null	when the rain ends in LOCATION_0 , make a facebook post that says QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635263	null	make a facebook post saying QUOTED_STRING_0 if i leave here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . current_location ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635264	null	after i have moved from LOCATION_0 put up a new facebook post that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635265	null	give me the weather at work if wahington post has a new article in the sports section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum sports ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1635266	null	if there is a new article posted in the ny times then advise me of my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1635271	null	make a facebook post that says QUOTED_STRING_0 when there 's a phd comics update	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635272	null	when i upload a new photo to my instagram write a facebook post saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635273	null	when my fitbit has a change to my current weight make a new facebook picture post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.facebook . post_picture ( ) ;
turking/1635274	null	make a facebook post saying QUOTED_STRING_0 when a new photo is uploaded to my instagram	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635278	null	on facebook post something when in washington post there is a new article in the world section	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum world ) ) => @com.facebook . post ( ) ;
turking/1635280	null	put QUOTED_STRING_0 on facebook if there is a new washington post business section post	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum business ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635281	null	if washington post lifestyle section posts a new article then make a facebook post saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum lifestyle ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635284	null	on twitter post my new steps after checking for them .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.twitter . post ( status = $result ) ;
turking/1635287	null	on facebook post my most recent schedule update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635289	null	on facebook post my new steps from fitbit automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.fitbit . getsteps ( ) ) => @com.facebook . post ( status = $result ) ;
turking/1635291	null	my new instagram pictures post automatically on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.instagram . get_pictures ( ) ) => @com.twitter . post_picture ( picture_url = picture_url ) ;
turking/1635298	null	make a facebook post when someone comments on a github issue .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( ) ;
turking/1635299	null	make a QUOTED_STRING_0 facebook post when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.facebook . post ( status = QUOTED_STRING_0 ) ;
turking/1635300	null	on facebook post something when on a github issues someone comments	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( ) ;
turking/1635301	null	when someone comments on a github-related issue , put something in a facebook post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.github . get_issue_comment ( ) ) => @com.facebook . post ( ) ;
turking/1635302	null	when the washington post posts a new politics article , show me today 's ny times articles .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1635303	null	on tumblr post a picture automatically saying description of my new schedule	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.icalendar . list_events ( ) ) => @com.tumblr.blog . post_picture ( caption = description ) ;
turking/1635304	null	post a facebook post whenever it stops raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum raining ) => @com.facebook . post ( ) ;
turking/1635305	null	give me today 's ny times articles when there 's a new politics article in the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( section = enum politics ) ) => @com.nytimes . get_front_page ( ) filter updated >= $start_of ( day ) ;
turking/1635306	null	get the steps from my fitbit for me whenever there is a new article posted in the ny times .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.fitbit . getsteps ( ) ;
turking/54287407	null	share picture descriptions on abc news top stories	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.abcnews . top_stories ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54287410	null	tell me about pictures on abc news updates for top stories	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.abcnews . top_stories ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54287727	null	make sure i see the most updated ars technica news items whenever there 's a new washington post piece .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.arstechnica . index ( ) ;
turking/54287730	null	if washington post runs a new story , let me see the newest ars technica news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.arstechnica . index ( ) ;
turking/54287747	null	get me the newest techcrunch news anytime that reddit 's front page updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.techcrunch . news ( ) ;
turking/54287751	null	upon an update of the front page of reddit , get me all the latest news from techcrunch .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.techcrunch . news ( ) ;
turking/54287768	null	when huffpost updates their front page , please find me a random quote .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.huffingtonpost . frontpage ( ) ) => @com.forismatic.quotes . get ( ) ;
turking/54287771	null	i 'd like to be shown a random quote whenever the front page of huffpost is updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.huffingtonpost . frontpage ( ) ) => @com.forismatic.quotes . get ( ) ;
turking/54287930	null	i want to see wired news ' top stories whenever a new phd comic comes out .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.wired . top_stories ( ) ;
turking/54287934	null	upon the publication of a new phd comic , can you display top wired news stories for me ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.wired . top_stories ( ) ;
turking/54287938	null	i want to see mozilla blog articles anytime a new asteroid is passing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.mozilla . articles ( ) ;
turking/54287957	null	give me a picture of updates to abc news top stories section .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.abcnews . top_stories ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54288195	null	give me the latest from ars technica , any time that new content goes up on washington post 's site .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.arstechnica . index ( ) ;
turking/54288197	null	if the washington post puts up a new article , find me the latest articles by ars technica .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.arstechnica . index ( ) ;
turking/54288237	null	upon the publication of new content in the business section of the nyt , please translate said articles into the czech language .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum business ) ) => @com.yandex.translate . translate ( target_language = null ^^tt:iso_lang_code ( " czech " ) ) ;
turking/54288238	null	translate new articles posted in the new york times ' business section to czech for me please .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum business ) ) => @com.yandex.translate . translate ( target_language = null ^^tt:iso_lang_code ( " czech " ) ) ;
turking/54288295	null	if new content comes onto the matrix67 blog , can you mention the language that QUOTED_STRING_0 was published in ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54288297	null	tell me what language QUOTED_STRING_0 is in whenever something new gets posted on the matrix67 blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54288356	null	when new articles are uploaded into the new york times business section , translate them to czech	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum business ) ) => @com.yandex.translate . translate ( target_language = null ^^tt:iso_lang_code ( " czech " ) ) ;
turking/54288358	null	translate new articles that appear into the new york times business section into czech .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum business ) ) => @com.yandex.translate . translate ( target_language = null ^^tt:iso_lang_code ( " czech " ) ) ;
turking/54288525	null	at the time of a new phdcomics publication display wired news top headlines .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.wired . top_stories ( ) ;
turking/54288526	null	let me see wired top news upon publication of a new issue of phdcomics .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.wired . top_stories ( ) ;
turking/54288550	null	let me have the QUOTED_STRING_0 lingo written in when a new post appears on matrix67 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54288551	null	at the time matrix67 has a fresh posting , provide me the QUOTED_STRING_0 language as a write in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54288571	null	tell me if my tesla car is plugged in anytime it 's a holiday .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54288574	null	when it 's a holiday notify me whether or not my tesla car is plugged in .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54288641	null	when abc news updates the headlines , describe an image .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.abcnews . top_stories ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54288642	null	provide a picture description when there 's an update of abc news top headlines .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.abcnews . top_stories ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54288738	null	i 'd like the top stories from wired news anytime a new phd comic is published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.wired . top_stories ( ) ;
turking/54288744	null	whenever a new phd comic is published give me the top stories from wired news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.phdcomics . get_post ( ) ) => @com.wired . top_stories ( ) ;
turking/54288808	null	get articles on the mozilla blog if a new asteroid passes by	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.mozilla . articles ( ) ;
turking/54288863	null	translate new articles from the business section of the new york times into czech	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum business ) ) => @com.yandex.translate . translate ( target_language = null ^^tt:iso_lang_code ( " czech " ) ) ;
turking/54288864	null	when new articles appear in the business section of the new york times translate them into czech	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum business ) ) => @com.yandex.translate . translate ( target_language = null ^^tt:iso_lang_code ( " czech " ) ) ;
turking/54288976	null	when the new article posted in the washington post alert me by ars technica	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.arstechnica . index ( ) ;
turking/54288982	null	when there is a new article in washington post show me latest news by ars technica .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.washingtonpost . get_article ( ) ) => @com.arstechnica . index ( ) ;
turking/54289184	null	i need slashdot 's most updated news whenever business insider updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @org.slashdot . news ( ) ;
turking/54289186	null	as business insider updates , show the most recent slashdot news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @org.slashdot . news ( ) ;
turking/54289213	null	i want to see QUOTED_STRING_0 anytime there is a new post on matrix67 blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54289217	null	anytime there is a new post on matrix67 's blog show me QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54289237	null	anytime there is an update to huffington post 's front page get a random quote .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.huffingtonpost . frontpage ( ) ) => @com.forismatic.quotes . get ( ) ;
turking/54289238	null	send me a random quote any time huffington post 's front page updates .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.huffingtonpost . frontpage ( ) ) => @com.forismatic.quotes . get ( ) ;
turking/54289372	null	notify me of the latest slashdot news when business insider updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @org.slashdot . news ( ) ;
turking/54289374	null	alert me to the latest slashdot news when business insider updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @org.slashdot . news ( ) ;
turking/54289439	null	when there is a new asteroid passing by fetch articles on the mozilla blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) ) => @org.mozilla . articles ( ) ;
turking/54289503	null	notify me when reddit front page updates retrieve latest techcrunch news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.techcrunch . news ( ) ;
turking/54289505	null	alert when reddit front page updates retrieve latest techcrunch news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.techcrunch . news ( ) ;
turking/54289533	null	whenever reddit front page updates retrieve latest techcrunch news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.techcrunch . news ( ) ;
turking/54289538	null	tell me when reddit front page updates retrieve latest techcrunch news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.techcrunch . news ( ) ;
turking/54289542	null	gather a random quote when huffpost front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.huffingtonpost . frontpage ( ) ) => @com.forismatic.quotes . get ( ) ;
turking/54289543	null	fetch a random quote when huffpost front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.huffingtonpost . frontpage ( ) ) => @com.forismatic.quotes . get ( ) ;
turking/54289694	null	whenever it 's a holiday give me is my tesla car plugged in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54289700	null	when it 's a holiday tell me is my tesla car plugged in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.holidays . get_holidays ( ) filter date <= $end_of ( day ) && date >= $start_of ( day ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54289704	null	flash the tesla car whenever lifehacker updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.lifehacker . articles ( ) ) => @com.tesla.car . flash ( ) ;
turking/54289791	null	when there is an update from stanford news let me know if my tesla car is plugged in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54289859	null	if the new york times posts in sports show me the bbc top stories at that time .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum sports ) ) => @com.bbc . top_stories ( ) ;
turking/54289862	null	when the new york times has new sports articles show me bbc top stories . .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum sports ) ) => @com.bbc . top_stories ( ) ;
turking/54289914	null	retrieve the weather at home when i log in a new weight value on fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/54289979	null	i would like for you to tell me where is my tesla car ? if slashdot news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.slashdot . news ( ) ) => @com.tesla.car . get_drive_state ( ) ;
turking/54289984	null	if there are updates on slashdot news let me know where is my tesla car ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.slashdot . news ( ) ) => @com.tesla.car . get_drive_state ( ) ;
turking/54289995	null	fetch meme templates about QUOTED_STRING_0 when stanford press publishes a new book	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/54290000	null	gather meme templates about QUOTED_STRING_0 when stanford press publishes a new book	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/54290100	null	let me see a random fox when there is a new article by ars technica	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @ca.randomfox . floof ( ) ;
turking/54290103	null	i want to see a random fox when ars technica publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @ca.randomfox . floof ( ) ;
turking/54290140	null	when new weigh value is logged on fitbit show me what the weather is like at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/54290145	null	text me the steam id of user QUOTED_STRING_0 when stanford news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.steampowered . get_steam_id ( name = QUOTED_STRING_0 ) ;
turking/54290147	null	message me the steam id of user QUOTED_STRING_0 when stanford news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.steampowered . get_steam_id ( name = QUOTED_STRING_0 ) ;
turking/54290189	null	find the user QUOTED_STRING_0 when stanford news is updated and give me the steam id .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.steampowered . get_steam_id ( name = QUOTED_STRING_0 ) ;
turking/54290196	null	whenever top stories on time magazine update get a random fact	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.appspot.randomuselessfact . random ( ) ;
turking/54290199	null	hello when top stories on time magazine update get a random fact	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.appspot.randomuselessfact . random ( ) ;
turking/54290218	null	bing image search whenever techcrunch news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.bing . image_search ( ) ;
turking/54290273	null	when there is a stanford news update i want to see the steam id of user QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.steampowered . get_steam_id ( name = QUOTED_STRING_0 ) ;
turking/54290277	null	i want to know the steam id of user QUOTED_STRING_0 when there is an update in stanford news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.steampowered . get_steam_id ( name = QUOTED_STRING_0 ) ;
turking/54290287	null	get me a random fox when ars technica publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @ca.randomfox . floof ( ) ;
turking/54290322	null	get me top stories on bbc news when there are new articles in sports section of the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum sports ) ) => @com.bbc . top_stories ( ) ;
turking/54290327	null	present me top stories on bbc news when there are new articles in sports section of the new york times	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum sports ) ) => @com.bbc . top_stories ( ) ;
turking/54290426	null	if ars technica puts out a new article show a fox	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @ca.randomfox . floof ( ) ;
turking/54290702	null	whenever stanford press releases a new book show memes for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/54290704	null	show some QUOTED_STRING_0 memes whenever stanford press publishes a new book	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/54290843	null	i want to know the weather at home any time i log a new weight into fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/54290871	null	alert me is my tesla car plugged in ? when stanford news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54290936	null	get the number of steps i took when a dangerous asteroid is close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.fitbit . getsteps ( ) ;
turking/54290943	null	fetch the number of steps i took when a dangerous asteroid is close to earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.fitbit . getsteps ( ) ;
turking/54291277	null	gather for me are my tesla 's doors locked ? when there is a new top stories on wired news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wired . top_stories ( ) ) => @com.tesla.car . get_vehicle_state ( ) ;
turking/54291278	null	fetch me are my tesla 's doors locked ? when there is a new top stories on wired news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wired . top_stories ( ) ) => @com.tesla.car . get_vehicle_state ( ) ;
turking/54291413	null	inform me where is my tesla car ? when slashdot news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.slashdot . news ( ) ) => @com.tesla.car . get_drive_state ( ) ;
turking/54291414	null	alert me where is my tesla car ? when slashdot news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.slashdot . news ( ) ) => @com.tesla.car . get_drive_state ( ) ;
turking/54291420	null	i want to see meme templates containing QUOTED_STRING_0 when there is a new book published by stanford press	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.imgflip . list ( ) filter name =~ QUOTED_STRING_0 ;
turking/54291481	null	answer whether tesla door locked . notify me if new top news story on wired news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wired . top_stories ( ) ) => @com.tesla.car . get_vehicle_state ( ) ;
turking/54291484	null	alert me if new top stories on wired news . confirm tesla doors locked	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wired . top_stories ( ) ) => @com.tesla.car . get_vehicle_state ( ) ;
turking/54291506	null	when there is a dangerous asteroid close to earth , pull up how many steps i took .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.fitbit . getsteps ( ) ;
turking/54291508	null	get the number of steps that i took when there is a dangerous asteroid close to eath .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.fitbit . getsteps ( ) ;
turking/54291529	null	i want to find bing images when techcrunch news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.bing . image_search ( ) ;
turking/54291533	null	look for images on bing when techcrunch news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.bing . image_search ( ) ;
turking/54291649	null	pull up bing image search whenever techcrunch updates their news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.bing . image_search ( ) ;
turking/54291651	null	i want to see the bing image search whenever techcrunch publishes news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.bing . image_search ( ) ;
turking/54291689	null	check to see if my car doors are locked and if there 's a top story on wired news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.wired . top_stories ( ) ) => @com.tesla.car . get_vehicle_state ( ) ;
turking/54291701	null	whenever a sports article posts on the new york times show top stories on bbc news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum sports ) ) => @com.bbc . top_stories ( ) ;
turking/54291704	null	i want to see bbc news stories whenever the new york times posts a sports piece	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_section_page ( section = enum sports ) ) => @com.bbc . top_stories ( ) ;
turking/54291718	null	i need a random fact sent to me whenever time magazine updates top stories	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.appspot.randomuselessfact . random ( ) ;
turking/54291719	null	send me a random fact whenever time magazine updates a top story	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.appspot.randomuselessfact . random ( ) ;
turking/54291728	null	if an asteroid is near the earth show me my steps	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.fitbit . getsteps ( ) ;
turking/54291732	null	show me the steps i took whenever an asteroid is near earth	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @gov.nasa . asteroid ( ) filter is_dangerous == true ) => @com.fitbit . getsteps ( ) ;
turking/54291950	null	when the stanford news gets an update inform me if my tesla car is plugged in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @com.tesla.car . get_charge_state ( ) ;
turking/54291996	null	when time magazine updates top stories get random fact	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.appspot.randomuselessfact . random ( ) ;
turking/54293539	null	fetch me mac rumors when stock price changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @com.macrumors . stories ( ) ;
turking/54293545	null	seek for me mac rumors when stock price changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @com.macrumors . stories ( ) ;
turking/54293567	null	when i record a new weight on fitbit fetch new howtogeek articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.howtogeek . articles ( ) ;
turking/54293569	null	when i record a new weight on fitbit grab new howtogeek articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.howtogeek . articles ( ) ;
turking/54293571	null	when the location of some event changes on my icalendar fetch me latest gamespot news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gamespot . news ( ) ;
turking/54293573	null	when the location of some event changes on my icalendar get me latest gamespot news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gamespot . news ( ) ;
turking/54293966	null	bring up slashdot news when the weather changes and humidity is greater than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity >= NUMBER_0 => @org.slashdot . news ( ) ;
turking/54293970	null	when the humidity goes above NUMBER_0 and the weather changes , retrieve slashdot news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity >= NUMBER_0 => @org.slashdot . news ( ) ;
turking/54294011	null	should get the battery level of my tesla car change and battery level becomes not less than NUMBER_0 detect what language QUOTED_STRING_0 is written in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.tesla.car . get_charge_state ( ) ) filter battery_level >= NUMBER_0 => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54294130	null	give me the most recent gamespot news anytime a calendar event switches location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gamespot . news ( ) ;
turking/54294132	null	if an event on my calendar has a change of place , i want to see current gamespot news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gamespot . news ( ) ;
turking/54294192	null	whenever stock price changes give me what day is today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/54294195	null	tell me when stock price changes give me what day is today	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/54294320	null	when the front page of reddit updates , tell me news related to stanford .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @edu.stanford.news . get ( ) ;
turking/54294321	null	i 'd like to see all news that relates to stanford any time that reddit 's front page gets an update .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @edu.stanford.news . get ( ) ;
turking/54294466	null	hey wake up the tesla car when ars technica publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294503	null	tell me when the nyt publishes a new article what is the weather in home tomorrow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . forecast ( location = $location . home ) filter date <= $end_of ( day ) + 1 day && date >= $end_of ( day ) ;
turking/54294560	null	i want the tesla to be woken ay time ars technica puts out a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294564	null	anytime ars technica publishes a new article wake the tesla .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294575	null	if ars technica publishes a new article wake up the tesla	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294581	null	wake up the tesla car if a new article is published by ars technica	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294586	null	tell me should the weather outside change and cloudiness is greater than NUMBER_0 get the steps i have taken	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/54294589	null	hello should the weather outside change and cloudiness is greater than NUMBER_0 get the steps i have taken	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/54294606	null	show me a random digit any time cnn news gets a new top story .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.cnn . top_stories ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/54294613	null	when a new top story shows up on cnn news , please pick a random number .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.cnn . top_stories ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/54294827	null	wake up the tesla car when there is a fresh post on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294830	null	wake up the tesla car when there is the latest post on rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54294944	null	whenever a new top stories shows on cnn news , pick an arbitrary number	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.cnn . top_stories ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/54294950	null	on cnn news , when there is a new top story , select a random numeral	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.cnn . top_stories ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/54295049	null	fetch my steps from fitbit when new blog posted on techcrunch	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.fitbit . getsteps ( ) ;
turking/54295158	null	tell me latest ars technica news when stanford press has a new book published	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.arstechnica . index ( ) ;
turking/54295161	null	when stanford press has a new book published , alert me on latest ars technica news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.arstechnica . index ( ) ;
turking/54295201	null	alert me of news on slashdot if the weather changes and humidity is more than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity >= NUMBER_0 => @org.slashdot . news ( ) ;
turking/54295203	null	let me know the news on slashdot if the weather changes and has a humidity higher than NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity >= NUMBER_0 => @org.slashdot . news ( ) ;
turking/54295258	null	get a random number when there is a new top story on cnn news	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.cnn . top_stories ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/54295260	null	give me a random number when cnn news has a new top story	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.cnn . top_stories ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) ;
turking/54295336	null	if the humidity outside changes to more than a NUMBER_0 , please give me all current news on slashdot .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity >= NUMBER_0 => @org.slashdot . news ( ) ;
turking/54295337	null	let me know slashdot news , when the weather outside changes so that humidity is over NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter humidity >= NUMBER_0 => @org.slashdot . news ( ) ;
turking/54295379	null	any time matrix67 publishes something new , give me gamespot news ' latest articles	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.gamespot . news ( ) ;
turking/54295380	null	show me the newest gamespot news whenever matrix67 publishes something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.gamespot . news ( ) ;
turking/54295447	null	if the weather changes outside and the cloudiness is greater than NUMBER_0 , report my step count .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/54295453	null	let me know how many steps i 've taken if there are more clouds than NUMBER_0 and the weather changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/54295518	null	show me mac rumors when stock price changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @com.macrumors . stories ( ) ;
turking/54295520	null	if stock price changes show me mac rumors	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @com.macrumors . stories ( ) ;
turking/54295549	null	i would like to have my tesla car temperature changed to NUMBER_0 degrees when the snow stops in work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @com.tesla.car . set_temperature ( value = NUMBER_0 F ) ;
turking/54295554	null	when the snow stops in work adjust the temperature of my tesla to NUMBER_0 degrees .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @com.tesla.car . set_temperature ( value = NUMBER_0 F ) ;
turking/54295561	null	inform me of the necessary steps i need to take , if the weather outside changes and cloudiness gets to be more than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter cloudiness >= NUMBER_0 => @com.fitbit . getsteps ( ) ;
turking/54295564	null	tell me news on nature if there is a new post on matrix67 blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.nature . articles ( ) ;
turking/54295570	null	whenever there is a new post on matrix67 blog give me news about nature .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.nature . articles ( ) ;
turking/54295576	null	i 'd like to know relevant details to QUOTED_STRING_0 any time that there is a change or update to gamespot .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gamespot . news ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54295578	null	upon gamespot updating , get me the information about QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gamespot . news ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54295596	null	if new blog post on techcrunch then retrieve steps from fitbit	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.fitbit . getsteps ( ) ;
turking/54295706	null	find me stanford news when the reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @edu.stanford.news . get ( ) ;
turking/54295709	null	give me stanford news when the front page of reddit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @edu.stanford.news . get ( ) ;
turking/54295725	null	if time magazine 's top stories get changed , please let me know the big stories according to macrumors .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.macrumors . stories ( ) ;
turking/54295727	null	i want macrumors stories any time there is an update to top stories according to time magazine .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.macrumors . stories ( ) ;
turking/54295730	null	alert if ars technica posts a new article flash the tesla car	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . flash ( ) ;
turking/54295735	null	let me know when ars technica publishes a new article flash the tesla car	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . flash ( ) ;
turking/54295862	null	i want to see cook islands holidays whenever there is an update to stanford news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @org.thingpedia.holidays . get_holidays ( country = null ^^tt:country ( " cook islands " ) ) ;
turking/54295863	null	upon a change or update to the news from stanford , please go to cook islands holidays .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @org.thingpedia.holidays . get_holidays ( country = null ^^tt:country ( " cook islands " ) ) ;
turking/54295946	null	i would like to know if the battery level of my tesla car changes to no less than NUMBER_0 and if it does gifure out what language QUOTED_STRING_0 is in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.tesla.car . get_charge_state ( ) ) filter battery_level >= NUMBER_0 => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54295953	null	when the battery level of my tesla car changs and the battery level become NUMBER_0 or higher figure out what language QUOTED_STRING_0 is written in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.tesla.car . get_charge_state ( ) ) filter battery_level >= NUMBER_0 => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54296005	null	upon a new post on matrix67 blog , let me know when there is new news on nature .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.nature . articles ( ) ;
turking/54296060	null	give me the most recent gamespot news any time matrix67 publishes something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.gamespot . news ( ) ;
turking/54296062	null	i want go get the latest news from gamespot any time something new is published by matrix67 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.gamespot . news ( ) ;
turking/54296122	null	notify me washington post 's morning mix blog when business insider updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ;
turking/54296127	null	text me washington post 's morning mix blog when business insider updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ;
turking/54296146	null	tell me when stanford news updates show me cook islands holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @org.thingpedia.holidays . get_holidays ( country = null ^^tt:country ( " cook islands " ) ) ;
turking/54296152	null	whenever stanford news updates show me cook islands holidays	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @org.thingpedia.holidays . get_holidays ( country = null ^^tt:country ( " cook islands " ) ) ;
turking/54296171	null	gather news on business insider when reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.businessinsider . news ( ) ;
turking/54296175	null	fetch news on business insider when reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.businessinsider . news ( ) ;
turking/54296180	null	alert me whenever a new articles comes out on the tesla by ars technica .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . flash ( ) ;
turking/54296183	null	if ars technica puts out new content related to the tesla , let me know .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . flash ( ) ;
turking/54296195	null	give me the latest gamespot news when matrix67 publishes something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.gamespot . news ( ) ;
turking/54296311	null	fetch me stanford news when reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @edu.stanford.news . get ( ) ;
turking/54296314	null	get me stanford news when reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @edu.stanford.news . get ( ) ;
turking/54296355	null	if something new is posted on rss feed wake up the tesla car	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54296357	null	turn the telsa car on if a new post is on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54296551	null	when the new york times publishes a fresh article generate a caption for a picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54296565	null	get me the holidays when ars technica publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @org.thingpedia.holidays . get_holidays ( ) ;
turking/54296569	null	fetch me posts in the washington post post partisan blog in case get the battery level of my tesla car change and battery level is at least NUMBER_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.tesla.car . get_charge_state ( ) ) filter battery_level >= NUMBER_0 => @com.washingtonpost . get_blog_post ( section = enum post_partisan ) ;
turking/54296582	null	set the temperature of my tesla car to NUMBER_0 degrees when it ceases snowing in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @com.tesla.car . set_temperature ( value = NUMBER_0 F ) ;
turking/54296583	null	set the temperature of my tesla car to NUMBER_0 degrees when it halts snowing in work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @com.tesla.car . set_temperature ( value = NUMBER_0 F ) ;
turking/54296606	null	gather for me details of QUOTED_STRING_0 when gamespot updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gamespot . news ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54296610	null	fetch me details of QUOTED_STRING_0 when gamespot updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gamespot . news ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54296644	null	whenever ars technica publishes a new article flash the tesla car	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . flash ( ) ;
turking/54296648	null	when ars technica publishes a fresh article flash the tesla car	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @com.tesla.car . flash ( ) ;
turking/54296651	null	gather latest news by ars technica when stanford press publishes a new book	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.arstechnica . index ( ) ;
turking/54296652	null	get newest news by ars technica when stanford press publishes a new book	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.arstechnica . index ( ) ;
turking/54296757	null	whenever the nyt publishes a new article inform me what the weather is at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . forecast ( location = $location . home ) filter date <= $end_of ( day ) + 1 day && date >= $end_of ( day ) ;
turking/54296759	null	tell me the home weather forecast whenever the nyt publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . forecast ( location = $location . home ) filter date <= $end_of ( day ) + 1 day && date >= $end_of ( day ) ;
turking/54296802	null	any time a new book is published by stanford press , grab the newest ars technica news .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.arstechnica . index ( ) ;
turking/54296804	null	pick up most recent headlines from ars technica whenever stanford press has a new book published .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.sup . new_books ( ) ) => @com.arstechnica . index ( ) ;
turking/54296868	null	when the stock price changes , can you give me the latest on mac rumors ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @com.macrumors . stories ( ) ;
turking/54296871	null	i want to know the latest macrumors content if the stock price changes at all .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @com.macrumors . stories ( ) ;
turking/54296993	null	notify me what day it is the same day that there 's a change in the stock price .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/54296996	null	tell me what day it is when there 's a change in the stock price .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/54297014	null	list the latest gamespot news when the location of some event on my icalendar updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gamespot . news ( ) ;
turking/54297016	null	for location event changes on my icalendar , provide the latest news from gamespot	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( location of @org.thingpedia.icalendar . list_events ( ) ) => @com.gamespot . news ( ) ;
turking/54297060	null	when top stories on time magazine update text me stories on macrumors	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.macrumors . stories ( ) ;
turking/54297062	null	when top stories on time magazine update inform me stories on macrumors	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.time . top_stories ( ) ) => @com.macrumors . stories ( ) ;
turking/54297066	null	when matrix67 publishes something new text me QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297072	null	whenever matrix67 publishes something new tell me QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297136	null	when there is a fresh post on matrix67 blog retrieve blog on medium	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.medium . articles ( ) ;
turking/54297137	null	whenever there is a new post on matrix67 blog retrieve blog on medium	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.medium . articles ( ) ;
turking/54297171	null	in the event my tesla battery is NUMBER_0 at the lowest and the battery level alternates , find out the language of the written message of QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.tesla.car . get_charge_state ( ) ) filter battery_level >= NUMBER_0 => @com.yandex.translate . detect_language ( text = QUOTED_STRING_0 ) ;
turking/54297176	null	gather for me news on nature when there is a new post on matrix67 blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.nature . articles ( ) ;
turking/54297179	null	fetch me news on nature when there is a new post on matrix67 blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.nature . articles ( ) ;
turking/54297300	null	tell me QUOTED_STRING_0 whenever matrix67 publishes something new	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297302	null	when matrix67 publishes new material tell me QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297506	null	in the event a stock price is altered , tell me what day today is .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/54297507	null	let me know what day it is when stock price is modified .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @co.alphavantage . get_price ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/54297586	null	i would like news on business insider at the time the reddit front page gets updated .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.businessinsider . news ( ) ;
turking/54297589	null	give me news on business insider when the front page of reddit updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.businessinsider . news ( ) ;
turking/54297610	null	get me my steps off of fitbit when there is a new blog put up on techcrunch .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.techcrunch . news ( ) ) => @com.fitbit . getsteps ( ) ;
turking/54297670	null	anytime matrix67 publishes new material let me know QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297671	null	tell me QUOTED_STRING_0 any time matrix67 publishes something new .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297813	null	any time ars technica puts out a new article i want to see the holidays .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.arstechnica . index ( ) ) => @org.thingpedia.holidays . get_holidays ( ) ;
turking/54297815	null	if the battery level of my tesla changes and is at least NUMBER_0 , show me posts from the partisan blog of the washington post .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.tesla.car . get_charge_state ( ) ) filter battery_level >= NUMBER_0 => @com.washingtonpost . get_blog_post ( section = enum post_partisan ) ;
turking/54297884	null	turn on the tesla car when a new post is on my rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54297889	null	please wake the tesla car when i have a new post on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.tesla.car . wake_up ( ) ;
turking/54297894	null	tell me when the nyt publishes a new article and please tell me what the weather is like tomorrow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . forecast ( location = $location . home ) filter date <= $end_of ( day ) + 1 day && date >= $end_of ( day ) ;
turking/54297899	null	i want to know when the nyt publishes a new article and what is the weather at home tomorrow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @org.thingpedia.weather . forecast ( location = $location . home ) filter date <= $end_of ( day ) + 1 day && date >= $end_of ( day ) ;
turking/54297916	null	get me details of QUOTED_STRING_0 when gamespot updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gamespot . news ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297918	null	find me details for QUOTED_STRING_0 when gamespot updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.gamespot . news ( ) ) => @com.omdbapi . search ( title = QUOTED_STRING_0 ) ;
turking/54297934	null	when there is a new post on matrix67 blog please get it on medium	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.medium . articles ( ) ;
turking/54297938	null	find blog on medium when there is a new post on matrix67 blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.medium . articles ( ) ;
turking/54297952	null	i want new howtogeek articles whenever i record a new weight on my fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.howtogeek . articles ( ) ;
turking/54297955	null	every time i enter a new weight on fitbit return new articles from howtogeek .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.howtogeek . articles ( ) ;
turking/54297989	null	alert me to business insider updates on washington post 's morning mix blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ;
turking/54297991	null	let me know when there are business insider updates on washington post 's morning mix blog	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ;
turking/54298117	null	find news on business insider when the reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.businessinsider . news ( ) ;
turking/54298121	null	show me news on business insider when the reddit front page updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.reddit.frontpage . get ( ) ) => @com.businessinsider . news ( ) ;
turking/54298123	null	please bring up cook islands holidays when stanford news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @org.thingpedia.holidays . get_holidays ( country = null ^^tt:country ( " cook islands " ) ) ;
turking/54298128	null	show me cook islands holidays when stanford news updates	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @edu.stanford.news . get ( ) ) => @org.thingpedia.holidays . get_holidays ( country = null ^^tt:country ( " cook islands " ) ) ;
turking/54298174	null	can you make the temp NUMBER_0 degrees in my tesla at work when it is finished snowing ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @com.tesla.car . set_temperature ( value = NUMBER_0 F ) ;
turking/54298175	null	make it NUMBER_0 in my tesla when the snow stops falling at work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . work ) ) filter ! ( status == enum snowy ) => @com.tesla.car . set_temperature ( value = NUMBER_0 F ) ;
turking/54298256	null	please make a caption for a picture when the new york times publishes a new article .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54298258	null	generate a caption for a picture when the new york times publishes a new article	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.nytimes . get_front_page ( ) ) => @com.microsoft.cognitive.vision . generate_description ( ) ;
turking/54298273	null	can you take me to the mix blog on the washington post upon the update of business insider going through ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ;
turking/54298274	null	when business insider is updated , bring up washington post 's morning mix blog .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.businessinsider . news ( ) ) => @com.washingtonpost . get_blog_post ( section = enum morning_mix ) ;
turking/54298311	null	show me new howtogeek content whenever a new weight of mine goes into fitbit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.howtogeek . articles ( ) ;
turking/54298312	null	if i record a new weight entry into my fitbit , can you please bring up new articles from howtogeek ?	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( weight of @com.fitbit . getbody ( ) ) => @com.howtogeek . articles ( ) ;
turking/54298330	null	if new content goes up on matrix67 , show me a blog on mediums please .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.matrix67 . posts ( ) ) => @com.medium . articles ( ) ;
turking/352528	null	if the current wind speed is less than NUMBER_0 mph , tweet something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed <= NUMBER_0 mph ; @com.twitter . post ( ) ;
turking/352530	null	if the wind speed is less than NUMBER_0 mph on the current weather report send a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed <= NUMBER_0 mph ; @com.twitter . post ( ) ;
turking/352532	null	show the current weather for a location , and if the wind speed there is less than NUMBER_0 miles per hour , then tweet something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed <= NUMBER_0 mph ; @com.twitter . post ( ) ;
turking/352534	null	tweet something about the current weather if the wind speed is under NUMBER_0 miles per hour .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed <= NUMBER_0 mph ; @com.twitter . post ( ) ;
turking/352536	null	show the current weather for some place if the wind speed is less than NUMBER_0 mph and then tweet something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.weather . current ( ) filter wind_speed <= NUMBER_0 mph ; @com.twitter . post ( ) ;
turking/352901	null	unfollow something on twitter when integer is greater than NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) filter random >= NUMBER_0 ; @com.twitter . unfollow ( ) ;
turking/352905	null	if the amount is higher than NUMBER_0 then do n't follow on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @org.thingpedia.builtin.thingengine.builtin . get_random_between ( ) filter random >= NUMBER_0 ; @com.twitter . unfollow ( ) ;
turking/372339	null	when you are searching twitter for HASHTAG_0 look for hashtags that have HASHTAG_1 and QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && contains ( hashtags , HASHTAG_1 ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372341	null	search twitter using the term HASHTAG_0 and if it also has hashtag HASHTAG_1 then say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && contains ( hashtags , HASHTAG_1 ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372347	null	look up HASHTAG_0 with HASHTAG_1 on twitter and put QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && contains ( hashtags , HASHTAG_1 ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/372348	null	find HASHTAG_0 with HASHTAG_1 on twitter , and say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter contains ( hashtags , HASHTAG_0 ) && contains ( hashtags , HASHTAG_1 ) ; @org.thingpedia.builtin.thingengine.builtin . say ( message = QUOTED_STRING_0 ) ;
turking/374070	null	if the search query on twitter is QUOTED_STRING_0 , turn my light bulb on	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/374071	null	turn my light on if QUOTED_STRING_0 is searched on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/374072	null	every time twitter query is QUOTED_STRING_0 allow light bulb to turn on	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/374073	null	search twitter for query QUOTED_STRING_0 before turning on light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . set_power ( power = enum on ) ;
turking/333560	null	search twitter with the query QUOTED_STRING_0 and flash alerts on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . alert_long ( ) ;
turking/333561	null	flash alerts on my light bulb when a twitter search query is QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . alert_long ( ) ;
turking/333562	null	search twitter for QUOTED_STRING_0 then set flash alerts on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . alert_long ( ) ;
turking/333563	null	search twitter with the query QUOTED_STRING_0 and flash alerts on my light bulb	$dialogue @org.thingpedia.dialogue.transaction . execute ; @com.twitter . tweet ( ) filter text =~ QUOTED_STRING_0 ; @org.thingpedia.iot.light-bulb . alert_long ( ) ;
turking/333897	null	follow someone on twitter if humidity changes on my thermostat	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/333898	null	follow on twitter if the humidity on my thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/334178	null	if speed is less than NUMBER_0 mph send dm on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed <= NUMBER_0 mph => @com.twitter . send_direct_message ( ) ;
turking/334179	null	if i move at less than NUMBER_0 mph , send a message through twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed <= NUMBER_0 mph => @com.twitter . send_direct_message ( ) ;
turking/334221	null	unfollow someone on twitter if i move at a speed greater than NUMBER_0 mph .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.twitter . unfollow ( ) ;
turking/334222	null	unfollow someone on twitter if i move and speed > NUMBER_0 mph .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.twitter . unfollow ( ) ;
turking/334223	null	unfollow someone on twitter if my speed is > NUMBER_0 mph	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.twitter . unfollow ( ) ;
turking/334629	null	follow USERNAME_0 on twitter if the humidity on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/334630	null	the thermostat humidity changes , follow USERNAME_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/334631	null	follow USERNAME_0 on twitter when thermostat reports humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/335945	null	if the humidity changes on my thermostat follow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/335946	null	follow someone on twitter every time my thermostat humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/335947	null	follow someone on twitter when my thermostat 's humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/336076	null	send a direct message on twitter if i move and the speed is less than NUMBER_0 mph	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed <= NUMBER_0 mph => @com.twitter . send_direct_message ( ) ;
turking/336077	null	send direct message on twitter when my speed is less than NUMBER_0 mph	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed <= NUMBER_0 mph => @com.twitter . send_direct_message ( ) ;
turking/336078	null	send dm on twitter if my moving speed is less than NUMBER_0 mph .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed <= NUMBER_0 mph => @com.twitter . send_direct_message ( ) ;
turking/336102	null	unfollow someone on twitter if my speed exceeds NUMBER_0 mph .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.twitter . unfollow ( ) ;
turking/336103	null	if i move at a speed greater than NUMBER_0 mph , unfollow someone on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 mph => @com.twitter . unfollow ( ) ;
turking/336272	null	follow USERNAME_0 on twitter is my humidity changes on my thermostat .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/336273	null	if my thermostat reports a humidity change follow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/351748	null	if the humidity reported by my thermostat changes , unfollow USERNAME_0 on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/351750	null	unfollow USERNAME_0 on twitter if the humidity changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/351752	null	unfollow USERNAME_0 on twitter if my thermostat reports a change in the humidity .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/351754	null	unfollow USERNAME_0 on twitter if the humidity reported on my thermostat changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( user_name = USERNAME_0 ) ;
turking/354834	null	when someone i follow tweets , turn up my speaker .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/354836	null	increase volume when someone i follow posts a tweet on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/355342	null	if something is posted on the rss feed , it 's followed on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . follow ( ) ;
turking/355351	null	if something is posted on my rss feed , follow it on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . follow ( ) ;
turking/355910	null	when it 's drizzling tweet QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum drizzling => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/355915	null	tweet QUOTED_STRING_0 when its drizzling .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum drizzling => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/355921	null	tweet QUOTED_STRING_0 when drizzling	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum drizzling => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/355949	null	if i move , follow a random person on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . follow ( ) ;
turking/355952	null	follow something on twitter if i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . follow ( ) ;
turking/355955	null	if i move , then follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . follow ( ) ;
turking/356220	null	follow twitter if humidity on thermostat changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/356226	null	follow something on twitter if the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . follow ( ) ;
turking/356347	null	when a QUOTED_STRING_0 post is on rss feed , make a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/356351	null	if something is posted on the rss feed titled QUOTED_STRING_0 , tweet something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/356355	null	if something is posted on the rss feed and the title is QUOTED_STRING_0 , then tweet something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) filter title == QUOTED_STRING_0 ) => @com.twitter . post ( ) ;
turking/356370	null	stop following someone on twitter when the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( ) ;
turking/356376	null	unfollow someone on twitter when humidity reported by thermostat is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( ) ;
turking/356378	null	unfollow something on twitter if the humidity changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . unfollow ( ) ;
turking/356434	null	when i drive faster than NUMBER_0 kph follow something on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 kmph => @com.twitter . follow ( ) ;
turking/356438	null	follow something on twitter when i move faster than NUMBER_0 kph	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter speed >= NUMBER_0 kmph => @com.twitter . follow ( ) ;
turking/357269	null	make a new tweet when it 's snowing out	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . post ( ) ;
turking/357279	null	if it 's snowy here send a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . post ( ) ;
turking/357284	null	when it 's snowy here , then tweet something .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . post ( ) ;
turking/357289	null	when it is snowing in a location post a tweet with information about the event	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . post ( ) ;
turking/357794	null	turn the volume up when someone i 'm following tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/357799	null	turn up my volume on new friends ' tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . raise_volume ( ) ;
turking/358031	null	send a direct message on twitter to someone of thermostat humidity is updated	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . send_direct_message ( ) ;
turking/358036	null	message humidity changes on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . send_direct_message ( ) ;
turking/358041	null	when mt thermostat humidity changes send a report on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . send_direct_message ( ) ;
turking/358046	null	when thermostat reports humidity change send direct message on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . send_direct_message ( ) ;
turking/358051	null	if the humidity reported by my thermostat changes , tweet a direct message to something saying as such .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . send_direct_message ( ) ;
turking/358342	null	set the volume to NUMBER_0 % if anyone i follow on twitter tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/358347	null	set my volume on my speaker to NUMBER_0 % when anyone i follow tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/372170	null	tweet the weather from weatherapi when it 's cloudy at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum cloudy => @com.twitter . post ( status = $result ) ;
turking/372171	null	if it is cloudy at home , tweet the weather from weatherapi .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum cloudy => @com.twitter . post ( status = $result ) ;
turking/372174	null	when the weather is cloudy send a tweet to weatherapi	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum cloudy => @com.twitter . post ( ) ;
turking/372176	null	send a tweet with the weather from weatherapi anytime it 's cloudy at my house	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum cloudy => @com.twitter . post ( status = $result ) ;
turking/372177	null	if the weather around my home is cloudy then i want a tweet sent from weatherapi	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum cloudy => @com.twitter . post ( status = $result ) ;
turking/373024	null	if something posts to the rss feed send a tweet with QUOTED_STRING_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/373230	null	send a direct message to USERNAME_0 on twitter saying QUOTED_STRING_0 if something is posted to the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/373233	null	if you see a post on the rss feed , dm USERNAME_0 on twitter with the message QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/373237	null	send a direct message on twitter to USERNAME_0 saying QUOTED_STRING_0 if there is a post on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/373239	null	when rss feed is updated with new post , send direct message via twitter to USERNAME_0 with the words QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.rss . get_post ( ) ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/373420	null	set my speaker 's volume to some value % if i get a direct twitter message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/373421	null	if i get a new direct message on twitter , turn my speaker 's volume to some value %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/373423	null	set my speaker to NUMBER_0 if i receive a dm on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/373425	null	set speaker volume to NUMBER_0 % for a dm tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/373426	null	if dm from twitter is received set speaker volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/373427	null	watch for a direct message on twitter and notify me by setting my volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/373428	null	set volume to % when a direct message from twitter is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.volume-control . set_volume ( ) ;
turking/1617687	null	when i get a tweet show me what the weather is in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1617690	null	when i get a tweet , show me the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1617692	null	display the weather in here whenever i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1617694	null	if i receive a tweet , tell me about the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1617698	null	if i receive a tweet show me the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1617700	null	display the weather in here when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1617918	null	if someone i 'm following tweets look up QUOTED_STRING_0 on bing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617919	null	bring up QUOTED_STRING_0 on bing when there 's a tweet by someone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617920	null	notify me QUOTED_STRING_0 on bing at the time when one i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1617921	null	when a person i follow posts a tweet notify me QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1618927	null	if the temperature drops below freezing , i 'd like to see tweets from anyone i follow in reply to USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1618929	null	give me tweets from those i follow in reply to USERNAME_0 when it is below freezing in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1618931	null	when the temperature is below freezing in here show me tweets from anyone i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1618932	null	whenever the temperature in here is below freezing show me the tweets from anyone that i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1618933	null	in reply to USERNAME_0 show tweets from anyone i follow when it is below freezing temperature in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1619445	null	send out a tweet if i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post ( ) ;
turking/1619446	null	tweet something if my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post ( ) ;
turking/1619447	null	when my location changes tweet something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post ( ) ;
turking/1619452	null	if i have a change of location , post a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post ( ) ;
turking/1619455	null	tweet something when my location has changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post ( ) ;
turking/1619459	null	as my location changes tweet something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post ( ) ;
turking/1619497	null	change my speaker volume to NUMBER_0 % any time someone i follow posts a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/1619498	null	anytime someone i am following tweets please set the volume on my speaker to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/1619499	null	if there 's a tweet from someone i 'm following set my speaker volume to NUMBER_0 %	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/1619500	null	put my speaker volume at NUMBER_0 % when someone i 'm following tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/1619505	null	set speaker volume to NUMBER_0 % when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . set_volume ( volume = NUMBER_0 ) ;
turking/1619563	null	check my location and post a pic to twitter with that info	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619564	null	find out my new current location and then post a picture on twitter saying that	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619565	null	upload a photo on twitter that reveals my new location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1619582	null	check for my new current location and then post a pic twitter saying that	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1620228	null	when i get a tweet show me QUOTED_STRING_0 on bing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620231	null	show me QUOTED_STRING_0 bing results when a tweet comes in	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620235	null	search for QUOTED_STRING_0 on bing every time i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620237	null	make a bing search for QUOTED_STRING_0 whenever i receive a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620239	null	look up QUOTED_STRING_0 on bing when i get a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620240	null	if USERNAME_0 tweets , show weather statistics	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1620241	null	should USERNAME_0 make a tweet , send me the weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1620243	null	when i get a tweet show me bing results for QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620245	null	when user USERNAME_0 tweets show me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1620248	null	when USERNAME_0 tweets show me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1620251	null	tell em what the weather is like if USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1620286	null	i would like to see the weather update whenever USERNAME_0 tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1620587	null	when a tweet is received by me let me know websites that match QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620588	null	if get a tweet show me sites about QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620589	null	show me websites matching QUOTED_STRING_0 whenever i receive a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620592	null	tell me websites matching QUOTED_STRING_0 when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1620593	null	tell me websites matching QUOTED_STRING_0 when i receive a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1621288	null	post a picture on my twitter saying them whenever i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621289	null	whenever i move post a picture on my twitter saying them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621290	null	tweet a photo saying them when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621295	null	put a picture on twitter saying them after i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621296	null	if my location changes post a photo to twitter that says them	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621326	null	post a picture that says them to twitter every time i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621461	null	bring me tweets from anyone i follow when it starts raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) ;
turking/1621465	null	when it starts raining in LOCATION_0 , send me tweets from anyone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) ;
turking/1621466	null	when it begins raining in LOCATION_0 get my tweets from those that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) ;
turking/1621472	null	deliver me tweets from anyone i follow when it starts raining in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) ;
turking/1621479	null	retrieve tweets from those that i follow when it starts to rain in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) ;
turking/1621480	null	show me tweets from anyone i follow when it starts raining in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) ;
turking/1621481	null	show tweets from anyone followed that are a reply to USERNAME_0 , when it rain in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1621483	null	when it rains in LOCATION_0 , show me tweets from people i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1621484	null	pull up tweets from people i follow that replied to USERNAME_0 whenever it begins to rain in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1621495	null	show me the tweets that are in reply to USERNAME_0 whenever it begins to rain in LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1621502	null	if i have left LOCATION_0 then please grab all the dm 's from twitter that i 've received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.twitter . direct_messages ( ) ;
turking/1621505	null	get direct messages i received from twitter if i leave LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.twitter . direct_messages ( ) ;
turking/1621506	null	show the direct messages i got on twitter when i leave LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.twitter . direct_messages ( ) ;
turking/1621507	null	when i leave LOCATION_0 give me the direct messages i have on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.twitter . direct_messages ( ) ;
turking/1621512	null	whenever i depart from LOCATION_0 fetch the dm 's i 've received on twitter , thanks !	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.twitter . direct_messages ( ) ;
turking/1621513	null	if i were to leave LOCATION_0 , tell me of any direct messages i got on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == LOCATION_0 ) => @com.twitter . direct_messages ( ) ;
turking/1621676	null	whenever someone i follow replies to USERNAME_0 on twitter tell me the room 's temperature	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1621678	null	if user USERNAME_0 gets a reply on twitter from anyone i follow please notify me of the temperature in the room .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1621680	null	let me know what the room 's temperature is whenever somebody that i follow replies to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1621684	null	i want to know the room temperature any time USERNAME_0 gets twitter reply from someone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1621688	null	if someone i 'm following replies to USERNAME_0 on twitter , tell what the room temperature is .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.iot.temperature . temperature ( ) ;
turking/1621819	null	post on twitter a picture about the new thermostat humidity	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621820	null	report newest humidity by thermostat by auto posting a twitter picture	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621821	null	get the latest humidity report from the thermostat and automatically post it in a photo on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621823	null	take the newly-reported humidity from my thermostat and post it as a pic on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621827	null	automatically grab the latest humidity reported by my thermostat and post a picture saying it on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621833	null	put a pic on twitter showing the humidity that my thermostat just reported .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1621850	null	i want to see my current location when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621851	null	if a tweet is received , please get my location at the moment	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621852	null	provide my current location when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621853	null	display my current location when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1621854	null	if i receive a new tweet then show my location i 'm at now	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1623033	null	when the temperature in LOCATION_0 is below freezing then give me tweets about HASHTAG_0 from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623034	null	give me tweets about HASHTAG_0 from people i follow whenever the temperature in LOCATION_0 is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623036	null	show me tweets about HASHTAG_0 from people i follow if the temperature in LOCATION_0 is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623037	null	when the temperature in LOCATION_0 goes below freezing show me tweets from people i follow about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623038	null	when the temperature in LOCATION_0 is below freezing , show me tweets about HASHTAG_0 from people i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623054	null	show me HASHTAG_0 tweets from people i follow when the temperature in LOCATION_0 is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623190	null	if it stops snowing in LOCATION_0 , show me tweets from people with HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623191	null	show me HASHTAG_0 tweets from people i follow when the snow in LOCATION_0 stops .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623195	null	get me some HASHTAG_0 tweets by people i follow when it 's no longer snowing at LOCATION_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623196	null	as soon as it 's no longer snowing at LOCATION_0 pull up some HASHTAG_0 tweets from people i 'm following .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623203	null	when snow in LOCATION_0 ceases , get me HASHTAG_0 tweets from my followers .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623206	null	i want to see tweets from people i follow using hashtag HASHTAG_0 whenever it stops snowing in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = LOCATION_0 ) ) filter ! ( status == enum snowy ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1623388	null	if my location changes , send a dm about the changes to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . send_direct_message ( message = $result , to = USERNAME_0 ) ;
turking/1623389	null	tell USERNAME_0 my new location via twitter whenever it changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . send_direct_message ( message = $result , to = USERNAME_0 ) ;
turking/1623391	null	dm USERNAME_0 on twitter with any of my location changes when they happen	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . send_direct_message ( message = $result , to = USERNAME_0 ) ;
turking/1623392	null	if i go somewhere else , let USERNAME_0 know my new location on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . send_direct_message ( message = $result , to = USERNAME_0 ) ;
turking/1623830	null	when a person i follow makes a tweet make it so my speaker goes softer	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1623831	null	make my speaker softer whenever a tweet is posted from someone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1623833	null	lower my speaker volume when somebody i 'm following tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1623835	null	my speaker needs to be at low volume when someone i 'm following tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1623838	null	put my speaker softer when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1623841	null	if somebody i 'm following tweets lower my speaker volume a bit .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control . lower_volume ( ) ;
turking/1624585	null	get the weather in home if somebody i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1624586	null	when someone i follow tweets retrieve the weather in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1624588	null	if someone i follow on twitter tweets , shoe me my hometown weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1624589	null	tell me the weather at home when anyone i am following tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1624592	null	i want to see the weather over at home when someone i follow on twitter tweets .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1624618	null	check the weather at home when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . home ) ;
turking/1624804	null	tell me the date if i receive a tweet from USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624806	null	show the current date whenever USERNAME_0 messages me on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624808	null	if USERNAME_0 tweets me tell me the date	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624809	null	advise the current date if USERNAME_0 tweets me a message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624813	null	when i receive tweets from USERNAME_0 , tell me the current date .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1624815	null	anytime USERNAME_0 sends me a tweet tell me what date it is	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.builtin.thingengine.builtin . get_date ( ) ;
turking/1625228	null	when somebody dms me get the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1625230	null	retrieve the weather in LOCATION_0 when somebody dms me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1625231	null	i want to know the weather in LOCATION_0 when i get a direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1625232	null	if somebody sends me a direct message , fetch the LOCATION_0 weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1625233	null	when i get a direct message find the weather in LOCATION_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1625244	null	locate weather in LOCATION_0 when i get a direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.weather . current ( location = LOCATION_0 ) ;
turking/1625933	null	if it goes below freezing at home , dm USERNAME_0 a message stating QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/1625937	null	send a dm to USERNAME_0 on twitter that says QUOTED_STRING_0 when the temperature at home is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/1625939	null	dm USERNAME_0 on twitter with QUOTED_STRING_0 anytime the temperature goes below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/1625940	null	dm USERNAME_0 on twitter saying QUOTED_STRING_0 if the temperature in home is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/1625941	null	when the temperature in home is below freezing send a dm to USERNAME_0 on twitter which says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/1625944	null	send USERNAME_0 a dm saying this if the temperature in home is below freezing : QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . send_direct_message ( message = QUOTED_STRING_0 , to = USERNAME_0 ) ;
turking/1626471	null	when the humidity in the room goes below NUMBER_0 , give me tweets from anyone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.twitter . home_timeline ( ) ;
turking/1626477	null	whenever the humidity in the room drops below NUMBER_0 give me tweets from the people i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.twitter . home_timeline ( ) ;
turking/1626478	null	when the room humidity is below NUMBER_0 , show me the tweets from everyone i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.twitter . home_timeline ( ) ;
turking/1626480	null	i need to see tweets from people that i follow when the room humidity dips below NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.twitter . home_timeline ( ) ;
turking/1626481	null	if the humidity goes down to under NUMBER_0 , i 'd like to see tweets from people i follow .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.twitter . home_timeline ( ) ;
turking/1626487	null	show me tweets from anyone i follow when the humidity in the room goes below NUMBER_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.iot.humidity . humidity ( ) ) filter value <= NUMBER_0 => @com.twitter . home_timeline ( ) ;
turking/1626965	null	when the rain starts , get tweets from people i follow that say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1626966	null	when it rains here , i want any tweets that say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1626972	null	when the rain starts here for anyone i follow retrieve tweets containing QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1626974	null	get tweets from all i follow containing QUOTED_STRING_0 when it starts raining here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1626975	null	if it starts raining here , get tweets from people i am following that say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1626977	null	when it starts to rain , show me the tweets that say QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . home_timeline ( ) filter text =~ QUOTED_STRING_0 ;
turking/1628435	null	alert twitter with a pic indicating my new current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1628436	null	submit a post with picture on twitter saying my new current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1628438	null	share new current location with a pic on twitter automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1628440	null	show a picture on twitter that automatically talks about my latest current location .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1628448	null	author a post with picture on twitter saying my new current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1629401	null	post a picture on twitter saying QUOTED_STRING_0 when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629402	null	when i move around , post a picture on twitter saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629403	null	post a photo on twitter containing QUOTED_STRING_0 when i 'm moving	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629404	null	when i am in motion post a twitter pic saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629407	null	using the phrase QUOTED_STRING_0 post a picture on twitter when i move	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629408	null	once i move post a twitter picture with the line QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 ) ;
turking/1629442	null	when someone i follow tweets , get latest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1629444	null	obtain latest posts on an rss feed when someone i follow tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1629447	null	show all the latest posts via an rss feed any time someone i follow posts a new tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1629449	null	whenever someone that i follow tweets please display the latest posts on an rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1629453	null	get me latest posts on the rss feed when a tweet is posted from one i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1629456	null	grab me the most current tweets from those i follow on the rss feed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.rss . get_post ( ) ;
turking/1629590	null	when the snow starts in here show me tweets from people i follow when replying to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1629591	null	from everyone i follow in reply to USERNAME_0 give me their tweets when it starts to snow here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1629599	null	when the snow starts here show me tweets in reply to USERNAME_0 from anyone that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum snowy => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1629642	null	if the rain begins in home , please post a tweet stating QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1629643	null	make a post on twitter that says QUOTED_STRING_0 when it rains at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1629647	null	when it starts raining at home post a tweet to twitter that says QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1629649	null	whenever it starts raining at home please post on twitter saying QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1629652	null	you should post on twitter stating QUOTED_STRING_0 if you see it start raining in home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1629659	null	make a post to twitter titled QUOTED_STRING_0 when it starts raining in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum raining => @com.twitter . post ( status = QUOTED_STRING_0 ) ;
turking/1629804	null	notify me of tweets from people i follow labeled HASHTAG_0 when it stops raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1629808	null	read me tweets from those i follow using HASHTAG_0 when it stops raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1629809	null	tell me tweets about HASHTAG_0 from people i follow when it stops raining in home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1629810	null	retrieve me tweets from people i follow when it stops raining in home about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1629814	null	show tweets of people i follow with the hashtag HASHTAG_0 when it is no longer raining at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1629818	null	when it is no longer raining at home , read me the posts from who i follow about HASHTAG_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter ! ( status == enum raining ) => @com.twitter . home_timeline ( ) filter contains ( hashtags , HASHTAG_0 ) ;
turking/1630958	null	with caption the new weather auto tweet a pic	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1630959	null	when i move can you find an xkcd comic at random	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.xkcd . random_comic ( ) ;
turking/1630960	null	tweet a photo captioned with latest weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1630962	null	automatically tweet a picture with caption the new weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1630963	null	please tweet a picture and caption it the new weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1630977	null	can you tweet a picture with the caption the new weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1631200	null	inform me about tweets from anybody that i follow replying to USERNAME_0 when the temperature in my house is below freezing	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631202	null	let me know tweets received from anyone i follow that replies to USERNAME_0 when the temperature in home is under the freezing point	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631204	null	if the temperature is under freezing , show me tweets of people i follow that reply to USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631205	null	if it 's below freezing in the house then show me followed user tweets replying to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631206	null	i need to know the tweets of people i follow that are replies to USERNAME_0 whenever the temperature is under freezing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) filter temperature <= 0 C ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631337	null	if somebody i follow tweets , then update me with the weather in here	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631339	null	when someone i follow tweets you are to show me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631340	null	update me with the weather in here whenever somebody that i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( ) ;
turking/1631399	null	if i change location tell me any tweets of replies to USERNAME_0 from anyone i am following	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631400	null	pull up tweets from anybody i follow that replied to USERNAME_0 when i move .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631401	null	as soon as i move fetch tweets from anybody i 'm currently following that reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631407	null	when i move , if there are tweets in reply to USERNAME_0 from anyone that i follow let me know .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1631555	null	when someone i follow replies to user USERNAME_0 on twitter show me the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1631556	null	if someone that i follow on twitter sends a reply to user USERNAME_0 let me see what the weather looks like .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1631557	null	whenever a person that i follow sends a reply to the twitter user USERNAME_0 , let me see the weather .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1631559	null	inform me of the weather when someone i follow replies to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1631561	null	announce the weather when anyone i follow replies to USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1631574	null	if someone i follow replies to USERNAME_0 on twitter , i want to see the weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ) => @org.thingpedia.weather . current ( ) ;
turking/1632065	null	follow USERNAME_0 when it starts snowing here at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1632068	null	when it starts snowing at home , make sure i am following USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1632070	null	when it snows at my home follow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1632073	null	follow user USERNAME_0 on twitter if it starts snowing at home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1632074	null	follow USERNAME_0 on twitter whenever it starts snowing at home .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1632076	null	as soon as it begins snowing at my home go on twitter and follow USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( location = $location . home ) ) filter status == enum snowy => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1632151	null	anytime there is a tweet from a person i follow , pull up sites for the term QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632152	null	if somebody i follow tweets retrieve websites matching QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632155	null	search QUOTED_STRING_0 for websites if a person i follow sends out a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632156	null	get websites matching QUOTED_STRING_0 when someone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632157	null	find any mention of websites with the term QUOTED_STRING_0 in tweets that i follow and retrieve them .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1632199	null	send me tweets from people i follow every time my location changes .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1632202	null	notify me of all the tweets from people i 'm following when my location has been changed	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1632203	null	if my location changes , show me tweets from people i am following	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1632205	null	any time my location changes send me tweets from those i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1632206	null	retrieve tweets from people i am following if i change location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . home_timeline ( ) ;
turking/1632212	null	roll a dice and get a number between NUMBER_0 and NUMBER_1 when there is a tweet from someone that i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1632213	null	toss a dice between NUMBER_0 and NUMBER_1 when someone i follow posts a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1632218	null	if someone that i follow sends out a tweet then return a number between NUMBER_0 and NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1632222	null	roll the dice between the values of NUMBER_0 and NUMBER_1 when a tweet shows up from someone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1632227	null	when a user i follow on twitter sends out a tweet throw dice between NUMBER_0 and NUMBER_1	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_random_between ( high = NUMBER_1 , low = NUMBER_0 ) ;
turking/1632629	null	automatically post a picture on twitter saying the changed weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1632632	null	automatically post a picture on twitter saying the new weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1632633	null	post a new picture on twitter with the new weather	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1632635	null	post a twitter picture stating the new weather automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1632641	null	post a picture on twitter saying the new weather automatically	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1632675	null	whenever someone dms me give me my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632678	null	when i receive a dm please show my current location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632680	null	show me where i currently am when i get a dm	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632683	null	obtain my present location any time i get a direct message	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632684	null	tell me my present location if i ever have a dm from someone	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632685	null	state my current location whenever someone sends me a dm	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . direct_messages ( ) ) => @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ;
turking/1632888	null	show the weather icon over on twitter with a caption labeled QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1632892	null	post QUOTED_STRING_0 on twitter along with the weather icon for my location	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1632893	null	post the new weather icon on twitter and caption it QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1632899	null	upload the new weather icon on twitter with the caption QUOTED_STRING_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1632900	null	please without my asking post the new weather icon on twitter with the words QUOTED_STRING_0 in the caption	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1632903	null	post the caption QUOTED_STRING_0 in the caption on twitter along with the new weather icon for me .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1633526	null	retrieve bing QUOTED_STRING_0 once i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633527	null	retrieve bing QUOTED_STRING_0 when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633529	null	retrieve bing QUOTED_STRING_0 when i receive a tweet on this	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633530	null	fetch QUOTED_STRING_0 on bing if i get a tweet .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633532	null	get results bing QUOTED_STRING_0 when a tween is received	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633534	null	if get a tweet pull up QUOTED_STRING_0 on bing .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @com.bing . web_search ( query = QUOTED_STRING_0 ) ;
turking/1633714	null	should it start to rain in my location , grab my direct messages off twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . direct_messages ( ) ;
turking/1633715	null	show me my direct twitter messages whenever it starts raining here .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . direct_messages ( ) ;
turking/1633716	null	display my direct messages on twitter when it starts raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . direct_messages ( ) ;
turking/1633717	null	whenever it starts raining please show me my direct messages from twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . direct_messages ( ) ;
turking/1633718	null	give me my twitter direct messages when it starts raining	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) filter status == enum raining => @com.twitter . direct_messages ( ) ;
turking/1633871	null	let me know the sunrise and sunset for location LOCATION_0 on date this week when user USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . sunrise ( date = $start_of ( week ) , location = LOCATION_0 ) ;
turking/1633876	null	when user USERNAME_0 tweets tell me for LOCATION_0 the sunrise and sunset on date this week	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . sunrise ( date = $start_of ( week ) , location = LOCATION_0 ) ;
turking/1633877	null	tell me sunrise and sunset for location LOCATION_0 on date this week if user USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . sunrise ( date = $start_of ( week ) , location = LOCATION_0 ) ;
turking/1633878	null	when i move away from home follow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1633880	null	tell me sunrise and the sunset for LOCATION_0 this week when user USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . sunrise ( date = $start_of ( week ) , location = LOCATION_0 ) ;
turking/1633881	null	on date this week tell me the sunrise and sunset for the LOCATION_0 location when user USERNAME_0 tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . sunrise ( date = $start_of ( week ) , location = LOCATION_0 ) ;
turking/1633882	null	when i leave home follow USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1633883	null	on twitter become a follower of USERNAME_0 when i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1633885	null	if i move away from home , make a follower of USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1633886	null	when i move away from my house become a follower of USERNAME_0 on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1633887	null	become a follower of USERNAME_0 on twitter if i move away from home	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . home ) => @com.twitter . follow ( user_name = USERNAME_0 ) ;
turking/1633907	null	when user USERNAME_0 tweets alert me sunrise and sun put for location LOCATION_0 on date this week	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) filter author == USERNAME_0 ) => @org.thingpedia.weather . sunrise ( date = $start_of ( week ) , location = LOCATION_0 ) ;
turking/1634035	null	make the icon of the weather as QUOTED_STRING_0 and post that on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1634036	null	caption the new weather icon as QUOTED_STRING_0 and post it up on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.weather . current ( ) ) => @com.twitter . post_picture ( caption = QUOTED_STRING_0 , picture_url = icon ) ;
turking/1634037	null	post a pic on twitter saying it when my location changes	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634038	null	when my location is changed post a picture on twitter that says it	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634039	null	if my location changes send a picture via twitter stating that exactly that .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634040	null	post a picture on twitter saying that my location has changed whenever it happens	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634041	null	i want a picture notifying others of my location change on twitter .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634044	null	raise the volume on my bluetooth speaker when i have a tweet incoming	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1634045	null	when there is a change in my location post a picture saying it on twitter	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) => @com.twitter . post_picture ( caption = $result ) ;
turking/1634053	null	when i get a tweet turn the volume up on my bluetooth speaker	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1634058	null	on my bluetooth speaker increase the volume when i receive a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1634067	null	raise my bluetooth speaker volume when i get a tweet	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1634077	null	when i get tweeted make the volume on my bluetooth speaker louder	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.volume-control ( name = " bluetooth " ) . raise_volume ( ) ;
turking/1634121	null	give the weather at my work every time anyone i follow tweets	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1634122	null	when someone i follow sends a tweet get the weather at work for me	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1634123	null	if someone that i follow sends out a tweet then tell me what the weather is at work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1634125	null	bring up the weather at work when someone that i follow ends up tweeting	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1634127	null	show me the weather in work whenever someone i follow tweets something	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1634130	null	when someone i follow posts a tweet tell me the weather where i work	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @com.twitter . home_timeline ( ) ) => @org.thingpedia.weather . current ( location = $location . work ) ;
turking/1634431	null	in a reply to USERNAME_0 when i leave work tell me tweets from anyone i follow	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1634433	null	when i 'm leaving work , show me tweets people i am following that are in reply to USERNAME_0 .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1634434	null	when i leave work notify me of tweets from anyone i follow in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1634438	null	look for tweets for people i am following that are replies to USERNAME_0 and show me them when i get out of work .	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
turking/1634441	null	when i leave work tell me tweets i follow from anyone in reply to USERNAME_0	$dialogue @org.thingpedia.dialogue.transaction . execute ; monitor ( @org.thingpedia.builtin.thingengine.builtin . get_gps ( ) ) filter ! ( location == $location . work ) => @com.twitter . home_timeline ( ) filter in_reply_to == USERNAME_0 ;
