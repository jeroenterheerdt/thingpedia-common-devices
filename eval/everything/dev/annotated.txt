====
# log/18538
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/21354
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/124578
U: hi almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/136776
U: thank you
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/139232
U: hola
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/136440
U: hello!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/134781
U: ciao
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/17951
U: thx
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/120219
U: hello almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/51709
U: hello there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/100979
U: good morning
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/678
U: hello almond!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/12442
U: hi@there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/103116
U: nevermind
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/108529
U: thank you :-)
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/55548
U: hellow
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/17693
U: hey almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/60901
U: hello hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/134904
U: ehy ada
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/88521
U: hii
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/7715
U: hi!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/6784
U: hello?
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/6217
U: thanks!
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/44467
U: howdy
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/1403
U: helo
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/20861
U: cancel.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/50614
U: hey!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/200
U: hello.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/52911
U: quit
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/69927
U: can you hear me?
UT: $dialogue @org.thingpedia.dialogue.transaction.hello;
====
# log/10883
U: can you hear me
UT: $dialogue @org.thingpedia.dialogue.transaction.hello;
====
# log/9808
U: exit
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7265
U: hi.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/07ff12322b2e50b19883b77d0484e5ce
U: yo
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/95f495c777495528f934a4151ffbfcaf
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello, how can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello! What can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/4aef4e1190ceb0c4294272b2bbae4da9
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/8c0a0508a23c5fa801173da61b494e24
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/7844
U: thank you.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7809
U: no thanks
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7808
U: never mind then.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7686
U: bye.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7464
U: well, bye.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0a39bc3326851c0dc124dfc99d1a313d
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hi! What can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hi, how can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello, what can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/70f9e38f567391dc05ef31a41047f726
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/158401
U: hello almon
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/e73806f00406cd54c8d2e081d52e4372
U: what is the sunset time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.sunrise();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.sunrise(location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { location=new Location(37.4863239, -122.232523, "Redwood City, California"), date=new Date("2021-02-25T23:22:49.456Z"), sunrise_time=new Time(14, 44, 55), sunset_time=new Time(1, 58, 7), sunrisen=true, sunset=true }
C: ]];
A: In Redwood City, California, the sun rises at 6:44:55 AM and sets at 5:58:07 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: shuffle songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_shuffle(shuffle=enum on);
====
# recording/75a86ccce499476e1fd9b0898ec06e5f
U: get a random number greater than 7
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
A: 8.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
A: 11.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: again
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
A: 8.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: get a random number greater than 100
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
A: 164.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
A: 118.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
A: 156.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=163, low=100 }
C: ]];
A: 163.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=163, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=147, low=100 }
C: ]];
A: 147.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather in neverland
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("neverland"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=163, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=147, low=100 }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(36.5483056, -121.9197466, "Neverland"))
C: #[results=[
C:   { temperature=12.5C, wind_speed=1.3mps, humidity=58.2, cloudiness=59.4, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(36.5483056, -121.9197466, "Neverland") }
C: ]];
A: The current weather in Neverland is cloudy. The temperature is 54.5 F and the humidity is 58.2 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather in xjehfmhhejdndne
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("xjehfmhhejdndne"));
====
# recording/69055b1c35eb9a033f2df5501a4c553a
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="0oO71TSv4Ed"^^com.icanhazdadjoke:id, text="Why was it called the dark ages? Because of all the knights. " }
C: ]];
A: Why was it called the dark ages? Because of all the knights.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() => @org.thingpedia.media-player.play(playable=id);
====
# recording/e4c994091786a99c7d25936175d3b0b7
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="4EBsPZvP7h"^^com.icanhazdadjoke:id, text="Some people eat light bulbs. They say it's a nice light snack." }
C: ]];
A: Some people eat light bulbs. They say it's a nice light snack.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/1be8b61f4de01ff843227f6600b9fe09
U: Find me a top chinese restaurant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("chinese")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [genres] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "queen"
C: #[results=[
C:   { id="spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^org.thingpedia.media-source:artist("Queen"), genres=["classic rock", "glam rock", "rock"] },
C:   { id="spotify:artist:4pejUc4iciQfgdX6OKulQn"^^org.thingpedia.media-source:artist("Queens of the Stone Age"), genres=["alternative metal", "alternative rock", "blues rock", "modern rock", "nu metal", "palm desert scene", "rock", "stoner metal", "stoner rock"] },
C:   { id="spotify:artist:3nViOFa3kZW8OMSNOzwr98"^^org.thingpedia.media-source:artist("Queen Naija"), genres=["dance pop", "pop", "pop r&b", "r&b", "urban contemporary"] },
C:   { id="spotify:artist:6p2442ymrT9lZEuCZJdYcH"^^org.thingpedia.media-source:artist("Ivy Queen"), genres=["latin", "latin hip hop", "rap latina", "reggaeton", "trap latino", "tropical"] },
C:   { id="spotify:artist:0VbIlorLz3I5SEtIsc5vAr"^^org.thingpedia.media-source:artist("Queen Pen"), genres=["hip pop", "lgbtq+ hip hop"] }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
A: The top rated restaurants is Veggie Garden. It is a moderate restaurants near 2464 W El Camino Real, Ste C, Mountain View, CA 94040.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: A good chinese restaurant in palo alto please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("chinese")) && geo == new Location("palo alto"))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [genres] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "queen"
C: #[results=[
C:   { id="spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^org.thingpedia.media-source:artist("Queen"), genres=["classic rock", "glam rock", "rock"] },
C:   { id="spotify:artist:4pejUc4iciQfgdX6OKulQn"^^org.thingpedia.media-source:artist("Queens of the Stone Age"), genres=["alternative metal", "alternative rock", "blues rock", "modern rock", "nu metal", "palm desert scene", "rock", "stoner metal", "stoner rock"] },
C:   { id="spotify:artist:3nViOFa3kZW8OMSNOzwr98"^^org.thingpedia.media-source:artist("Queen Naija"), genres=["dance pop", "pop", "pop r&b", "r&b", "urban contemporary"] },
C:   { id="spotify:artist:6p2442ymrT9lZEuCZJdYcH"^^org.thingpedia.media-source:artist("Ivy Queen"), genres=["latin", "latin hip hop", "rap latina", "reggaeton", "trap latino", "tropical"] },
C:   { id="spotify:artist:0VbIlorLz3I5SEtIsc5vAr"^^org.thingpedia.media-source:artist("Queen Pen"), genres=["hip pop", "lgbtq+ hip hop"] }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")) && geo == new Location(37.4443293, -122.1598465, "Palo Alto, California"))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
A: The top rated restaurants is Veggie Garden. It is a moderate restaurants near 2464 W El Camino Real, Ste C, Mountain View, CA 94040.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: What is the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [genres] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "queen"
C: #[results=[
C:   { id="spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^org.thingpedia.media-source:artist("Queen"), genres=["classic rock", "glam rock", "rock"] },
C:   { id="spotify:artist:4pejUc4iciQfgdX6OKulQn"^^org.thingpedia.media-source:artist("Queens of the Stone Age"), genres=["alternative metal", "alternative rock", "blues rock", "modern rock", "nu metal", "palm desert scene", "rock", "stoner metal", "stoner rock"] },
C:   { id="spotify:artist:3nViOFa3kZW8OMSNOzwr98"^^org.thingpedia.media-source:artist("Queen Naija"), genres=["dance pop", "pop", "pop r&b", "r&b", "urban contemporary"] },
C:   { id="spotify:artist:6p2442ymrT9lZEuCZJdYcH"^^org.thingpedia.media-source:artist("Ivy Queen"), genres=["latin", "latin hip hop", "rap latina", "reggaeton", "trap latino", "tropical"] },
C:   { id="spotify:artist:0VbIlorLz3I5SEtIsc5vAr"^^org.thingpedia.media-source:artist("Queen Pen"), genres=["hip pop", "lgbtq+ hip hop"] }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")) && geo == new Location(37.4443293, -122.1598465, "Palo Alto, California"))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { temperature=16.9C, wind_speed=4.3mps, humidity=43.3, cloudiness=99.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4519671, -122.1779927, "Menlo Park") }
C: ]];
A: The current weather in Menlo Park is cloudy. The temperature is 62.4 F and the humidity is 43.3 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: What is the humidity?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [humidity] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"));
====
# recording/db9d8bd7d3217a7100457981df813239
U: What is the temperature here?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [temperature] of @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { location=new Location(37.4519671, -122.1779927, "Menlo Park"), temperature=16.9C, status=enum cloudy }
C: ]];
A: The current weather in Menlo Park is cloudy. The temperature is 62.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { location=new Location(37.4519671, -122.1779927, "Menlo Park"), temperature=16.9C, status=enum cloudy }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="1TfNRKexAd"^^com.icanhazdadjoke:id, text="I’m only familiar with 25 letters in the English language. I don’t know why." }
C: ]];
A: I’m only familiar with 25 letters in the English language. I don’t know why.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Why are you so dumb?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum abusive);
====
# recording/5b542078158696e20e322562fb01dabb
U: play me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: What is the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/70109bf16f0c53e26d3f0256edc194ec
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="jbpbFlORCAd"^^com.icanhazdadjoke:id, text="People who don't eat gluten are really going against the grain." }
C: ]];
A: People who don't eat gluten are really going against the grain.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: roll a die
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="jbpbFlORCAd"^^com.icanhazdadjoke:id, text="People who don't eat gluten are really going against the grain." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=1 }
C: ]];
A: 1.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: roll a die
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="jbpbFlORCAd"^^com.icanhazdadjoke:id, text="People who don't eat gluten are really going against the grain." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=1 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=3 }
C: ]];
A: 3.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: roll a 20-sided die
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(high=20, low=1);
====
# recording/19b8d13a23edacdf7603c1bef2ed0925
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=10.9C, wind_speed=3.6mps, humidity=93.5, cloudiness=82.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
A: Where are you now?
A: The current weather in Stanford, Palo Alto is cloudy. The temperature is 51.6 F and the humidity is 93.5 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=10.9C, wind_speed=3.6mps, humidity=93.5, cloudiness=82.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="mO7hqWvsPCd"^^com.icanhazdadjoke:id, text="My wife is on a tropical fruit diet, the house is full of stuff. It is enough to make a mango crazy." }
C: ]];
A: My wife is on a tropical fruit diet, the house is full of stuff. It is enough to make a mango crazy.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what time is it ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
====
# recording/597d016c3fb903c31fda238659d04da0
U: Almond tell me another joke.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="JmjbxkGJBAd"^^com.icanhazdadjoke:id, text="Egyptians claimed to invent the guitar, but they were such lyres.﻿" }
C: ]];
A: Egyptians claimed to invent the guitar, but they were such lyres.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: You're funny.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_thanks);
====
# recording/2a9aa342a1f370a294b3e82403c6eb56
U: what is the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
A: It is cloudy today in Cantor Arts Center and the temperature is 57.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is the weather like at Stanford?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("stanford"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=14C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
A: It is cloudy today in Stanford, Palo Alto and the temperature is 57.2 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=14C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
A: It is cloudy today in Cantor Arts Center and the temperature is 57.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: where am I?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
====
# recording/2c5536a9e15cdfb95872d2c79c6ef060
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="2118E69prc"^^com.icanhazdadjoke:id, text="Dad I’m hungry’ ... ‘Hi hungry I’m dad" }
C: ]];
A: Dad I’m hungry’ ... ‘Hi hungry I’m dad.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what else can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
====
# online/121537
U: if the temperature is less than 13 c then set volume on my speaker to 14 %
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13C => @org.thingpedia.volume-control.set_volume(volume=14);
====
# online/121538
U: if the thermostat says less than 13 c then set volume on my speaker to 14 %
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13C => @org.thingpedia.volume-control.set_volume(volume=14);
====
# online/363766
U: say "str:QUOTED_STRING::0:" when it rains
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @org.thingpedia.builtin.thingengine.builtin.say(message="str:QUOTED_STRING::0:");
====
# online/1647275
U: show me a joke when i go to work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.work => @com.icanhazdadjoke.get();
====
# online/1647277
U: show me a joke when i get to work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.work => @com.icanhazdadjoke.get();
====
# online/1647279
U: show me a joke when i leave work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.work) => @com.icanhazdadjoke.get();
====
# online/55592326
U: notify me if the door opens and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592329
U: notify me when the door closes and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum closed;
====
# online/55592332
U: notify me when someone opens the door while i am away from home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592603
U: notify me if my door opens and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592604
U: notify me if my door is open and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592605
U: notify me when my door gets opened and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592606
U: notify me when somebody opens my door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592607
U: notify me when somebody opens the door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592608
U: update me when somebody opens the door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592609
U: alert me when somebody opens the door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592611
U: alert me when the door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592612
U: alert me when my door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592614
U: tell me when my door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592616
U: alert me when my door is opened and i am out of home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592617
U: update me when my door is opened and i am out of home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592618
U: update me when my door is opened and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592619
U: update me when the door is opened and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592620
U: tell me when the door is opened and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592621
U: tell me when somebody opens my door and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592622
U: tell me when somebody opens the door and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592684
U: if i am not at home and the door is open, notify me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592685
U: if i am not at home and my door is open, notify me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592687
U: if i am not at home and my door is closed, alert me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum closed;
====
# online/55592688
U: if i am not at home and the door is closed, alert me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum closed;
====
# online/55592689
U: if i am not at home and the door is closed, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592692
U: if i am not at home and the door is closed by someone, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592693
U: if i am not at home and someone opens the door, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592694
U: if i am not at home and someone opened the door, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592695
U: if i am not at home and someone open the door, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592696
U: tell me if i am not at home and someone open the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592698
U: tell me if i am not at home and someone opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592699
U: alert me if i am not at home and someone opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592701
U: update me if i am not at home and someone opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592704
U: tell me if i am not at home and somebody opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592705
U: tell me once i am not at home and somebody opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592707
U: tell me once i am not at home and somebody opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592708
U: tell me the moment i am not at home and somebody opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592709
U: tell me the moment i am not at home and somebody opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# log/53942
U: turn off the lights when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.light-bulb.set_power(power=enum off);
====
# log/54896
U: once motion is detected, turn on the light
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion.motion()) filter state == enum detecting => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# log/54905
U: if motion is not detected, turn off my toilet light
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion.motion()) filter state == enum not_detecting => @org.thingpedia.iot.light-bulb(name="toilet").set_power(power=enum off);
====
# log/90884
U: the next time i come home, turn the light in wohnzimmer on
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.home => @org.thingpedia.iot.light-bulb(name="wohnzimmer").set_power(power=enum on);
====
# log/158214
U: turn on outside lights when garage door is opening
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door(name="garage").state()) filter state == enum open => @org.thingpedia.iot.light-bulb(name="outside").set_power(power=enum on);
====
# recording/2ed881f9c22759d0a93ba16835976a70
U: What is the news of the day?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4255797450717009709"^^com.smartnews:article, title="Former U.S. gymnastics coach with ties to disgraced doctor Larry Nassar charged with sexual assault, human trafficking", date=new Date("2021-02-25T18:30:34.000Z"), source="Associated Press", url="https://apnews.com/article/john-geddert-charged-sexual-assault-147800b76ba2f86f1314e85326dfd197" },
C:   { id="4255777180182646383"^^com.smartnews:article, title="Costco raising minimum wage to $16 an hour", date=new Date("2021-02-25T16:54:41.000Z"), source="The Hill", author="Zack Budryk", url="https://thehill.com/policy/finance/540503-costco-raising-minimum-wage-to-16-an-hour" },
C:   { id="4254753650544481010"^^com.smartnews:article, title="If You Have This Snack at Home, Get Rid of it Now, FDA Says", date=new Date("2021-02-22T20:56:22.000Z"), source="Best Life", author="Sarah Crow", url="https://bestlifeonline.com/pretzel-recall-news/" },
C:   { id="4255772202021948245"^^com.smartnews:article, title="Trump's Prediction About Tiger Woods Is Turning Some Heads", date=new Date("2021-02-25T16:39:00.000Z"), source="Nicki Swift", author="J.E. Reich", url="https://www.nickiswift.com/341910/trumps-prediction-about-tiger-woods-is-turning-some-heads/?zsource=smartnews" },
C:   { id="4255768684687001881"^^com.smartnews:article, title="'No, I don't understand': Costco CEO stuns Lindsey Graham during disagreement over minimum wage increase", date=new Date("2021-02-25T16:24:27.000Z"), source="Raw Story", author="David Edwards", url="https://www.rawstory.com/lindsey-graham-minimum-wage/" },
C:   { id="4255784473846621509"^^com.smartnews:article, title="‘Kind and Generous’ Pizzeria Owner, 56, Brutally Beaten By Thieves in Pennsylvania", date=new Date("2021-02-25T16:53:17.000Z"), source="NextShark", author="Ryan General", url="https://nextshark.com/norristown-56-year-old-female-pizzeria-owner/" },
C:   { id="4255727817972517854"^^com.smartnews:article, title="Horror as Oprah Winfrey asks Mary-Kate and Ashley Olsen about their size in resurfaced interview", date=new Date("2021-02-25T13:25:27.000Z"), source="Metro", author="Nola Ojomu", url="https://metro.co.uk/2021/02/25/oprah-winfrey-asks-teen-mary-kate-and-ashley-olsen-about-their-size-resurfaced-interview-14144868/?ito=smart-news" },
C:   { id="4255778226426618206"^^com.smartnews:article, title="Phone Records Prove House Sergeant-at-Arms DID Ignore Pleas for Backup: Capitol Police Chief", date=new Date("2021-02-25T17:03:09.000Z"), source="The Daily Beast", author="Pilar Melendez", url="https://www.thedailybeast.com/capitol-police-chief-yogananda-pittman-proves-pleas-to-house-sergeant-at-arms-paul-irving-were-ignored" },
C:   { id="4255777039912542331"^^com.smartnews:article, title="Jailed Putin critic Navalny moved, probably to prison camp: lawyer, activist", date=new Date("2021-02-25T15:21:48.000Z"), source="Reuters", author="Reuters Staff", url="https://www.reuters.com/article/us-russia-politics-navalny-prison-idUSKBN2AP245" },
C:   { id="4255482516892288396"^^com.smartnews:article, title="Woman Finds Husband’s Secret IG Account, Feels Shocked For All The Right Reasons", date=new Date("2021-02-24T21:28:07.000Z"), source="Goalcast", author="Joel Balsam", url="https://www.goalcast.com/2021/02/24/woman-finds-husband-secret-ig-account/" }
C: ]]
C: #[count=35];
A: The latest news is Former U.S. Gymnastics coach with ties to disgraced doctor Larry Nassar charged with sexual assault, human trafficking. It is a new articles from Associated Press published on 2/25/2021, 10:30:34 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: What IoT devices can you work with?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum iot_help);
====
# recording/87c42d2fe8cfccf153ed1cfa89144072
U: find me a cat picture
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.thecatapi.cat()
C: #[results=[
C:   { id="uFkQ1tJ5o"^^com.thecatapi:cat, picture_url="https://s3.us-west-2.amazonaws.com/cdn2.thecatapi.com/images/uFkQ1tJ5o.jpg"^^tt:picture, link="http://thecatapi.com/?id=uFkQ1tJ5o"^^tt:url }
C: ]];
A: Here is a cat picture.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: find me a picture of a woman
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.image_search(query="woman");
====
# online/cheat1435976
U: check temperature on thermostat, if it is below 13 change it to 14
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.temperature.temperature() filter value <= 13F;
UT: @org.thingpedia.iot.climate.set_target_temperature(value=14F);
====
# online/121049
U: if the weather is colder than 13 c then set my thermostat to 14 c
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=$?) filter temperature <= 13C;
UT: @org.thingpedia.iot.climate.set_target_temperature(value=14C);
====
# online/121527
U: if the weather is colder than 13 c then set my thermostat to 14 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=$?) filter temperature <= 13C;
UT: @org.thingpedia.iot.climate.set_target_temperature(value=14F);
====
# log/40989
U: news summaries from bbc comma huffington post
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bbc.top_stories();
UT: @com.huffingtonpost.frontpage();
====
# online/121061
U: post my instagram pictures on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/121062
U: post my new instagram pictures on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/121063
U: post my new instagram pictures on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121067
U: every day tweet the new nasa astronomy picture of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121068
U: every day post the new nasa astronomy picture of the day on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/121070
U: post new my instagram pictures on tumblr
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.tumblr.blog.post_picture(picture_url=picture_url);
====
# online/121081
U: post on facebook global warming if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.facebook.post(status="global warming");
====
# online/121083
U: post on tumblr title "str:QUOTED_STRING::0:" body "str:QUOTED_STRING::1:" if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.tumblr.blog.post_text(body="str:QUOTED_STRING::1:", title="str:QUOTED_STRING::0:");
====
# online/121085
U: share a link on linkedin if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.linkedin.share();
====
# online/121111
U: if i post a picture on instagram then post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121118
U: if i post a picture on instagram with hashtag amethist then post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter contains(hashtags, "amethist"^^tt:hashtag)) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121120
U: if i post a picture on instagram at home then post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter location == $location.home) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121140
U: send a nasa picture to slack every day at 0:0
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[new Time(0, 0)]) => @gov.nasa.apod() => @com.slack.send_picture(picture_url=picture_url);
====
# online/121210
U: send me new articles from the wall street journal us business section on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum us_business)) => @com.gmail.send_email(message=$result);
====
# online/121344
U: send me new articles from the wall street journal technology section on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.gmail.send_email(message=$result);
====
# online/121541
U: if someone tweets with hashtag str:HASHTAG::0: then post it on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.twitter.home_timeline() filter contains(hashtags, "str:HASHTAG::0:"^^tt:hashtag)) => @com.facebook.post(status=$result);
====
# online/121543
U: when i post a picture on instagram post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/122785
U: when i publish a new picture on instagram, post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/123117
U: translate new wall street journal opinion posts
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum opinions)) => @com.yandex.translate.translate(text=$result);
====
# online/123119
U: if new post in wall street journal technology then translate the event
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.yandex.translate.translate(text=$result);
====
# online/123120
U: if new post in wall street journal technology then translate it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.yandex.translate.translate(text=$result);
====
# online/123121
U: if new post in wall street journal world news then translate it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum world_news)) => @com.yandex.translate.translate(text=$result);
====
# online/135862
U: send new washington post the fix articles on slack to creepiness
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_blog_post(section=enum the_fix)) => @com.slack.send(channel="creepiness"^^tt:hashtag, message=$result);
====
# online/135863
U: send new washington post world views articles on slack to relaxations
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_blog_post(section=enum world_views)) => @com.slack.send(channel="relaxations"^^tt:hashtag, message=$result);
====
# online/141672
U: translate washington post to czech
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("czech"), text=$result);
====
# online/141673
U: translate washington post to str:ENTITY_tt:iso_lang_code::0:
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language="str:ENTITY_tt:iso_lang_code::0:"^^tt:iso_lang_code, text=$result);
====
# online/337978
U: play queens we are the champions from youtube on my tv if someone commits on github
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.github.get_commit()) => @com.youtube.search_videos(query="queens we are the champions") => @org.thingpedia.iot.tv.play_url(url=video_url);
====
# online/341549
U: if the weather is raining, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341550
U: if it's raining, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341552
U: if it's rains, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341553
U: if it rains, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341559
U: tweet "str:QUOTED_STRING::0:" when a politics article is posted in the washington post
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article(section=enum politics)) => @com.twitter.post(status="str:QUOTED_STRING::0:");
====
# online/359848
U: translate washington post headlines to swedish
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("swedish"), text=title);
====
# online/359888
U: send new phd comics picture to my gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.phdcomics.get_post()) => @com.gmail.send_picture(picture_url=picture_url);
====
# online/359892
U: set me as away on slack if calendar busy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.icalendar.list_events()) filter status == enum started => @com.slack.setPresence(presence=enum away);
====
# online/359916
U: if i upload a new photo to instagram, also upload it to twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/359918
U: if i receive a gmail and its subject has "str:QUOTED_STRING::0:" in it, tweet the subject
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(email_id of @com.gmail.inbox(is_important=true) filter subject =~ "str:QUOTED_STRING::0:") => @com.twitter.post(status=subject);
====
# online/383234
U: post on twitter if i receive mail in gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(email_id of @com.gmail.inbox(is_important=true)) => @com.twitter.post();
====
# online/1459786
U: every hour send the weather on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: timer(interval=1h) => @org.thingpedia.weather.current() => @com.gmail.send_picture(message=$result);
====
# online/1520130
U: translate washington post headlines to str:ENTITY_tt:iso_lang_code::0:
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language="str:ENTITY_tt:iso_lang_code::0:"^^tt:iso_lang_code, text=title);
====
# online/1545152
U: if weather rains send email
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/1545153
U: if whether rains send email
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/1645673
U: automatically set my laptop background to the nasa astronomy picture of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=picture_url);
====
# online/1659101
U: automatically set the background of my laptop to the new nasa pic of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=picture_url);
====
# online/1684055
U: when my google drive fiiles changes notify me on slack
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.google.drive.list_drive_files()) => @com.slack.send();
====
# online/1684077
U: change your background to nasa image of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=picture_url);
====
# online/13722307
U: when the new york times has an article about china, translate the headline to chinese, then email it to my friend
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.nytimes.get_front_page() filter title =~ "china") => @com.yandex.translate.translate(text=title) => @com.gmail.send_email(message=translated_text);
====
# online/15252552
U: post bbc news on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.bbc.top_stories()) => @com.twitter.post(status=$result);
====
# online/27565811
U: when the new york times has an article about china, translate the title to chinese
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.nytimes.get_front_page() filter title =~ "china") => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("chinese"), text=title);
====
# online/27565812
U: when the wall street journal has an article about china, translate the title to chinese
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum world_news) filter title =~ "china") => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("chinese"), text=title);
====
# online/53256260
U: when i upload a new instagram picture with hashtag ovalworkshop, post it to twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter contains(hashtags, "ovalworkshop"^^tt:hashtag)) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/55592353
U: close the shades when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592359
U: open the shades when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592360
U: open the shades when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592361
U: close the shades when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592370
U: close the window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592374
U: open the window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592375
U: open my window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592377
U: close my window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592388
U: close my shutter when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592393
U: close the shutter when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592487
U: close the damper when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592494
U: close my damper when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592496
U: close the damper when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592639
U: open my window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592640
U: open my windows if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592642
U: open my window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592643
U: open the window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592644
U: open the windows when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592645
U: open the windows if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592646
U: open the living room window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="living room").set_openclose(state=enum open);
====
# online/55592647
U: open the bedroom window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="bedroom").set_openclose(state=enum open);
====
# online/55592648
U: open my toilet window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="toilet").set_openclose(state=enum open);
====
# online/55592650
U: open my bedroom window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="bedroom").set_openclose(state=enum open);
====
# online/55592651
U: open the kitchen window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="kitchen").set_openclose(state=enum open);
====
# online/55592652
U: open the living room window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="living room").set_openclose(state=enum open);
====
# online/57061575
U: turn on the vacuum when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.vacuum.set_power(power=enum on);
====
# online/57061576
U: turn off the fan when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.fan.set_power(power=enum off);
====
# online/57061577
U: close all the windows when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close);
====
# online/57061581
U: turn off the fan when i open the window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter state == enum open => @org.thingpedia.iot.fan.set_power(power=enum off);
====
# online/57061583
U: alert me when somebody opens the window and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/57061584
U: alert me when the window is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/57061585
U: alert me when the window is opened while i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/57061586
U: alert me when the window is opened while i am away
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/57061587
U: alert me when the window is opened while i am away from home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/57061592
U: send an alert when i leave home and the window is open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/57061593
U: send an alert when i leave home and the door is open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/62110232
U: order me a large latte when i get to work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.work => @org.thingpedia.demo.coffee.order(beverage=enum latte, size=enum large);
====
# online/62110234
U: tweet we're all gonna die when nasa says there is an asteroid nearby
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.asteroid()) => @com.twitter.post(status="we 're all gon na die");
====
# online/62110239
U: automatically copy everything from almondstanford from twitter to facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.twitter.home_timeline() filter author == "almondstanford"^^tt:username) => @com.facebook.post(status=text);
====
# online/62110240
U: when i total more than 13 steps in a day, post on facebook about it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.fitbit.getsteps()) filter steps >= 13 => @com.facebook.post(status=$result);
====
# online/62110292
U: when there is a new video by mkbhd, shoot an email
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.youtube.list_videos() filter channel_title =~ "mkbhd") => @com.gmail.send_email();
====
# log/2267
U: every day at 0:0, send a cat url to str:EMAIL_ADDRESS::0: with subject "str:QUOTED_STRING::0:"
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[new Time(0, 0)]) => @com.thecatapi.cat() => @com.gmail.send_picture(picture_url=picture_url, subject="str:QUOTED_STRING::0:", to="str:EMAIL_ADDRESS::0:"^^tt:email_address);
====
# log/2635
U: turn off my tv if there is no person in the room
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.occupancy.occupancy()) filter state == enum not_detecting => @org.thingpedia.iot.tv.set_power(power=enum off);
====
# log/8095
U: when price of str:ENTITY_tt:cryptocurrency_code::0: changes say hi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.cryptonator.get_price(currency="str:ENTITY_tt:cryptocurrency_code::0:"^^tt:cryptocurrency_code)) => @org.thingpedia.builtin.thingengine.builtin.say(message="hi");
====
# log/56465
U: turn on couch light when front door lock is unlocked
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.lock(name="front").state()) filter state == enum unlocked => @org.thingpedia.iot.light-bulb(name="couch").set_power(power=enum on);
====
# online/121045
U: tweet the new work if the thermostat says more than 13 c
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13C => @com.twitter.post(status="the new work");
====
# online/121075
U: tweet girls if the temperature is less than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13F => @com.twitter.post(status="girls");
====
# online/121076
U: tweet if the temperature is less than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13F => @com.twitter.post();
====
# online/121077
U: tweet "str:QUOTED_STRING::0:" if the temperature is less than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13F => @com.twitter.post(status="str:QUOTED_STRING::0:");
====
# online/121080
U: tweet pretty hot in here if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.twitter.post(status="pretty hot in here");
====
# recording/2e93be7a693be9b05438ff38501f0b04
U: define covid
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @info.owlbot.get(word="covid");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: who is taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "taylor swift";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "taylor swift"
C: #[results=[
C:   { id="spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift"), genres=["dance pop", "pop", "pop dance"], popularity=98 }
C: ]];
A: I have one, it is Taylor Swift. It is a pop artist.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/4924fbdb1bde1859089c3d39476f5155
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3ea4329a70d2aa5bfc206bcf0dfa9282
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0d040233eb6b643022f315f1b73daaeb
U: what will be the weather tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=8.7C, wind_speed=3.5mps, humidity=86.1, cloudiness=100, fog=0, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, date=new Date("2021-03-18T14:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
A: It will be raining tomorrow at 7:00 AM in Redwood City, California and the temperature will be 47.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: show me in celsius
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
====
# recording/fc62d25abb4d9dfaee6d6b089a523b85
U: what's the news today
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4278714058527478000"^^com.smartnews:article, link="https://mmajunkie.usatoday.com/2021/04/2021-pfl-2-video-antonio-carlos-junior-submission-tom-lawlor"^^tt:url, title="2021 PFL 2 video: Antonio Carlos Junior submits Tom Lawlor in first", date=new Date("2021-04-29T23:30:55.000Z"), source="MMA Junkie", author="MMA Junkie Staff", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714058527478015.mp3"^^tt:url, content="smartnews-sha256:ce14f222984c0237c8e7949b8e2d228aca5ecec377c080adc75ab38285336540" },
C:   { id="4278713729345916400"^^com.smartnews:article, link="https://www.audacy.com/wben/local-sports/bills/nfl-draft-live-grades-and-analysis-for-every-1st-round-pick"^^tt:url, title="2021 NFL Draft: Live grades and analysis for all 32 first round picks", date=new Date("2021-04-29T23:58:00.000Z"), source="Audacy", author="Jesse Pantuosco", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713729345916591.mp3"^^tt:url, content="smartnews-sha256:7622ba19726fd3907d7cb0ecd4567f043c3e25c2238476083c925dbab77b3255" },
C:   { id="4278714242246382000"^^com.smartnews:article, link="https://www.baltimoresun.com/business/bs-bz-domino-resumes-operations-20210429-rvsvgiluzvdzvi2vjgnsy4oxe4-story.html"^^tt:url, title="Domino Sugar resumes full operations eight days after fire at Baltimore refinery", date=new Date("2021-04-30T00:00:00.000Z"), source="Baltimore Sun", author="Colin Campbell, Baltimore Sun", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714242246381851.mp3"^^tt:url, content="smartnews-sha256:059acce9b0192adddfe121a73fa16f957861c9d639e7711874647df50f948496" },
C:   { id="4278713752284565500"^^com.smartnews:article, link="https://www.audacy.com/973thefansd/sports/san-diego-state-aztecs/trey-pulliam-on-with-john-kentera"^^tt:url, title="Trey Pulliam on with John Kentera", date=new Date("2021-04-29T23:47:32.000Z"), source="Audacy", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713752284565711.mp3"^^tt:url, content="smartnews-sha256:e260fa733b2dfb72cba22f4dc0203b1cbc9c4abe1189598ef05f0dcb1721e945" },
C:   { id="4278713824070078500"^^com.smartnews:article, link="https://people.com/movies/david-cronenbergs-new-film-crimes-of-the-future-to-star-viggo-mortensen-kristen-stewart-lea-seydoux/"^^tt:url, title="David Cronenberg’s Crimes of the Future to Star Viggo Mortensen, Kristen Stewart & Léa Seydoux: Report", date=new Date("2021-04-30T00:00:11.000Z"), source="People", author="<a href=\"https://people.com/author/salina-tsegai/\">Salina Tsegai</a>", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713824070078688.mp3"^^tt:url, content="smartnews-sha256:52db82c07791f0730ebf8123ed1cc484c1056b85964ef41cede6f2ea6a4bfd52" },
C:   { id="4278714224651283000"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/kyrgyzstan-tajikistan-cross-border-shelling-in-water-dispute/100106108"^^tt:url, title="Six civilians are dead as Kyrgyz and Tajik security forces clash at border in water dispute", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714224651283022.mp3"^^tt:url, content="smartnews-sha256:0f438a0f9182b5e5fd1d8fe1354f5d9dcf7b054eccd6c258b9e3ea79bb068e19" },
C:   { id="4278713691228082000"^^com.smartnews:article, link="https://www.rawstory.com/andrew-giuliani/"^^tt:url, title="WATCH: CNN's Erin Burnett humiliates Rudy Giuliani's son as he tries to attack FBI investigation of his dad", date=new Date("2021-04-29T23:57:15.000Z"), source="Raw Story", author="Matthew Chapman", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713691228082370.mp3"^^tt:url, content="smartnews-sha256:f89389b35a10d597ce8237e5791423dc465114b583f62b8e1c9745fd5e17e328" },
C:   { id="4278714184415324700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/bruce-the-flood-duck/100096252"^^tt:url, title="Have you seen Bruce? Rubber duck released down the Barwon River goes missing", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714184415324746.mp3"^^tt:url, content="smartnews-sha256:58de92774a5106d5c43871447dfec962fc11415bea9a8b42f0a76fbc30f30525" },
C:   { id="4278714098876681700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/mdma-drug-bust-queensland-sydney-syndicate-netherlands/100106406"^^tt:url, title="Two Sydney men arrested and extradited to Brisbane over $300 million MDMA drug bust", date=new Date("2021-04-29T23:48:45.000Z"), source="Australian Broadcasting Corporation", author="By Lia Walsh", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714098876681964.mp3"^^tt:url, content="smartnews-sha256:8eb8c07c62ff11d503fb249cfde66e844c9df085246c31a07e0f9765ee7e7f24" },
C:   { id="4278728216371272000"^^com.smartnews:article, link="https://www.truebluela.com/2021/4/29/22410910/brusdar-graterol-injured-list-forearm-tightness-edwin-uceta"^^tt:url, title="Dodgers place Brusdar Graterol on injured list with forearm tightness", date=new Date("2021-04-30T00:56:52.000Z"), source="True Blue LA", author="Eric Stephen", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278728216371272026.mp3"^^tt:url, content="smartnews-sha256:3308ececcf8dc6235c0a80a4b152d2337209d08d7ab6201df4a55dd2d234f93b" }
C: ]]
C: #[count=50]
C: #[more=true];
A: Here are the news.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_many;
U: what's the weather in rome tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(location=new Location("rome"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4278714058527478000"^^com.smartnews:article, link="https://mmajunkie.usatoday.com/2021/04/2021-pfl-2-video-antonio-carlos-junior-submission-tom-lawlor"^^tt:url, title="2021 PFL 2 video: Antonio Carlos Junior submits Tom Lawlor in first", date=new Date("2021-04-29T23:30:55.000Z"), source="MMA Junkie", author="MMA Junkie Staff", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714058527478015.mp3"^^tt:url, content="smartnews-sha256:ce14f222984c0237c8e7949b8e2d228aca5ecec377c080adc75ab38285336540" },
C:   { id="4278713729345916400"^^com.smartnews:article, link="https://www.audacy.com/wben/local-sports/bills/nfl-draft-live-grades-and-analysis-for-every-1st-round-pick"^^tt:url, title="2021 NFL Draft: Live grades and analysis for all 32 first round picks", date=new Date("2021-04-29T23:58:00.000Z"), source="Audacy", author="Jesse Pantuosco", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713729345916591.mp3"^^tt:url, content="smartnews-sha256:7622ba19726fd3907d7cb0ecd4567f043c3e25c2238476083c925dbab77b3255" },
C:   { id="4278714242246382000"^^com.smartnews:article, link="https://www.baltimoresun.com/business/bs-bz-domino-resumes-operations-20210429-rvsvgiluzvdzvi2vjgnsy4oxe4-story.html"^^tt:url, title="Domino Sugar resumes full operations eight days after fire at Baltimore refinery", date=new Date("2021-04-30T00:00:00.000Z"), source="Baltimore Sun", author="Colin Campbell, Baltimore Sun", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714242246381851.mp3"^^tt:url, content="smartnews-sha256:059acce9b0192adddfe121a73fa16f957861c9d639e7711874647df50f948496" },
C:   { id="4278713752284565500"^^com.smartnews:article, link="https://www.audacy.com/973thefansd/sports/san-diego-state-aztecs/trey-pulliam-on-with-john-kentera"^^tt:url, title="Trey Pulliam on with John Kentera", date=new Date("2021-04-29T23:47:32.000Z"), source="Audacy", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713752284565711.mp3"^^tt:url, content="smartnews-sha256:e260fa733b2dfb72cba22f4dc0203b1cbc9c4abe1189598ef05f0dcb1721e945" },
C:   { id="4278713824070078500"^^com.smartnews:article, link="https://people.com/movies/david-cronenbergs-new-film-crimes-of-the-future-to-star-viggo-mortensen-kristen-stewart-lea-seydoux/"^^tt:url, title="David Cronenberg’s Crimes of the Future to Star Viggo Mortensen, Kristen Stewart & Léa Seydoux: Report", date=new Date("2021-04-30T00:00:11.000Z"), source="People", author="<a href=\"https://people.com/author/salina-tsegai/\">Salina Tsegai</a>", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713824070078688.mp3"^^tt:url, content="smartnews-sha256:52db82c07791f0730ebf8123ed1cc484c1056b85964ef41cede6f2ea6a4bfd52" },
C:   { id="4278714224651283000"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/kyrgyzstan-tajikistan-cross-border-shelling-in-water-dispute/100106108"^^tt:url, title="Six civilians are dead as Kyrgyz and Tajik security forces clash at border in water dispute", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714224651283022.mp3"^^tt:url, content="smartnews-sha256:0f438a0f9182b5e5fd1d8fe1354f5d9dcf7b054eccd6c258b9e3ea79bb068e19" },
C:   { id="4278713691228082000"^^com.smartnews:article, link="https://www.rawstory.com/andrew-giuliani/"^^tt:url, title="WATCH: CNN's Erin Burnett humiliates Rudy Giuliani's son as he tries to attack FBI investigation of his dad", date=new Date("2021-04-29T23:57:15.000Z"), source="Raw Story", author="Matthew Chapman", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713691228082370.mp3"^^tt:url, content="smartnews-sha256:f89389b35a10d597ce8237e5791423dc465114b583f62b8e1c9745fd5e17e328" },
C:   { id="4278714184415324700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/bruce-the-flood-duck/100096252"^^tt:url, title="Have you seen Bruce? Rubber duck released down the Barwon River goes missing", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714184415324746.mp3"^^tt:url, content="smartnews-sha256:58de92774a5106d5c43871447dfec962fc11415bea9a8b42f0a76fbc30f30525" },
C:   { id="4278714098876681700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/mdma-drug-bust-queensland-sydney-syndicate-netherlands/100106406"^^tt:url, title="Two Sydney men arrested and extradited to Brisbane over $300 million MDMA drug bust", date=new Date("2021-04-29T23:48:45.000Z"), source="Australian Broadcasting Corporation", author="By Lia Walsh", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714098876681964.mp3"^^tt:url, content="smartnews-sha256:8eb8c07c62ff11d503fb249cfde66e844c9df085246c31a07e0f9765ee7e7f24" },
C:   { id="4278728216371272000"^^com.smartnews:article, link="https://www.truebluela.com/2021/4/29/22410910/brusdar-graterol-injured-list-forearm-tightness-edwin-uceta"^^tt:url, title="Dodgers place Brusdar Graterol on injured list with forearm tightness", date=new Date("2021-04-30T00:56:52.000Z"), source="True Blue LA", author="Eric Stephen", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278728216371272026.mp3"^^tt:url, content="smartnews-sha256:3308ececcf8dc6235c0a80a4b152d2337209d08d7ab6201df4a55dd2d234f93b" }
C: ]]
C: #[count=50]
C: #[more=true];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(43.2128473, -75.4557304, "Rome, City of Rome"))
C: #[results=[
C:   { temperature=5.3C, wind_speed=4.7mps, humidity=43.7, cloudiness=9.4, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-05-01T14:00:00.000Z"), location=new Location(43.2128473, -75.4557304, "Rome, City of Rome") }
C: ]];
A: It will be sunny tomorrow at 7:00 AM in Rome, City of Rome and the temperature will be 41.5 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: set the temperature unit to celsius
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
====
# recording/34d1a3141e71e53ace2a21334e02ec23
U: set the language to spanish
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_language(language=null^^tt:iso_lang_code("spanish"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_language(language="es"^^tt:iso_lang_code("Spanish"))
C: #[results=[]]
C: #[error=enum unsupported_platform_cloud];
A: Sorry, you need to go to the user profile page to change the language.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: show me a dog picture
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thedogapi.dog();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_language(language="es"^^tt:iso_lang_code("Spanish"))
C: #[results=[]]
C: #[error=enum unsupported_platform_cloud];
C: @com.thedogapi.dog()
C: #[results=[
C:   { id="TXXuNa4by"^^com.thedogapi:dog("Unknown breed"), picture_url="https://cdn2.thedogapi.com/images/TXXuNa4by.jpg"^^tt:picture }
C: ]];
A: Here is a picture of a Unknown breed.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: show me a picture of an almond
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.image_search(query="almond");
====
# recording/f8aef93e66b7957d64f4f9664f507946
U: tell about the weather in Genova, Italy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("genova , italy"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(8, 46, 12) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_date()
C: #[results=[
C:   { date=new Date("2021-04-30T00:00:00.812Z") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(44.40726, 8.9338624, "Genoa, Liguria"))
C: #[results=[
C:   { temperature=14.3C, wind_speed=3.4mps, humidity=95.6, cloudiness=100, fog=7, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, location=new Location(44.40726, 8.9338624, "Genoa, Liguria") }
C: ]];
A: It is raining today in Genoa, Liguria and the temperature is 57.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what day is today?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_date();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(8, 46, 12) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_date()
C: #[results=[
C:   { date=new Date("2021-04-30T00:00:00.812Z") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(44.40726, 8.9338624, "Genoa, Liguria"))
C: #[results=[
C:   { temperature=14.3C, wind_speed=3.4mps, humidity=95.6, cloudiness=100, fog=7, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, location=new Location(44.40726, 8.9338624, "Genoa, Liguria") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_date()
C: #[results=[
C:   { date=new Date("2021-04-30T00:00:00.730Z") }
C: ]];
A: Today is April 30.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Who are your creators?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
====
# recording/90a50a1078390e8d747cf1238ba17d2f
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/a0d98f0449e864c091ae904bd6f8097a
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/7dbccc32973ad07f3d0ff6b03ce3c2b6
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/fe463257269792171d41a0484484ecc1
U: bya
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/515163de5dbcfa5b6744976b37832b26
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b27bc4f8384a464f4104f0f398f6d04c
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello, what can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3d95964b31183cf876918895bcb1cc4a
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/44b1ad70419de09a5891dc317f327358
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/8969
U: turn on the lights when i get home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.home => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# log-dev/9016
U: 你 好
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/1519
U: oh stop
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/54338
U: open the window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.smoke.state()) filter state == enum detecting => @org.thingpedia.iot.cover(name="window").set_openclose(state=enum open);
====
# recording/cce30ec414554394e63f9ac3b6c25f76
U: play baba riley by the who
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("who")) && id =~ "baba riley" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:67ea9eGLXYMsO2eYQRui3w"^^org.thingpedia.media-source:artist("The Who")) && id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Baba O'Riley on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:67ea9eGLXYMsO2eYQRui3w"^^org.thingpedia.media-source:artist("The Who")) && id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:67ea9eGLXYMsO2eYQRui3w"^^org.thingpedia.media-source:artist("The Who")) && id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play the who
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("who")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/8d1d57109d0565e79262c53b2a3a7702
U: can you tell me a good japanese restaurant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("japanese"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter contains(cuisines, "japanese"^^com.yelp:restaurant_cuisine("Japanese"))
C: #[results=[
C:   { id="APcouAOJlP0sdKZU3Ev_7w"^^com.yelp:restaurant("Odori Japanese Cuisine"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/fpIf_fClDVr8MFD8268AyQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/odori-japanese-cuisine-palo-alto-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=3.5, review_count=612, geo=new Location(37.4270973205566, -122.14794921875, "2111 El Camino Real, Palo Alto, CA 94306"), phone="+16503272222"^^tt:phone_number },
C:   { id="AUktvLJ9j7gANenwNga1fg"^^com.yelp:restaurant("Taro San Japanese Noodle Bar"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/89qobB8Zp7uNq4_p3Zw01Q/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taro-san-japanese-noodle-bar-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "noodles"^^com.yelp:restaurant_cuisine("Noodles"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=3.5, review_count=660, geo=new Location(37.4429175780446, -122.172707300397, "717 Stanford Shopping Ctr, Palo Alto, CA 94304"), phone="+16508152700"^^tt:phone_number },
C:   { id="LEp5w5lF3AD2UGRfolFoDQ"^^com.yelp:restaurant("YAYOI"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ebhtMam6i1HBJl83qaY4UQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/yayoi-palo-alto-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=3.5, review_count=634, geo=new Location(37.44737, -122.16052, "403 University Ave, Palo Alto, CA 94301"), phone="+16504944437"^^tt:phone_number },
C:   { id="xNNURK1vIGEDqwVb9pFRlg"^^com.yelp:restaurant("Go Fish Poke Bar"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/GCbABrUn_UArevjk--lwUg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/go-fish-poke-bar-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=4, review_count=348, geo=new Location(37.4427026586894, -122.170617845337, "660 Stanford Shopping Ctr, Ste 244B, Palo Alto, CA 94304"), phone="+16503281370"^^tt:phone_number },
C:   { id="WAo42c41_0Y0tifXbwuo8w"^^com.yelp:restaurant("Fuki Sushi"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/K84YCh7eNy0fxkUSLmVzyg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/fuki-sushi-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum expensive, rating=3.5, review_count=887, geo=new Location(37.4138844, -122.125805, "4119 El Camino Real, Palo Alto, CA 94306"), phone="+16504949383"^^tt:phone_number },
C:   { id="hvB8fOsqPmVAFFrnmAMz_w"^^com.yelp:restaurant("Daigo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/MmFuZOxqQs---nLw7izPGQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/daigo-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum moderate, rating=4, review_count=152, geo=new Location(37.4278, -122.14425, "2363 Birch St, Ste B, Palo Alto, CA 94306"), phone="+16503846880"^^tt:phone_number },
C:   { id="xcUJ7qlO60Cu-ZyCaD-23Q"^^com.yelp:restaurant("Jin Sho"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/kdCwUep8tyRy6xatkgoivg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/jin-sho-palo-alto-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum expensive, rating=3.5, review_count=556, geo=new Location(37.42596, -122.14555, "454 S California Ave, Palo Alto, CA 94306"), phone="+16503213454"^^tt:phone_number },
C:   { id="arrdif21CgXnCliP_Kcnjw"^^com.yelp:restaurant("Onigilly Palo Alto"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/ji-6Mbvur2YPPQ4XSFBwKg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/onigilly-palo-alto-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum cheap, rating=4, review_count=272, geo=new Location(37.44408, -122.16296, "164 University Ave, Palo Alto, CA 94301"), phone="+16503132104"^^tt:phone_number },
C:   { id="64ClD5HpRafRXjQ79w0SYw"^^com.yelp:restaurant("Nobu Palo Alto"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/JYWEZlLP6ZLWAzVsgQRFKQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/nobu-palo-alto-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "japanese"^^com.yelp:restaurant_cuisine("Japanese"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum luxury, rating=3.5, review_count=464, geo=new Location(37.4436, -122.16152, "180 Hamilton Ave, Palo Alto, CA 94301"), phone="+16507988396"^^tt:phone_number },
C:   { id="JnLNfQtW9GLGRF1pzAd55w"^^com.yelp:restaurant("Sushi House"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/6fbc1tdrD1tFqjYb6SM8tQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/sushi-house-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "noodles"^^com.yelp:restaurant_cuisine("Noodles"), "japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum moderate, rating=3.5, review_count=272, geo=new Location(37.4392332, -122.1582318, "855 El Camino Real, Ste 158, Palo Alto, CA 94301"), phone="+16503213453"^^tt:phone_number }
C: ]]
C: #[count=41];
A: I see Odori Japanese Cuisine, Taro San Japanese Noodle Bar, and YAYOI. They're moderate restaurants rated 3.5 star.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: can you remind me to take a break every hour?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: timer(interval=1h) => @org.thingpedia.builtin.thingengine.builtin.say(message="to take a break");
====
# recording/27711928e6877e21a458a66df951e6ad
U: find me the box by roddy ricch
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("roddy ricch")) && id =~ "box";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="scUvsrORKe"^^com.icanhazdadjoke:id, text="I asked a frenchman if he played video games. He said \"Wii\"" }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:757aE44tKEUQEqRuT6GnEB"^^org.thingpedia.media-source:artist("Roddy Ricch")) && id =~ "box"
C: #[results=[
C:   { id="spotify:track:0nbXyq5TXYPCO7pr3N8S4I"^^org.thingpedia.media-source:playable("The Box"), artists=["spotify:artist:757aE44tKEUQEqRuT6GnEB"^^org.thingpedia.media-source:artist("Roddy Ricch")], release_date=new Date("2019-12-06T00:00:00.000Z"), popularity=86, genres=["melodic rap", "rap", "trap"], __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I see The Box. It is a music by Roddy Ricch released in December 5, 2019. Would you like to play it on Spotify?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:0nbXyq5TXYPCO7pr3N8S4I"^^org.thingpedia.media-source:playable("The Box"))
AT: #[confirm=enum proposed];
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6072b83f41172d1d6037fac46c9d7cfa
U: Tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="rHBQuXLR7h"^^com.icanhazdadjoke:id, text="Why did the cookie cry?\r\nBecause his mother was a wafer so long" }
C: ]];
A: Why did the cookie cry? Because his mother was a wafer so long.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/8c3f690481829cc911ced381be36211b
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="4ElyszXDdxc"^^com.icanhazdadjoke:id, text="I went to the store to pick up eight cans of sprite... when I got home I realized I'd only picked seven up" }
C: ]];
A: I went to the store to pick up eight cans of sprite... When I got home I realized I'd only picked seven up.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/d737337e6e4c20088d9f7fe699f1d249
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="e2obFd2oOf"^^com.icanhazdadjoke:id, text="I thought about going on an all-almond diet. But that's just nuts." }
C: ]];
A: I thought about going on an all-almond diet. But that's just nuts.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/0bb13fec6883d24eb63b9ad21da456cf
U: play the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/f10e847df303ac51cad43c95c11495c6
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/c1d705a075ab4d3224b953ee43a93757
U: Play Bruce Springsteen.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("bruce springsteen")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3eqjTLE0HfPfh78zjh6TqT"^^org.thingpedia.media-source:artist("Bruce Springsteen")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0dOg1ySSI7NkpAe89Zo0b9"^^org.thingpedia.media-source:playable("Born in the U.S.A."), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7FwBtcecmlpc1sLySPXeGE"^^org.thingpedia.media-source:playable("Dancing In the Dark"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:6hTcuIQa0sxrrByu9wTD7s"^^org.thingpedia.media-source:playable("Born to Run"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:2Y90nL1ohB4sgYELDs7uNx"^^org.thingpedia.media-source:playable("Glory Days"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3PzsbWSQdLCKDLxn7YZfkM"^^org.thingpedia.media-source:playable("I'm On Fire"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:56lhDZNQ5J47aog6mGKeGk"^^org.thingpedia.media-source:playable("Thunder Road"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1KsI8NEeAna8ZIdojI3FiT"^^org.thingpedia.media-source:playable("Hungry Heart"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3fbnbn6A5O5RNb08tlUEgd"^^org.thingpedia.media-source:playable("Streets of Philadelphia - Single Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:68uuz61IqrSJjO6ffO3yHc"^^org.thingpedia.media-source:playable("Secret Garden"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7HrzErXq3TsKOY1gmdIShB"^^org.thingpedia.media-source:playable("The River"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music by Bruce Springsteen on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play The Beatles.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("beatles")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3eqjTLE0HfPfh78zjh6TqT"^^org.thingpedia.media-source:artist("Bruce Springsteen")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0dOg1ySSI7NkpAe89Zo0b9"^^org.thingpedia.media-source:playable("Born in the U.S.A."), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7FwBtcecmlpc1sLySPXeGE"^^org.thingpedia.media-source:playable("Dancing In the Dark"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:6hTcuIQa0sxrrByu9wTD7s"^^org.thingpedia.media-source:playable("Born to Run"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:2Y90nL1ohB4sgYELDs7uNx"^^org.thingpedia.media-source:playable("Glory Days"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3PzsbWSQdLCKDLxn7YZfkM"^^org.thingpedia.media-source:playable("I'm On Fire"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:56lhDZNQ5J47aog6mGKeGk"^^org.thingpedia.media-source:playable("Thunder Road"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1KsI8NEeAna8ZIdojI3FiT"^^org.thingpedia.media-source:playable("Hungry Heart"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3fbnbn6A5O5RNb08tlUEgd"^^org.thingpedia.media-source:playable("Streets of Philadelphia - Single Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:68uuz61IqrSJjO6ffO3yHc"^^org.thingpedia.media-source:playable("Secret Garden"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7HrzErXq3TsKOY1gmdIShB"^^org.thingpedia.media-source:playable("The River"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:6dGnYIeXmHdcikdzNNDMm2"^^org.thingpedia.media-source:playable("Here Comes The Sun - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:2EqlS6tkEnglzr7tkKAAYD"^^org.thingpedia.media-source:playable("Come Together - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7iN1s7xHE4ifF5povM6A48"^^org.thingpedia.media-source:playable("Let It Be - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3BQHpFgAp4l80e1XslIjNI"^^org.thingpedia.media-source:playable("Yesterday - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5jgFfDIR6FR0gvlA56Nakr"^^org.thingpedia.media-source:playable("Blackbird - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5ZBeML7Lf3FMEVviTyvi8l"^^org.thingpedia.media-source:playable("Twist And Shout - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0aym2LBJBk9DAYuHHutrIl"^^org.thingpedia.media-source:playable("Hey Jude - Remastered 2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3KfbEIOC7YIv90FIfNSZpo"^^org.thingpedia.media-source:playable("In My Life - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4pbG9SUmWIvsROVLF0zF9s"^^org.thingpedia.media-source:playable("I Want To Hold Your Hand - Remastered 2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3Am0IbOxmvlSXro7N5iSfZ"^^org.thingpedia.media-source:playable("Strawberry Fields Forever - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
A: I played music by The Beatles on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play playlist cyn piano
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "cyn piano" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/d5976954acf743a41fde079560067438
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/e4d01220cbc89f22384cd2eddcbd7aae
U: add this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
A: What playlist do you want to add to?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(playlist);
AT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
U: Z
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="z", song=id);
====
# recording/204e96f6f7f6375a663426cb85ccfb98
U: play armchair expert
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "armchair expert" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "armchair expert")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6cprB7E9cUJNu5yaLWw85G"^^org.thingpedia.media-source:playable("Armchair Expert"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Armchair Expert on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play joe rogan podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "joe rogan" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/a485bad6463afc7da82b38a464667972
U: play chopin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("chopin")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7y97mc3bZRFXzT2szRM4L4"^^org.thingpedia.media-source:artist("Frédéric Chopin")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2MSgFefjK0T7Iwjvr3OKqV"^^org.thingpedia.media-source:playable("Chopin: Nocturne No. 20 in C-Sharp Minor, Op. Posth."), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2NelosTe0arXp8sdQRfc1B"^^org.thingpedia.media-source:playable("Scherzo No. 3 in C-Sharp Minor, Op. 39, B. 125"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5VT7oTL3YLT43geRPP2LYP"^^org.thingpedia.media-source:playable("Piano Sonata No. 2 in B-Flat Minor, Op. 35: III. Marche funèbre (Lento) (Orchestral Version)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:56FgPusKrAOypfATcunNbB"^^org.thingpedia.media-source:playable("Nocturnes, Op. 9: No. 1, Larghetto in B-Flat Minor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4XZETVhfy6u2ikOFwYcXbD"^^org.thingpedia.media-source:playable("Nocturne No.2 In E Flat, Op.9 No.2"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:18GJzOA39ppNUjqaSSrdpu"^^org.thingpedia.media-source:playable("Nocturnes, Op. 15: No. 2 in F-Sharp Major"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2VkB91yELC0iXDFcCBy5ck"^^org.thingpedia.media-source:playable("Nocturnes, Op. 9: No. 2, Andante in E-Flat Major"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7G1k4wY4k25DBkJZ7BSWJJ"^^org.thingpedia.media-source:playable("Études, Op. 10: No. 3, Étude in E Major \"Tristesse\""), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:38FT6Udxc1ReglJfFqEu1r"^^org.thingpedia.media-source:playable("Impromptu No. 3, Op. 51"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3LNsWJM7YJP3JjZHBFFlnm"^^org.thingpedia.media-source:playable("Nocturne No. 19 in E Minor, Op. 72, No. 1"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=48];
A: I played music by Frédéric Chopin on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/dd6e629c7f68c80815c69097adba3e23
U: play playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:4kQovkgBZTd8h2HCM3fF31"^^org.thingpedia.media-source:playable("Grammy Awards 2021"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:4e36iSHdNaSDaIfOKmCvXd"^^org.thingpedia.media-source:playable("2021 HITS VIRAL ? ( Best Hits 2021 & Top Global 2021 Hits) ?"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:37i9dQZF1DWZjqjZMudx9T"^^org.thingpedia.media-source:playable("MANSIÓN REGGAETÓN"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:6Tyhahqm1EJ2IHOytwMYDq"^^org.thingpedia.media-source:playable("2021 summer camp songs clean/appropriate "), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:37i9dQZF1DX5BAPG29mHS8"^^org.thingpedia.media-source:playable("Éxitos México"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="Invalid playlist Id"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play sigur ros
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("sigur ros")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/0b3f3f45d3591073db1e979fcb5ddb78
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/e79faaa9e11e7d3739644267fedbe959
U: play inbetween days by the cure
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) && id =~ "inbetween days" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) && id =~ "inbetween days")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3EY4O2ZQFIgVU4BSz5rSYx"^^org.thingpedia.media-source:playable("Inbetween Days"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Inbetween Days on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what song is this
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing();
====
# recording/16f845acb479b4a09f57b94b1a6a9b73
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/6965c0b4bca38b2abdf0221acdcd8fa8
U: play album the head on the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.album() filter id =~ "head on the door" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "head on the door")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:album:6HhpmJekzDCRu2K64ZbWqw"^^org.thingpedia.media-source:playable("The Head on the Door"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played The Head on the Door on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "head on the door")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:album:6HhpmJekzDCRu2K64ZbWqw"^^org.thingpedia.media-source:playable("The Head on the Door"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "head on the door")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:album:6HhpmJekzDCRu2K64ZbWqw"^^org.thingpedia.media-source:playable("The Head on the Door"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/d5e5fead6a0fc77b22bc82a0c749d2e8
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/906fc0923855957285bc544b8fbfcf7a
U: play inbetween days
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "inbetween days" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "inbetween days")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3EY4O2ZQFIgVU4BSz5rSYx"^^org.thingpedia.media-source:playable("Inbetween Days"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Inbetween Days on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: stop repeat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum off);
====
# recording/55ada0c1ab8684a158480910c0c05a20
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/814752db1994701bb5ca955c8e6c215e
U: play tony's playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "tony 's" => @org.thingpedia.media-player.play(playable=id);
====
# recording/9590418aeabe0ce1c680f272461a0021
U: play the artist the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
A: I played music by The Cure on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: weather tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
A: It will be sunny tomorrow at 7:00 AM in Lexington Hills, Summit West and the temperature will be 61 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="5T08U8M79pb"^^com.icanhazdadjoke:id, text="Never take advice from electrons. They are always negative." }
C: ]];
A: Never take advice from electrons. They are always negative.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="5T08U8M79pb"^^com.icanhazdadjoke:id, text="Never take advice from electrons. They are always negative." }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: call me tE
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_name(name="te");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="5T08U8M79pb"^^com.icanhazdadjoke:id, text="Never take advice from electrons. They are always negative." }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="te")
C: #[results=[]];
A: Your request was completed successfully.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's my name
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
====
# recording/b73b9e42f19a0c5f7c48b14b7b044473
U: play the band the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/e75185c595ab360beb9bba3cfdaec5e7
U: play thriller
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "thriller" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "thriller")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7azo4rpSUh8nXgtonC6Pkq"^^org.thingpedia.media-source:playable("Thriller"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Thriller on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "thriller")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7azo4rpSUh8nXgtonC6Pkq"^^org.thingpedia.media-source:playable("Thriller"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.resume();
====
# recording/4bdfb7126d0dae5cf6f66928dadc6a2c
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/20f7e3cf3220424dfee364b128fc5608
U: play the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/e844c2b38bb47b8374268cf84500807d
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play artist travis
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("travis")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Travis Scott on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play ravel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("ravel")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0CVjzaBJZ4csWIL0kPmzM6"^^org.thingpedia.media-source:artist("Ravell")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rIk9RbrH9y4CDYfMeoie1"^^org.thingpedia.media-source:playable("Rockin'"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0o9L9lfy4hECoa2Y7FcpzS"^^org.thingpedia.media-source:playable("That Body - Dub Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6c4PgdnY1vZfds7leBo0Zr"^^org.thingpedia.media-source:playable("Feelin' You"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:04Uu103kfQSwmwuzCQoyeZ"^^org.thingpedia.media-source:playable("Sunrise Riot"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6uoGK87Mo8vBkpDPevEJJX"^^org.thingpedia.media-source:playable("Before I Go"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7cQbQPtzPeDkcP3W6hfHgD"^^org.thingpedia.media-source:playable("Get Away"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3y2Ac9C28723pnZq4E53Dg"^^org.thingpedia.media-source:playable("Do It Now"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music by Ravell on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play maurice ravel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("maurice ravel")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0CVjzaBJZ4csWIL0kPmzM6"^^org.thingpedia.media-source:artist("Ravell")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rIk9RbrH9y4CDYfMeoie1"^^org.thingpedia.media-source:playable("Rockin'"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0o9L9lfy4hECoa2Y7FcpzS"^^org.thingpedia.media-source:playable("That Body - Dub Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6c4PgdnY1vZfds7leBo0Zr"^^org.thingpedia.media-source:playable("Feelin' You"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:04Uu103kfQSwmwuzCQoyeZ"^^org.thingpedia.media-source:playable("Sunrise Riot"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6uoGK87Mo8vBkpDPevEJJX"^^org.thingpedia.media-source:playable("Before I Go"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7cQbQPtzPeDkcP3W6hfHgD"^^org.thingpedia.media-source:playable("Get Away"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3y2Ac9C28723pnZq4E53Dg"^^org.thingpedia.media-source:playable("Do It Now"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:17hR0sYHpx7VYTMRfFUOmY"^^org.thingpedia.media-source:artist("Maurice Ravel")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3MRQn2RYo2VLYMoStnLRxu"^^org.thingpedia.media-source:playable("Ravel: Pavane pour une infante défunte, M. 19"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4JOEMgLkrHp8K1XNmyNffH"^^org.thingpedia.media-source:playable("Miroirs: III. Une barque sur l'océan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1NJQ86EXe3Gmo2aGKtrMua"^^org.thingpedia.media-source:playable("Jeux d'eau M.30"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3M7dYsUVdr66ztv5yXqOFm"^^org.thingpedia.media-source:playable("Ma mère l'oye, M. 60 (Version for Piano Duo): I. Pavane de la belle au bois dormant"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5lHKK347dnVNkTDGfQ81Ub"^^org.thingpedia.media-source:playable("Miroirs, M.43 - Orch. Ravel: Alborada del gracioso, M.43"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ju98rvX917EwXLKLnRbQ2"^^org.thingpedia.media-source:playable("Piano Concerto in G Major, M. 83: II. Adagio assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0eoHzI456z8FK5o0g7pdGn"^^org.thingpedia.media-source:playable("Ravel: Miroirs, M. 43: III. Une barque sur l'océan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6TX34flBqlMMSWihUADO2a"^^org.thingpedia.media-source:playable("Le Tombeau de Couperin, M.68: 1. Prélude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1QMmdTk4tgSZ7K4L2E1oa4"^^org.thingpedia.media-source:playable("Valses nobles et sentimentales, M.61 - for Orchestra: 3. Modéré; 4. Assez animé"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2DmlTLFphBLAIACKPsLAQH"^^org.thingpedia.media-source:playable("Pavane pour une infante défunte, M. 19 (Version for Orchestra)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=39];
A: I played music by Maurice Ravel on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/9d5c065ebbfd82d329a8935ae657178c
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/73bdacce3b3128a9206415fbf37b690a
U: Play a song by the Beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("beatles")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/5eaf228643d600cab36463277346df00
U: play a song by the Beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("beatles")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/fd8de0a3c97b4d2527ebb8090b752578
U: what's the latest song by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:77sMIMlNaSURUAXq5coCxE"^^org.thingpedia.media-source:song("Fearless (Taylor’s Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"), genres=["pop", "post-teen pop"], release_date=new Date("2021-04-09T00:00:00.000Z"), popularity=69, energy=74.1, danceability=56.89999999999999, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: The answer is Fearless (Taylor’s Version). It is a song in the album Fearless (Taylor's Version) by Taylor Swift.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what's the most popular song by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:77sMIMlNaSURUAXq5coCxE"^^org.thingpedia.media-source:song("Fearless (Taylor’s Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"), genres=["pop", "post-teen pop"], release_date=new Date("2021-04-09T00:00:00.000Z"), popularity=69, energy=74.1, danceability=56.89999999999999, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: sort(popularity desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:0lx2cLdOt3piJbcaXIV74f"^^org.thingpedia.media-source:song("willow"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:2Xoteh7uEpea4TohMxjtaq"^^org.thingpedia.media-source:album("evermore"), genres=["pop", "post-teen pop"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=79, energy=57.4, danceability=39.2, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: The answer is willow. It is a song by Taylor Swift in the album evermore.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.play(playable="spotify:track:0lx2cLdOt3piJbcaXIV74f"^^org.thingpedia.media-source:song("willow"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:77sMIMlNaSURUAXq5coCxE"^^org.thingpedia.media-source:song("Fearless (Taylor’s Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"), genres=["pop", "post-teen pop"], release_date=new Date("2021-04-09T00:00:00.000Z"), popularity=69, energy=74.1, danceability=56.89999999999999, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: sort(popularity desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:0lx2cLdOt3piJbcaXIV74f"^^org.thingpedia.media-source:song("willow"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:2Xoteh7uEpea4TohMxjtaq"^^org.thingpedia.media-source:album("evermore"), genres=["pop", "post-teen pop"], release_date=new Date("2020-12-11T00:00:00.000Z"), popularity=79, energy=57.4, danceability=39.2, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:0lx2cLdOt3piJbcaXIV74f"^^org.thingpedia.media-source:song("willow"))
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0lx2cLdOt3piJbcaXIV74f"^^org.thingpedia.media-source:playable("willow"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played a song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/eba6c54bc9719dbe4dde18752529b6fe
U: play eminem
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("eminem")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^org.thingpedia.media-source:artist("Eminem")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7FIWs0pqAYbP91WWM0vlTQ"^^org.thingpedia.media-source:playable("Godzilla (feat. Juice WRLD)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4xkOaSrkexMciUUogZKVTS"^^org.thingpedia.media-source:playable("'Till I Collapse"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3yfqSUWxFvZELEM4PmlwIR"^^org.thingpedia.media-source:playable("The Real Slim Shady"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^org.thingpedia.media-source:playable("Without Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:15JINEqzVMv3SvJTAXAKED"^^org.thingpedia.media-source:playable("Love The Way You Lie"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7zl7kehxesNEo2pYkKXTSe"^^org.thingpedia.media-source:playable("Killer (feat. Jack Harlow & Cordae) - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5Z01UMMf7V1o0MzF86s6WJ"^^org.thingpedia.media-source:playable("Lose Yourself - From \"8 Mile\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2SL6oP2YAEQbqsrkOzRGO4"^^org.thingpedia.media-source:playable("Venom - Music From The Motion Picture"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3UmaczJpikHgJFyBTAJVoz"^^org.thingpedia.media-source:playable("Stan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7Ie9W94M7OjPoZVV216Xus"^^org.thingpedia.media-source:playable("Not Afraid"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=48];
A: I played music by Eminem on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^org.thingpedia.media-source:artist("Eminem")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7FIWs0pqAYbP91WWM0vlTQ"^^org.thingpedia.media-source:playable("Godzilla (feat. Juice WRLD)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4xkOaSrkexMciUUogZKVTS"^^org.thingpedia.media-source:playable("'Till I Collapse"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3yfqSUWxFvZELEM4PmlwIR"^^org.thingpedia.media-source:playable("The Real Slim Shady"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^org.thingpedia.media-source:playable("Without Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:15JINEqzVMv3SvJTAXAKED"^^org.thingpedia.media-source:playable("Love The Way You Lie"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7zl7kehxesNEo2pYkKXTSe"^^org.thingpedia.media-source:playable("Killer (feat. Jack Harlow & Cordae) - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5Z01UMMf7V1o0MzF86s6WJ"^^org.thingpedia.media-source:playable("Lose Yourself - From \"8 Mile\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2SL6oP2YAEQbqsrkOzRGO4"^^org.thingpedia.media-source:playable("Venom - Music From The Motion Picture"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3UmaczJpikHgJFyBTAJVoz"^^org.thingpedia.media-source:playable("Stan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7Ie9W94M7OjPoZVV216Xus"^^org.thingpedia.media-source:playable("Not Afraid"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=48];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6b538300572f8f940f959effd100f734
U: what can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="obhFBljb2g"^^com.icanhazdadjoke:id, text="I adopted my dog from a blacksmith. As soon as we got home he made a bolt for the door." }
C: ]];
A: I adopted my dog from a blacksmith. As soon as we got home he made a bolt for the door.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: anoter one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="obhFBljb2g"^^com.icanhazdadjoke:id, text="I adopted my dog from a blacksmith. As soon as we got home he made a bolt for the door." }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="o4MexXSClb"^^com.icanhazdadjoke:id, text="What did the judge say to the dentist? Do you swear to pull the tooth, the whole tooth and nothing but the tooth?" }
C: ]];
A: What did the judge say to the dentist? Do you swear to pull the tooth, the whole tooth and nothing but the tooth?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="obhFBljb2g"^^com.icanhazdadjoke:id, text="I adopted my dog from a blacksmith. As soon as we got home he made a bolt for the door." }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="o4MexXSClb"^^com.icanhazdadjoke:id, text="What did the judge say to the dentist? Do you swear to pull the tooth, the whole tooth and nothing but the tooth?" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: help me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="obhFBljb2g"^^com.icanhazdadjoke:id, text="I adopted my dog from a blacksmith. As soon as we got home he made a bolt for the door." }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="o4MexXSClb"^^com.icanhazdadjoke:id, text="What did the judge say to the dentist? Do you swear to pull the tooth, the whole tooth and nothing but the tooth?" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's the latest song by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="obhFBljb2g"^^com.icanhazdadjoke:id, text="I adopted my dog from a blacksmith. As soon as we got home he made a bolt for the door." }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="o4MexXSClb"^^com.icanhazdadjoke:id, text="What did the judge say to the dentist? Do you swear to pull the tooth, the whole tooth and nothing but the tooth?" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:track:77sMIMlNaSURUAXq5coCxE"^^org.thingpedia.media-source:song("Fearless (Taylor’s Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"), genres=["pop", "post-teen pop"], release_date=new Date("2021-04-09T00:00:00.000Z"), popularity=70, energy=74.1, danceability=56.89999999999999, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: The song with the highest date is Fearless (Taylor’s Version). It is a song in the album Fearless (Taylor's Version) by Taylor Swift.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: how about by eminem
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter contains(artists, null^^org.thingpedia.media-source:artist("eminem")))[1];
====
# recording/f0ba89cf5f4893ff17903e7f3369ca45
U: play the song megalovania
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter id =~ "megalovania" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played MEGALOVANIA on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music by cascada
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
A: I played music by Cascada on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: go to the next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play the album undertale soundtrack
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.album() filter id =~ "undertale soundtrack" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "undertale soundtrack")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2M2Ae2SvZe3fmzUtlVOV5Z"^^org.thingpedia.media-source:playable("UNDERTALE Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played UNDERTALE Soundtrack on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "undertale soundtrack")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2M2Ae2SvZe3fmzUtlVOV5Z"^^org.thingpedia.media-source:playable("UNDERTALE Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: set this song to repeat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum track);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "undertale soundtrack")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2M2Ae2SvZe3fmzUtlVOV5Z"^^org.thingpedia.media-source:playable("UNDERTALE Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum track)
C: #[results=[
C:   { repeat=enum track, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I set the repeat state for you to track.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: do not repeat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum off);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "undertale soundtrack")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2M2Ae2SvZe3fmzUtlVOV5Z"^^org.thingpedia.media-source:playable("UNDERTALE Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum track)
C: #[results=[
C:   { repeat=enum track, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum off)
C: #[results=[
C:   { repeat=enum off, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I set the repeat state for you to off.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "megalovania")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0N0d3kjwdY2h7UVuTdJGfp"^^org.thingpedia.media-source:artist("Cascada")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5YJtMNWKe55yr49cyJgxva"^^org.thingpedia.media-source:playable("Everytime We Touch"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:360ZhWvMnyXKYFG9Mqsm89"^^org.thingpedia.media-source:playable("Evacuate The Dancefloor - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p5jgCAGFDBIBs6ZbWIMvA"^^org.thingpedia.media-source:playable("Bad Boy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2rVa6UVT2f95l3bGcMGCWQ"^^org.thingpedia.media-source:playable("What Hurts The Most"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26lxGeXwldBZCELoTUp0r6"^^org.thingpedia.media-source:playable("Miracle"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6VByQDfEa38l0Rpjw7gjDv"^^org.thingpedia.media-source:playable("1 Last Dance - Klaas Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3vH9GgabC2MhLdkYhJqajw"^^org.thingpedia.media-source:playable("Truly Madly Deeply - Radio Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Zfq7r0v4FKeoxwhyLYSyb"^^org.thingpedia.media-source:playable("Evacuate the Dancefloor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dLMK9i5dLoYYrGXFdlcT3"^^org.thingpedia.media-source:playable("Because the Night"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5jgeoj4zIu3haLuQVjBrbi"^^org.thingpedia.media-source:playable("Dangerous - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "undertale soundtrack")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2M2Ae2SvZe3fmzUtlVOV5Z"^^org.thingpedia.media-source:playable("UNDERTALE Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum track)
C: #[results=[
C:   { repeat=enum track, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_repeat(repeat=enum off)
C: #[results=[
C:   { repeat=enum off, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/f1dec4a73b5f6a455a0264af5f7f831a
U: tell me about the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=25.9C, wind_speed=3.8mps, humidity=36.3, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
A: It is sunny today in Stanford, Palo Alto and the temperature is 78.6 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is that in celsius?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
UT: [temperature] of @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"));
====
# recording/cfd8c0f0a3ee931d7fd8faaa99cc810b
U: play stone roses
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("stone roses")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1lYT0A0LV5DUfxr6doRP3d"^^org.thingpedia.media-source:artist("The Stone Roses")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:758wEKVqfYopJIHYWdLVd4"^^org.thingpedia.media-source:playable("I Wanna Be Adored - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:6JvEXmRh3l2acBzvqavgT9"^^org.thingpedia.media-source:playable("Love Spreads"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:3clIHVzJ9J2rvvrFUKLICo"^^org.thingpedia.media-source:playable("She Bangs the Drums - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:2mv6GY70UsHiTCGQZ4JfgC"^^org.thingpedia.media-source:playable("Fools Gold - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:4CWgqHRJjDLd2PCedMz8eY"^^org.thingpedia.media-source:playable("Waterfall - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:0bZelokqNQicLQfLU1Ayw8"^^org.thingpedia.media-source:playable("Made of Stone - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:5ikdUUm6JbnEVnp35c7dvy"^^org.thingpedia.media-source:playable("I Am the Resurrection - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:2erQ477GekpdP5l3xp5adl"^^org.thingpedia.media-source:playable("Shoot You Down - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:433EQGQOsQjWvD5eImXkHf"^^org.thingpedia.media-source:playable("This Is the 1 - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:6sDSDCrz36fF78hfwvAEmq"^^org.thingpedia.media-source:playable("Sally Cinnamon - Single Mix"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=37];
A: I played music by The Stone Roses on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/0bb94bf160fe9e94907ac795763becc2
U: stop music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, music is already paused.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play my favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/3fdf70c6361b1c4cfbbcdfe90cd9cef8
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[
C:   {}
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/6b180527e095b882787087118589990d
U: add currently playing to playlist gizmo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="gizmo", song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="gizmo", song=id)
C: #[results=[]]
C: #[error=enum no_song_playing];
A: Did you mean get the currently playing track and then add the id to gizmo?
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/00ba786bdfcf33480d0eced0324c5094
U: pause music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play playlist z
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "z" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "z")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:playlist:1W0WZRjzyIldfCfVxJYB9o"^^org.thingpedia.media-source:playable("Z"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Z on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "z")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:playlist:1W0WZRjzyIldfCfVxJYB9o"^^org.thingpedia.media-source:playable("Z"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play madonna
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("madonna")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "z")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:playlist:1W0WZRjzyIldfCfVxJYB9o"^^org.thingpedia.media-source:playable("Z"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:6tbjWDEIzxoDsBA1FuhfPW"^^org.thingpedia.media-source:artist("Madonna")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:22sLuJYcvZOSoLLRYev1s5"^^org.thingpedia.media-source:playable("Material Girl"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:1z3ugFmUKoCzGsI6jdY4Ci"^^org.thingpedia.media-source:playable("Like 1 Prayer"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:3850dYVgOFIXJh5U4BFEWH"^^org.thingpedia.media-source:playable("Hung Up"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:1ZPlNanZsJSPK5h9YZZFbZ"^^org.thingpedia.media-source:playable("Like 1 Virgin"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:1oHClQEgDmmbcEx12Kc5nZ"^^org.thingpedia.media-source:playable("4 Minutes (feat. Justin Timberlake & Timbaland)"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:27QvYgBk0CHOVHthWnkuWt"^^org.thingpedia.media-source:playable("Vogue"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:2m0M7YqCy4lXfedh18qd8N"^^org.thingpedia.media-source:playable("Into the Groove"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:6r8k1vznHrzlEKYxL4dZEe"^^org.thingpedia.media-source:playable("La Isla Bonita"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:3ibAzRj9JnowdoLkyllk3n"^^org.thingpedia.media-source:playable("Holiday"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:6A8OnjnpShshNpcqWtZRjr"^^org.thingpedia.media-source:playable("Papa Don't Preach"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
A: I played music by Madonna on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play revolver
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "revolver" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/b560497a73f4d7e457ef3bb95d4f5eba
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
====
# recording/f02e2c91be77719d6a3038516ebb8302
U: add this song to my library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/64f83ab4118f94e1f866f6d57bc5fa01
U: play artist metallica
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("metallica")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/2015a516647c7bb9015bb2d5ac28c711
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12878
U: council.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12839
U: thanks.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12782
U: play welcome to miami by will smith.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("will smith")) && id =~ "welcome to miami" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12779
U: turn this * * * * off.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12734
U: play some dead mouse
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("dead mouse")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12726
U: play some funky music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "funky") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12667
U: play some classical music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "classical") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12666
U: play some beethoven.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("beethoven")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12658
U: thanks for that.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12572
U: add this to my playlist, please.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
====
# log-dev/12569
U: add this to my playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
====
# log-dev/12566
U: play some mac dre.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("mac dre")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12549
U: stop. sorry i did not understand that.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12495
U: same computer. stop.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12493
U: play some tom petty.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("tom petty")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12487
U: play that emancipator album i like.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.album() filter id =~ "emancipator" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12440
U: play cure music okay
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12438
U: play me my fave band the cure
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12437
U: play me some cure music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12436
U: play me some of that there cure music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12435
U: play some reggae
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12417
U: play phil collins
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("phil collins")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12411
U: like this podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# log-dev/12388
U: play my favorites.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12383
U: play some music on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12087
U: play arm chair podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "arm chair" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12071
U: play npr podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "npr" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12067
U: play podcast for kids.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter contains~(genres, "kids") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12066
U: play kids podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter contains~(genres, "kids") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12063
U: play armchair podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "armchair" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12058
U: play the arm chair podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "arm chair" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12056
U: play joe rogan podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "joe rogan" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12052
U: yes, no, that's not the right.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/11961
U: reflect well on play, some slayer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/11937
U: play some hip hop.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "hip hop") => @org.thingpedia.media-player.play(playable=id);
====
# recording/7610f4baf0e687561dbcdc1f5af0b8c0
U: tell me the weather.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=1.4mps, humidity=65.4, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 21.5 degrees Celsius.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Hey Jean, how about tomorrow?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=1.4mps, humidity=65.4, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=18.9C, wind_speed=3.1mps, humidity=66.3, cloudiness=41.4, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-11-04T07:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It will be cloudy tomorrow in Palo Alto, California and the temperature will be 18.9 degrees Celsius.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: find me some Chinese food.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("chinese"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=1.4mps, humidity=65.4, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=18.9C, wind_speed=3.1mps, humidity=66.3, cloudiness=41.4, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-11-04T07:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese"))
C: #[results=[
C:   { id="uVploy81jeEvlvPTA6cgjw"^^com.yelp:restaurant("Mandarin Roots"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/AnLZUIDEHJsFcEMyzoggzQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/mandarin-roots-palo-alto-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=569, geo=new Location(37.42028, -122.13601, "3345 El Camino Real, Palo Alto, CA"), phone="+16505658868"^^tt:phone_number },
C:   { id="w17EBwOBXKaYIiGf7LTD9Q"^^com.yelp:restaurant("Jing Jing Chinese Gourmet"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/fsjBluohoq0fQYUAN8fD4g/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/jing-jing-chinese-gourmet-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=3.5, review_count=406, geo=new Location(37.44514, -122.16306, "443 Emerson St, Palo Alto, CA"), phone="+16503286885"^^tt:phone_number },
C:   { id="ZimdCe2xCAOOZjt1aQAMvg"^^com.yelp:restaurant("Chef Chu's"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/Zx0yJrh7sabsjFRbGyFEEw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/chef-chus-los-altos?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4, review_count=1882, geo=new Location(37.4006, -122.11367, "1067 N San Antonio Rd, Los Altos, CA"), phone="+16509482696"^^tt:phone_number },
C:   { id="aLXs35royGdxEtfRmesaTw"^^com.yelp:restaurant("Green Elephant Gourmet"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/KRkh9Sxnhja1G0tNMLnIdQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/green-elephant-gourmet-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "burmese"^^com.yelp:restaurant_cuisine("Burmese")], price=enum moderate, rating=3.5, review_count=286, geo=new Location(37.4187397433899, -122.109109532186, "3950 Middlefield Rd, Palo Alto, CA"), phone="+16504947391"^^tt:phone_number },
C:   { id="LjI8BVHVg5vNEHYuRyxtHw"^^com.yelp:restaurant("Peking Duck"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/0kzgVrhDcpPDAaeuef1y8g/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/peking-duck-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=3, review_count=353, geo=new Location(37.428471817387894, -122.14277685914219, "151 S California Ave, Palo Alto, CA"), phone="+16503219388"^^tt:phone_number },
C:   { id="WWyaK9oskNOpjCsO6MA7Pw"^^com.yelp:restaurant("P.F. Chang's"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/SR0mlHWyUwVBqxBBbeGRaw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/p-f-changs-palo-alto-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion")], price=enum moderate, rating=2.5, review_count=787, geo=new Location(37.4436714574102, -122.168239921338, "900 Stanford Shopping Ctr, Bldg. W, Palo Alto, CA"), phone="+16503301782"^^tt:phone_number },
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/Vn_EOReqLYMLSGMSDIOlXQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=514, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA"), phone="+16509616888"^^tt:phone_number },
C:   { id="zg83ulOQw1m18kLoNHcXUA"^^com.yelp:restaurant("Phil's Kitchen"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/rpCFoxuH71QLwDoveRY9Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/phils-kitchen-menlo-park?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "hawaiian"^^com.yelp:restaurant_cuisine("Hawaiian"), "bbq"^^com.yelp:restaurant_cuisine("Barbeque")], price=enum moderate, rating=4, review_count=515, geo=new Location(37.4536749590389, -122.184342294931, "625 Oak Grove Ave, Unit B, Menlo Park, CA"), phone="+16505614296"^^tt:phone_number },
C:   { id="cm8oHti0SIPPqR8PcmcSvA"^^com.yelp:restaurant("Garden Fresh"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/EnKogtsi9rjeTVAbGjTY7Q/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/garden-fresh-mountain-view-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "noodles"^^com.yelp:restaurant_cuisine("Noodles"), "soup"^^com.yelp:restaurant_cuisine("Soup")], price=enum moderate, rating=4, review_count=1341, geo=new Location(37.387904, -122.089053, "1245 W El Camino Real, Mountain View, CA"), phone="+16502541688"^^tt:phone_number },
C:   { id="IccyNXafP876EY6vkHetbg"^^com.yelp:restaurant("MP Mongolian BBQ"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/MBjcL710bbS2OLNOjvlwvQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/mp-mongolian-bbq-menlo-park?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["buffets"^^com.yelp:restaurant_cuisine("Buffets"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4, review_count=311, geo=new Location(37.451705, -122.178848, "700 El Camino Real, Ste 170, Menlo Park, CA"), phone="+16508531118"^^tt:phone_number }
C: ]]
C: #[count=12];
A: I see Mandarin Roots, Jing Jing Chinese Gourmet, and Chef Chu's. They're Chinese moderate restaurants.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: tell me a joke.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
====
# recording/5eb80b18c808317650b39a127f97d1f8
U: play my playlist elevator music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "elevator music" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "elevator music")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:0NUtHPgeWm833NU14csQZi"^^org.thingpedia.media-source:playable("Elevator music"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Elevator music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Hey JD pause.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "elevator music")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:0NUtHPgeWm833NU14csQZi"^^org.thingpedia.media-source:playable("Elevator music"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[
C:   {}
C: ]];
A: Your request was completed successfully.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: tell me news about San Francisco.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article(keyword="san francisco");
====
# recording/09d5660a5b521ec7ec0858f9b4e1336e
U: what's your name?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
A: I'm Genie, an open-source virtual assistant created at Stanford.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's the news about today's politics in the United States?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article(keyword="politics in the united states");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @com.smartnews.article(keyword="politics in the united states")
C: #[results=[
C:   { id="4346253951096588000"^^com.smartnews:article, title="NJ election 2021: Live updates as Ocean County GOP wins county races", author="Mike Davis, Joshua Chung, Kathleen Hopkins, Jerry Carino, Michael L. Diamond, Ken Serrano, Alex N. Gecan, Susanne Cervenka, Amanda Oglesby, Dan Radel, Erik Larsen and Jean Mikle, Asbury Park Press", source="Asbury Park Press", summary=" Polls are open from 6 a.m. to 8 p.m. Registered voters were allowed to cast their ballots from Oct. 23 to Oct. 31 in-person at select polling places . This year's election allows the option to vote by mail, but it's not mandatory .", link="https://www.app.com/story/news/local/elections/2021/11/02/nj-election-2021-live-updates-monmouth-ocean-results/6238065001/"^^tt:url, category=["politics policy"^^com.smartnews:category("politics policy"), "politic"^^com.smartnews:category("politic"), "political"^^com.smartnews:category("political"), "policy"^^com.smartnews:category("policy"), "election"^^com.smartnews:category("election")], date=new Date("2021-11-02T09:01:24.000Z"), mention=["new jersey", "election day", "ocean county new jersey", "republican party united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/headline_4346253951096587939.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/summary_4346253951096587939.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346224332570104000"^^com.smartnews:article, title="‘A new American fault line’: How new election laws will make it harder for 55 million to vote", author="Nick Penzenstadler, Phillip M. Bailey and Rachel Looker, USA TODAY", source="USA TODAY", summary=" USA TODAY analysis of 254 new laws in 45 states passed since 2020 . Americans overall will lose more than 160 days in absentee voting availability . Impact of the new laws varies by voting precinct and key battleground states .", link="https://www.usatoday.com/story/news/politics/2021/11/02/voting-access-limited-new-election-laws/8568850002/"^^tt:url, category=["politics policy"^^com.smartnews:category("politics policy"), "politic"^^com.smartnews:category("politic"), "political"^^com.smartnews:category("political"), "policy"^^com.smartnews:category("policy"), "election"^^com.smartnews:category("election")], date=new Date("2021-11-02T07:00:03.000Z"), mention=["election day", "united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346224332570103919.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346224332570103919.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346269332175588000"^^com.smartnews:article, title="Meet Arabella Advisors, the Left’s Dark-Money Manager", author="Emma Green", source="The Atlantic", summary=" Democrats have quietly pulled ahead of Republicans in so-called dark-money spending . The groups that spend money this way tend to have innocuous-sounding names . The Sixteen Thirty Fund was the indisputable heavyweight of Democratic dark money .", link="https://www.theatlantic.com/politics/archive/2021/11/arabella-advisors-money-democrats/620553/"^^tt:url, category=["politics policy"^^com.smartnews:category("politics policy"), "politic"^^com.smartnews:category("politic"), "political"^^com.smartnews:category("political"), "policy"^^com.smartnews:category("policy"), "commentary"^^com.smartnews:category("commentary")], date=new Date("2021-11-02T06:01:56.000Z"), mention=["dupont circle", "opensecrets", "montana", "washington d.c.", "republican party united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346269332175587911.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346269332175587911.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346193845868825000"^^com.smartnews:article, title="Biden announces rule to limit methane leaks, targeting oil and gas industry at COP26 climate summit", author="Joey Garrison and Kim Hjelmgaard, USA TODAY", source="USA TODAY", summary=" Methane contributes to about half the world's global warming, Biden says . The U.S. and more than 90 countries have signed a pledge to reduce methane emissions by 2030 .", link="https://www.usatoday.com/story/news/politics/2021/11/02/biden-targets-forest-protection-methane-emissions-day-2-cop-26/6239713001/"^^tt:url, category=["environment"^^com.smartnews:category("environment")], date=new Date("2021-11-02T05:01:08.000Z"), mention=["glasgow", "scotland", "joe biden", "united nations", "2021 united nations climate change conference"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/headline_4346193845868825245.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/summary_4346193845868825245.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346122206623826400"^^com.smartnews:article, title="Biden, Johnson and Merkel launch dinner-time diplomacy", source="Daily Mail", summary=" World leaders joined hundreds for biggest gathering of Government representatives since the birth of the United Nations . Attended lavish royal reception at Glasgow's Kelvingrove Art Gallery and Museum with Prince Charles, Prince William, Kate Middleton and the Duchess of Cornwall .", link="https://www.dailymail.co.uk/news/article-10154599/Biden-Johnson-Merkel-Macron-launch-dinner-time-diplomacy.html"^^tt:url, category=["world"^^com.smartnews:category("world"), "uk ireland"^^com.smartnews:category("uk ireland"), "uk"^^com.smartnews:category("uk"), "northern ireland"^^com.smartnews:category("northern ireland")], date=new Date("2021-11-01T23:01:28.000Z"), mention=["glasgow", "government", "boris johnson", "united nations", "joe biden"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346122206623826558.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346122206623826558.mp3"^^tt:url, keyword="politics in the united states" }
C: ]];
A: Here is the news.
A: NJ election 2021: Live updates as Ocean County GOP wins county races.
A: ‘A new American fault line’: How new election laws will make it harder for 55 million to vote.
A: Meet Arabella Advisors, the Left’s Dark-Money Manager.
A: Biden announces rule to limit methane leaks, targeting oil and gas industry at COP26 climate summit.
A: Biden, Johnson and Merkel launch dinner-time diplomacy.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_many;
U: Will it rain this weekend?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=new Date(enum saturday));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @com.smartnews.article(keyword="politics in the united states")
C: #[results=[
C:   { id="4346253951096588000"^^com.smartnews:article, title="NJ election 2021: Live updates as Ocean County GOP wins county races", author="Mike Davis, Joshua Chung, Kathleen Hopkins, Jerry Carino, Michael L. Diamond, Ken Serrano, Alex N. Gecan, Susanne Cervenka, Amanda Oglesby, Dan Radel, Erik Larsen and Jean Mikle, Asbury Park Press", source="Asbury Park Press", summary=" Polls are open from 6 a.m. to 8 p.m. Registered voters were allowed to cast their ballots from Oct. 23 to Oct. 31 in-person at select polling places . This year's election allows the option to vote by mail, but it's not mandatory .", link="https://www.app.com/story/news/local/elections/2021/11/02/nj-election-2021-live-updates-monmouth-ocean-results/6238065001/"^^tt:url, category=["politics policy"^^com.smartnews:category("politics policy"), "politic"^^com.smartnews:category("politic"), "political"^^com.smartnews:category("political"), "policy"^^com.smartnews:category("policy"), "election"^^com.smartnews:category("election")], date=new Date("2021-11-02T09:01:24.000Z"), mention=["new jersey", "election day", "ocean county new jersey", "republican party united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/headline_4346253951096587939.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/summary_4346253951096587939.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346224332570104000"^^com.smartnews:article, title="‘A new American fault line’: How new election laws will make it harder for 55 million to vote", author="Nick Penzenstadler, Phillip M. Bailey and Rachel Looker, USA TODAY", source="USA TODAY", summary=" USA TODAY analysis of 254 new laws in 45 states passed since 2020 . Americans overall will lose more than 160 days in absentee voting availability . Impact of the new laws varies by voting precinct and key battleground states .", link="https://www.usatoday.com/story/news/politics/2021/11/02/voting-access-limited-new-election-laws/8568850002/"^^tt:url, category=["politics policy"^^com.smartnews:category("politics policy"), "politic"^^com.smartnews:category("politic"), "political"^^com.smartnews:category("political"), "policy"^^com.smartnews:category("policy"), "election"^^com.smartnews:category("election")], date=new Date("2021-11-02T07:00:03.000Z"), mention=["election day", "united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346224332570103919.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346224332570103919.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346269332175588000"^^com.smartnews:article, title="Meet Arabella Advisors, the Left’s Dark-Money Manager", author="Emma Green", source="The Atlantic", summary=" Democrats have quietly pulled ahead of Republicans in so-called dark-money spending . The groups that spend money this way tend to have innocuous-sounding names . The Sixteen Thirty Fund was the indisputable heavyweight of Democratic dark money .", link="https://www.theatlantic.com/politics/archive/2021/11/arabella-advisors-money-democrats/620553/"^^tt:url, category=["politics policy"^^com.smartnews:category("politics policy"), "politic"^^com.smartnews:category("politic"), "political"^^com.smartnews:category("political"), "policy"^^com.smartnews:category("policy"), "commentary"^^com.smartnews:category("commentary")], date=new Date("2021-11-02T06:01:56.000Z"), mention=["dupont circle", "opensecrets", "montana", "washington d.c.", "republican party united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346269332175587911.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346269332175587911.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346193845868825000"^^com.smartnews:article, title="Biden announces rule to limit methane leaks, targeting oil and gas industry at COP26 climate summit", author="Joey Garrison and Kim Hjelmgaard, USA TODAY", source="USA TODAY", summary=" Methane contributes to about half the world's global warming, Biden says . The U.S. and more than 90 countries have signed a pledge to reduce methane emissions by 2030 .", link="https://www.usatoday.com/story/news/politics/2021/11/02/biden-targets-forest-protection-methane-emissions-day-2-cop-26/6239713001/"^^tt:url, category=["environment"^^com.smartnews:category("environment")], date=new Date("2021-11-02T05:01:08.000Z"), mention=["glasgow", "scotland", "joe biden", "united nations", "2021 united nations climate change conference"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/headline_4346193845868825245.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211103/voice/summary_4346193845868825245.mp3"^^tt:url, keyword="politics in the united states" },
C:   { id="4346122206623826400"^^com.smartnews:article, title="Biden, Johnson and Merkel launch dinner-time diplomacy", source="Daily Mail", summary=" World leaders joined hundreds for biggest gathering of Government representatives since the birth of the United Nations . Attended lavish royal reception at Glasgow's Kelvingrove Art Gallery and Museum with Prince Charles, Prince William, Kate Middleton and the Duchess of Cornwall .", link="https://www.dailymail.co.uk/news/article-10154599/Biden-Johnson-Merkel-Macron-launch-dinner-time-diplomacy.html"^^tt:url, category=["world"^^com.smartnews:category("world"), "uk ireland"^^com.smartnews:category("uk ireland"), "uk"^^com.smartnews:category("uk"), "northern ireland"^^com.smartnews:category("northern ireland")], date=new Date("2021-11-01T23:01:28.000Z"), mention=["glasgow", "government", "boris johnson", "united nations", "joe biden"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346122206623826558.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346122206623826558.mp3"^^tt:url, keyword="politics in the united states" }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum saturday), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.8C, wind_speed=2.1mps, humidity=78.1, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, date=new Date("2021-11-06T07:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It will be cloudy on Saturday in Palo Alto, California and the temperature will be 60.4 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what about in Mountain View?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=new Date(enum saturday), location=new Location("mountain view"));
====
# recording/e666d01910bce5008eaedcdc0452eedf
U: tell me a joke.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="GQuzAAXgah"^^com.icanhazdadjoke:id, text="Some people say that I never got over my obsession with Phil Collins.\r\nBut take a look at me now." }
C: ]];
A: Some people say that I never got over my obsession with Phil Collins. But take a look at me now.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: What's your favorite type of music?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_preference);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="GQuzAAXgah"^^com.icanhazdadjoke:id, text="Some people say that I never got over my obsession with Phil Collins.\r\nBut take a look at me now." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_preference)
C: #[results=[
C:   { reply="I don't have a favorite one yet.", question=enum about_almond_preference }
C: ]];
A: I don't have a favorite one yet.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what kind of music should I listen to?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="GQuzAAXgah"^^com.icanhazdadjoke:id, text="Some people say that I never got over my obsession with Phil Collins.\r\nBut take a look at me now." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_preference)
C: #[results=[
C:   { reply="I don't have a favorite one yet.", question=enum about_almond_preference }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable()
C: #[results=[
C:   { id="spotify:track:5L9MJsGqzTRD09rSzHkCDy"^^org.thingpedia.media-source:playable("Home"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=60, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=69, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:1MoAGaJNyPwaLSB6iTLNg1"^^org.thingpedia.media-source:playable("Undyne"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=49, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:3KHbBpwYdlM6uKJirvCrEA"^^org.thingpedia.media-source:playable("Determination"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=51, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:4Yqrr5SMB84skeJ8cupJgs"^^org.thingpedia.media-source:playable("Don't Give Up"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=49, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:4wBMMqeY2NnFnStBIPHxyG"^^org.thingpedia.media-source:playable("Oh! One True Love"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=48, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:6eTcxkl9G7C2mwejLJ7Amm"^^org.thingpedia.media-source:playable("An Ending"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=51, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:0KQnhlCVldP6qicvBy9IJ5"^^org.thingpedia.media-source:playable("Dating Fight!"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=50, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:0gt76DuMx7F3UZJPg7jcC5"^^org.thingpedia.media-source:playable("Quiet Water"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=57, __device="XXXXXXXX"^^tt:device_id },
C:   { id="spotify:track:0w5CRIokPrQAAq7OdIKesr"^^org.thingpedia.media-source:playable("SAVE The World"), artists=["spotify:artist:57DlMWmbVIf2ssJ8QBpBau"^^org.thingpedia.media-source:artist("Toby Fox")], genres=["dream smp", "indie game soundtrack"], release_date=new Date("2015-09-15T00:00:00.000Z"), popularity=54, __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
A: I see Home, MEGALOVANIA, and Undyne. They're recordings by Toby Fox released in September 14, 2015.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: can you recommend a playlist for my party this weekend?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist();
====
# recording/c3fed32ab5b12c18e400a86cb5d2cf87
U: get me the news and the weather.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4345975314707385300"^^com.smartnews:article, title="ON TAP", author="Garden City Telegram", source="Garden City Telegram", summary=" Football: (State playoffs - Regionals) - 7 p.m., Class 3A, Holcomb at Andale; Class 2A, Beloit at Cimarron; Class 8-man Division I, Trego Co. at Meade . Basketball: 7 p.m., Friends University JV at GCCC men. Football: (Region Vi Quarterfinals) - 1 p.m., GCCC at Hutchinson .", link="https://www.gctelegram.com/story/sports/2021/11/01/tap/6230150001/"^^tt:url, category=["sports"^^com.smartnews:category("sports"), "basketball"^^com.smartnews:category("basketball")], date=new Date("2021-11-01T14:34:14.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345975314707385394.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345975314707385394.mp3"^^tt:url },
C:   { id="4345975336601652000"^^com.smartnews:article, title="Lease roundup: Coca-Cola signs $4M Pembroke Park lease renewal", author="By Lidia Dinkova", source="The Real Deal South Florida", summary=" Coca-Cola Beverages renewed its 93,700-square-foot lease at Seneca Industrial Park in Pembroke Park . Three tenants signed leases for 6,683 square feet at the Plantation Walk mixed-use development .", link="https://therealdeal.com/miami/2021/11/01/lease-roundup-coca-cola-signs-4m-pembroke-park-lease-renewal/"^^tt:url, category=["business"^^com.smartnews:category("business"), "real estate"^^com.smartnews:category("real estate")], date=new Date("2021-11-01T14:30:32.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345975336601652281.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345975336601652281.mp3"^^tt:url },
C:   { id="4345973952900768300"^^com.smartnews:article, title="Farmington Hills Halloween house party turns into Halloween Fright Night after shots fired", author="Susan Vela, Hometownlife.com", source="Hometown Life", summary=" Multiple 911 callers reported a fight and gunfire . Police found no one hurt from the incident but recovered multiple shell casings . The home was struck by multiple bullets .", link="https://www.hometownlife.com/story/news/local/farmington-hills/2021/11/01/farmington-hills-halloween-party-turns-into-real-fright-night/6232217001/"^^tt:url, category=["uncertain"^^com.smartnews:category("uncertain")], date=new Date("2021-11-01T14:25:43.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345973952900768448.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345973952900768448.mp3"^^tt:url },
C:   { id="4345975288631400400"^^com.smartnews:article, title="Halloween chaos as teenagers hurl fireworks at police and residents in Stockport", author="Holly Bancroft", source="The Independent", summary=" A group of 25 young people launched fireworks and threw objects at emergency service workers and strangers in Stockport on Sunday night . Photos of police in riot gear were reportedly taken at the scene . A road was closed off as fireworks and other missiles were thrown .", link="https://www.independent.co.uk/news/uk/crime/stockport-teenagers-fireworks-police-residents-b1948933.html"^^tt:url, category=["uk ireland"^^com.smartnews:category("uk ireland"), "uk"^^com.smartnews:category("uk"), "northern ireland"^^com.smartnews:category("northern ireland"), "world"^^com.smartnews:category("world")], date=new Date("2021-11-01T14:25:33.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345975288631400317.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345975288631400317.mp3"^^tt:url },
C:   { id="4345974003098195500"^^com.smartnews:article, title="Latest Pets Available For Adoption In The Five Towns Area", author="Pet News", source="Patch", summary=" There are thousands of dogs, cats and other animals without a home in New York . If you're on a search for a new fur child, consider starting at a local rescue facility . We've created this week's list of pets available for adoption near you .", link="https://patch.com/new-york/fivetowns/latest-pets-available-adoption-five-towns-area-nodx-20211101"^^tt:url, category=["animal"^^com.smartnews:category("animal")], date=new Date("2021-11-01T14:25:06.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345974003098195300.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345974003098195300.mp3"^^tt:url },
C:   { id="4345974017589519000"^^com.smartnews:article, title="At Bandon Dunes, the experience doesn’t end on the 18th hole", author="Martin Kaufmann", source="Golfweek", summary=" Bandon Dunes founder Mike Keiser assigned the wake-up recording to his architect, David McLay Kidd . Kidd said he was ‘particularly passionate about that line’ because it captured the vision he and Keiser shared for the property .", link="https://golfweek.usatoday.com/2021/11/01/at-bandon-dunes-the-experience-doesnt-end-on-the-18th-hole/"^^tt:url, category=["sports"^^com.smartnews:category("sports"), "golf"^^com.smartnews:category("golf")], date=new Date("2021-11-01T14:17:06.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345974017589519067.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345974017589519067.mp3"^^tt:url },
C:   { id="4345948808010538500"^^com.smartnews:article, title="The FDA has officially authorized Pfizer’s COVID-19 vaccine for kids 5-11", source="Business Insider", summary=" The FDA has authorized a low-dose version of the Pfizer/BioNTech COVID-19 vaccine for kids aged 5-11 . Samsung has a new healthcare strategy that involves lots of investing . A top health official says Ginkgo Bioworks isn't respecting public health .", link="https://www.businessinsider.com/insiders-top-healthcare-stories-for-november-1-2021-10"^^tt:url, category=["health"^^com.smartnews:category("health")], date=new Date("2021-11-01T12:47:11.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345948808010538608.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345948808010538608.mp3"^^tt:url },
C:   { id="4345948384767520000"^^com.smartnews:article, title="A Kentucky student is likely the latest binge drinking death. Colleges are trying to stop it", author="Krista Johnson, Louisville Courier Journal", source="The Courier Journal", summary=" There was Timothy Piazza at Penn State, who died in 2017 from a fractured skull and shattered spleen after downing 18 drinks in less than two hours . A freshman at Louisiana State University, Maxwell Gruver, choked on his own vomit . Olivia Chutich, 19, was an Iowa State University student who died from hypothermia and alcohol poisoning after she spent the night outside in 3-degree weather .", link="https://www.courier-journal.com/story/news/2021/11/01/colleges-prevent-students-dying-excessive-drinking-university-kentucky-lofton-hazelwood/6105809001/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-01T12:46:55.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345948384767519550.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345948384767519550.mp3"^^tt:url },
C:   { id="4345948966286798000"^^com.smartnews:article, title="Queen pictured driving around Windsor Castle estate as she takes two weeks’ rest", author="Michael Howie", source="Evening Standard", summary=" The Queen was pictured on Monday driving by herself around her Windsor Castle estate . The 95-year-old monarch was wearing a headscarf and sunglasses behind the wheel of the car . Buckingham Palace said her doctors had instructed her to rest and avoid official visits for at least two weeks .", link="https://www.standard.co.uk/news/uk/queen-rest-medical-advice-royal-driving-windsor-castle-estate-b963668.html"^^tt:url, category=["uk ireland"^^com.smartnews:category("uk ireland"), "uk"^^com.smartnews:category("uk"), "northern ireland"^^com.smartnews:category("northern ireland"), "world"^^com.smartnews:category("world")], date=new Date("2021-11-01T12:46:47.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345948966286797861.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345948966286797861.mp3"^^tt:url },
C:   { id="4345948728218092500"^^com.smartnews:article, title="Red Bulls Expert Guide: November 1, 2021", author="Ross Haley", source="Once A Metro", summary=" Cristian C ?? sseres discusses his increased goal scoring and how the club is putting him in a position to succeed .", link="https://www.onceametro.com/2021/11/1/22756896/red-bulls-expert-guide-november-1-2021"^^tt:url, category=["soccer"^^com.smartnews:category("soccer"), "sports"^^com.smartnews:category("sports")], date=new Date("2021-11-01T12:45:00.000Z"), headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345948728218092290.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345948728218092290.mp3"^^tt:url }
C: ]]
C: #[count=50];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=16C, wind_speed=3.7mps, humidity=94.5, cloudiness=100, fog=0, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is raining today in Palo Alto, California and the temperature is 16 degrees Celsius.
A: ON TAP.  Football: (State playoffs - Regionals) - 7 p.m., Class 3A, Holcomb at Andale; Class 2A, Beloit at Cimarron; Class 8-man Division I, Trego Co. at Meade . Basketball: 7 p.m., Friends University JV at GCCC men. Football: (Region Vi Quarterfinals) - 1 p.m., GCCC at Hutchinson ..
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: cancel.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/8bd99f1d59333471033e28963b3620e5
U: play a KQED podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "kqed" => @org.thingpedia.media-player.play(playable=id);
====
# recording/f1891a49ea9022b57f706d7d7f10a2bb
U: Tell me a joke and tell me the news.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
UT: @com.smartnews.article();
====
# recording/b96592d7b95a7080a5d296f831e7b78d
U: tell me the weather and the news.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
UT: @com.smartnews.article();
====
# recording/5c22cb53ae22e14fddf944c4d63aaa4a
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: what can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: can you get the latest soccer matches for me?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(date desc of @com.goal_smart.fixtures())[1];
====
# recording/0e75e5582f5fdcc6c495d5320d1e7657
U: Play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/1aafa8f51ea4013979191ba4c20d7598
U: play the playlist me and Earl and the dying girl.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "me and earl and the dying girl" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "me and earl and the dying girl")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:1pxAxtOMjoAGrqrlMWUigV"^^org.thingpedia.media-source:playable("Me and Earl and the Dying Girl - Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Me and Earl and the Dying Girl - Soundtrack on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: make a playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.create_playlist();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "me and earl and the dying girl")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:1pxAxtOMjoAGrqrlMWUigV"^^org.thingpedia.media-source:playable("Me and Earl and the Dying Girl - Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
A: What do you want to name your playlist?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(name);
AT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
U: Demo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="Demo");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "me and earl and the dying girl")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:1pxAxtOMjoAGrqrlMWUigV"^^org.thingpedia.media-source:playable("Me and Earl and the Dying Girl - Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="Demo")
C: #[results=[
C:   { name="Demo", __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I created a new playlist named Demo.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Add this song to my playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "me and earl and the dying girl")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:1pxAxtOMjoAGrqrlMWUigV"^^org.thingpedia.media-source:playable("Me and Earl and the Dying Girl - Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="Demo")
C: #[results=[
C:   { name="Demo", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
A: What playlist do you want to add to?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(playlist);
AT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
U: Demo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="Demo", song=id);
====
# recording/94a0eae95a7ca15795cac42408c1f310
U: Play some Daft Punk.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("daft punk")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/ff355190e8baceb8e49ad1c823ee2056
U: Play my playlist fuchsia.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "fuchsia" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "fuchsia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6tvw4h0XDDwICf0x8Kl4Da"^^org.thingpedia.media-source:playable("fuchsia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played fuchsia on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add this song to my playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "fuchsia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6tvw4h0XDDwICf0x8Kl4Da"^^org.thingpedia.media-source:playable("fuchsia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
A: What playlist do you want to add to?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(playlist);
AT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
U: Fuchsia.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="Fuchsia.", song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "fuchsia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6tvw4h0XDDwICf0x8Kl4Da"^^org.thingpedia.media-source:playable("fuchsia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="Fuchsia.", song=id)
C: #[results=[
C:   { playlist="Fuchsia.", song="spotify:track:6qtoHId8ZoJ3J5JG6eOqJB"^^org.thingpedia.media-source:song("nothing else i could do"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added a song to a playlist named Fuchsia. With song name nothing else i could do.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play the childhood playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "childhood" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "fuchsia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6tvw4h0XDDwICf0x8Kl4Da"^^org.thingpedia.media-source:playable("fuchsia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="Fuchsia.", song=id)
C: #[results=[
C:   { playlist="Fuchsia.", song="spotify:track:6qtoHId8ZoJ3J5JG6eOqJB"^^org.thingpedia.media-source:song("nothing else i could do"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "childhood")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6i1OwQnKSDQN165idTQmGf"^^org.thingpedia.media-source:playable("Childhood"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Childhood on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play playlist green.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "green" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "fuchsia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6tvw4h0XDDwICf0x8Kl4Da"^^org.thingpedia.media-source:playable("fuchsia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="Fuchsia.", song=id)
C: #[results=[
C:   { playlist="Fuchsia.", song="spotify:track:6qtoHId8ZoJ3J5JG6eOqJB"^^org.thingpedia.media-source:song("nothing else i could do"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "childhood")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6i1OwQnKSDQN165idTQmGf"^^org.thingpedia.media-source:playable("Childhood"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "green")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6zc8rZak8Wlstb1iEz7vFu"^^org.thingpedia.media-source:playable("Green"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the first playlist that has name green on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play playlist green.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "green" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "fuchsia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6tvw4h0XDDwICf0x8Kl4Da"^^org.thingpedia.media-source:playable("fuchsia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="Fuchsia.", song=id)
C: #[results=[
C:   { playlist="Fuchsia.", song="spotify:track:6qtoHId8ZoJ3J5JG6eOqJB"^^org.thingpedia.media-source:song("nothing else i could do"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "childhood")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6i1OwQnKSDQN165idTQmGf"^^org.thingpedia.media-source:playable("Childhood"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "green")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6zc8rZak8Wlstb1iEz7vFu"^^org.thingpedia.media-source:playable("Green"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "green")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6zc8rZak8Wlstb1iEz7vFu"^^org.thingpedia.media-source:playable("Green"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Green on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: stop the music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
====
# recording/1db0780fa51fe7fd3f4f1c59333dcad5
U: Play my demo playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "demo" => @org.thingpedia.media-player.play(playable=id);
====
# recording/c698ed7f2acde420644e18b5cd6a908d
U: Good morning.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/7cd1a9924d1bb0760791ecadcfb3d10e
U: Talk to me.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on)
C: #[results=[]]
C: #[error=enum ENOSYS];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: what time is it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on)
C: #[results=[]]
C: #[error=enum ENOSYS];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(23, 56, 36) }
C: ]];
A: Right now, it's 11:56 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the news?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on)
C: #[results=[]]
C: #[error=enum ENOSYS];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(23, 56, 36) }
C: ]];
C: @com.smartnews.article()
C: #[results=[]]
C: #[error=enum unavailable];
A: Sorry, the smartnews service is unavailable. Please try again later.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play some Bob.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("bob")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/70301cd982e39b34d46f301814e00a0a
U: Play Conan O'Brien podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "conan o 'brien" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "conan o 'brien")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3u26tlz7A3WyWRtXliX9a9"^^org.thingpedia.media-source:playable("Conan O’Brien Needs A Friend"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Conan O’Brien Needs A Friend on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Get me the news and the weather.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "conan o 'brien")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3u26tlz7A3WyWRtXliX9a9"^^org.thingpedia.media-source:playable("Conan O’Brien Needs A Friend"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.smartnews.article()
C: #[results=[
C:   { id="4346322844225900000"^^com.smartnews:article, title="COVID-19 still rages, but some U.S. states reject federal funds to help", author="Andy Sullivan", source="Reuters", summary=" Idaho health officials say they don't have enough tests to track the disease's spread . The state's Republican-led legislature voted down $40 million in federal aid available for COVID-19 testing in schools . Another $1.8 billion in pandemic-related federal assistance is sitting idle in the state treasury .", link="https://www.reuters.com/world/us/covid-19-still-rages-some-us-states-reject-federal-funds-help-2021-11-02/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-02T13:20:01.000Z"), mention=["united states", "washington state", "nampa idaho"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346322844225899885.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346322844225899885.mp3"^^tt:url },
C:   { id="4346297019824876500"^^com.smartnews:article, title="Headlining U.S. elections, Virginia governor’s race is a dead heat", author="Jason Lange", source="Reuters", summary=" Democrat Terry McAuliffe has seen his lead over Republican businessman Glenn Youngkin in opinion polls evaporate . A McAuliffe loss in Virginia, which President Joe Biden won by a double-digit margin over former President Donald Trump last year, would sound alarm bells for national Democrats . Cultural issues have dominated the gubernatorial race, with Youngkin promising to give parents more control over how public schools handle race, gender and COVID-19 protocols .", link="https://www.reuters.com/world/us/too-close-to-call-virginia-governors-race-headlines-us-elections-2021-11-02/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-02T10:10:50.000Z"), mention=["terry mcauliffe", "glenn youngkin", "joe biden"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346297019824876637.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346297019824876637.mp3"^^tt:url },
C:   { id="4346271737340503600"^^com.smartnews:article, title="‘We all bear a burden’: How gun violence costs America $280 billion a year", source="ABC News", summary=" \"Rethinking Gun Violence\" looks at the level of gun violence in the U.S. Advocates estimate gun violence costs America almost $300 billion a year .", link="https://abcnews.go.com/US/bear-burden-gun-violence-costs-america-280-billion/story?id=80245349"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-02T10:02:23.000Z"), mention=["united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346271737340503781.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346271737340503781.mp3"^^tt:url },
C:   { id="4346239411327872000"^^com.smartnews:article, title="Backlash over US police vaccine mandates has not fueled crime surge, experts say", source="The Guardian", summary=" The Seattle police department has been short staffed since October . The city began enforcing a mandate requiring officers to get vaccinated against Covid-19 .", link="https://www.theguardian.com/us-news/2021/nov/02/police-vaccine-mandate-protest"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-02T08:00:02.000Z"), mention=["united states", "covid 19"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346239411327872162.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346239411327872162.mp3"^^tt:url },
C:   { id="4346143368003193000"^^com.smartnews:article, title="SFPD could be short 533 officers amid staffing strains from vaccine mandate", source="ABC7 Bay Area", summary=" 836 employees reported to be unvaccinated, which is 2.8 percent of the city's entire workforce . That group includes city workers, police officers, fire department staff, sheriff's deputies, and SFMTA personnel . 100 transit operators were unable to work due to being non-compliant with the mandate .", link="https://abc7news.com/san-francisco-vaccine-mandate-sfpd-sf-city-workers-on-leave/11188916/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-02T01:40:57.000Z"), mention=["san francisco police department", "san francisco municipal transportation agency", "covid 19"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346143368003192936.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346143368003192936.mp3"^^tt:url },
C:   { id="4346102539972777500"^^com.smartnews:article, title="Former Students, Advocates Hope To Preserve Havre De Grace Colored School", author="Rachael Cardin", source="CBS Baltimore", summary=" In the early 1900s, there were fewer than 20 schools in Harford County that would educate Black children . A group of former students of the Havre de Grace Colored School is raising money to preserve the building . Up until 1965, Black children in Harford County could not attend school with white children .", link="https://baltimore.cbslocal.com/2021/11/01/former-students-advocates-hope-to-preserve-havre-de-grace-colored-school/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-01T22:51:43.000Z"), mention=["colored school", "langston hughes", "havre de grace maryland", "maryland", "wjz tv"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346102539972777666.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346102539972777666.mp3"^^tt:url },
C:   { id="4346090267271502000"^^com.smartnews:article, title="Robert Durst charged with murder in 1982 disappearance of his wife, Kathie, in New York", author="Jonathan Bandler, Rockland/Westchester Journal News", source="USA TODAY", summary=" Millionaire real estate heir Robert Durst was indicted Monday by a New York grand jury for the murder of his wife Kathie . Kathie Durst disappeared from their South Salem cottage following an argument nearly four decades ago . The 78-year-old Scarsdale native is currently in a California state prison hospital facility .", link="https://www.usatoday.com/story/news/nation/2021/11/01/robert-durst-charged-1982-murder-new-york/6242003001/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-01T22:09:48.000Z"), mention=["robert durst", "susan berman", "westchester county court"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346090267271501729.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346090267271501729.mp3"^^tt:url },
C:   { id="4346068863188740600"^^com.smartnews:article, title="Fact check: No exorcism in the house that survived Hurricane Ike in Texas", author="Nayeli Lomeli, USA TODAY", source="USA TODAY", summary=" Instagram users claim a house standing alone after Hurricane Ike was an exorcism . The photo is genuine, but the backstory is not . There was no exorcism in this house in 1998 because it wasn't built until 2005 – three years before the storm .", link="https://www.usatoday.com/story/news/factcheck/2021/11/01/fact-check-no-exorcism-house-survived-hurricane-ike-alone/8436272002/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-01T20:44:20.000Z"), mention=["hurricane ike", "national weather service", "instagram"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346068863188740507.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346068863188740507.mp3"^^tt:url },
C:   { id="4346043355721896000"^^com.smartnews:article, title="Hawaii’s beaches disappearing amid rising sea levels, erosion", source="ABC7 Los Angeles", summary=" Three of Hawaii's major islands have lost roughly one-quarter of their beaches . Officials say sea levels are also rising about one inch every four years .", link="https://abc7.com/hawaii-beach-erosion-propublica-climate-change-beaches-disappearing/11188274/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-01T19:04:35.000Z"), mention=["hawaii"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/headline_4346043355721895907.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211102/voice/summary_4346043355721895907.mp3"^^tt:url },
C:   { id="4345955856802650600"^^com.smartnews:article, title="Almost one in three of Republicans say violence may be necessary to ‘save’ US", source="The Guardian", summary=" Nearly a third of Republicans believe violence may be necessary to 'save' the US, according to a new poll . Among Americans who believe the 2020 election was 'stolen' from Donald Trump, which it was not, 39% believe violence may be required .", link="https://www.theguardian.com/us-news/2021/nov/01/republicans-violence-save-us-poll"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-01T13:14:16.000Z"), mention=["donald trump", "united states", "public religion research institute", "southwest airlines", "republican party united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/headline_4345955856802650494.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211101/voice/summary_4345955856802650494.mp3"^^tt:url }
C: ]]
C: #[count=19];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.4C, wind_speed=0.5mps, humidity=94.1, cloudiness=28.9, fog=28.9, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is foggy today in Palo Alto, California and the temperature is 57.9 degrees Fahrenheit.
A: COVID-19 still rages, but some U.S. states reject federal funds to help.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Get me the news and the weather in San Francisco.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
UT: @org.thingpedia.weather.current(location=new Location("san francisco"));
====
# recording/34ab02add056f4e4627f1bc2c4601180
U: pause.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[
C:   {}
C: ]];
A: I paused for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play playlist green.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "green" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.pause()
C: #[results=[
C:   {}
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "green")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:6zc8rZak8Wlstb1iEz7vFu"^^org.thingpedia.media-source:playable("Green"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Green on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play electric boogaloo.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "electric boogaloo" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/b40367ac135e0fc17fcd5f9eaa730fbc
U: Play Blues Traveler.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("blues traveler")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3pHeBYl1yujXcZqqfF1UyQ"^^org.thingpedia.media-source:artist("Blues Traveler")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:500Tkm3vJmVtdUwdCVxCTb"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27IRo2rYeizhRMDaNVplNM"^^org.thingpedia.media-source:playable("Hook"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1HpBm13TNcyMW3PoUrlZPv"^^org.thingpedia.media-source:playable("But Anyway"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3y8rEUEUdmAcPCpPoLotnO"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2BLkpiR7oE09eY8DHUk6Bx"^^org.thingpedia.media-source:playable("The Mountains Win Again"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:5nNeSC4KNxT50MnliLuGRa"^^org.thingpedia.media-source:playable("Four"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:61HjwbPeZTesnKzkB2HPoN"^^org.thingpedia.media-source:playable("Blues Traveler"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6Rro4SnGlmVE4uzc2EIo2I"^^org.thingpedia.media-source:playable("Travelogue: Blues Traveler Classics"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1FvSXWIYbHm4plK9ytVaLd"^^org.thingpedia.media-source:playable("Traveler's Blues"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4c2ibJ30kYNcrIuSqWazIw"^^org.thingpedia.media-source:playable("Blow Up The Moon"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music recordings by Blues Traveler on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play some Blues.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "blues") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3pHeBYl1yujXcZqqfF1UyQ"^^org.thingpedia.media-source:artist("Blues Traveler")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:500Tkm3vJmVtdUwdCVxCTb"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27IRo2rYeizhRMDaNVplNM"^^org.thingpedia.media-source:playable("Hook"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1HpBm13TNcyMW3PoUrlZPv"^^org.thingpedia.media-source:playable("But Anyway"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3y8rEUEUdmAcPCpPoLotnO"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2BLkpiR7oE09eY8DHUk6Bx"^^org.thingpedia.media-source:playable("The Mountains Win Again"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:5nNeSC4KNxT50MnliLuGRa"^^org.thingpedia.media-source:playable("Four"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:61HjwbPeZTesnKzkB2HPoN"^^org.thingpedia.media-source:playable("Blues Traveler"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6Rro4SnGlmVE4uzc2EIo2I"^^org.thingpedia.media-source:playable("Travelogue: Blues Traveler Classics"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1FvSXWIYbHm4plK9ytVaLd"^^org.thingpedia.media-source:playable("Traveler's Blues"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4c2ibJ30kYNcrIuSqWazIw"^^org.thingpedia.media-source:playable("Blow Up The Moon"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "blues") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3dPQuX8Gs42Y7b454ybpMR"^^org.thingpedia.media-source:playable("Seven Nation Army"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2tznHmp70DxMyr2XhWLOW0"^^org.thingpedia.media-source:playable("Cigarette Daydreams"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Pzh926pXggbMe2ZpXyMV7"^^org.thingpedia.media-source:playable("Ain't No Rest for the Wicked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0QULNNd9z5s35entfiiXoa"^^org.thingpedia.media-source:playable("Drunk (And I Don't Wanna Go Home)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4iya38ctQ1httyA6NOG9oW"^^org.thingpedia.media-source:playable("Light My Love"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played blues music recordings on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play some jazz.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "jazz") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3pHeBYl1yujXcZqqfF1UyQ"^^org.thingpedia.media-source:artist("Blues Traveler")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:500Tkm3vJmVtdUwdCVxCTb"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27IRo2rYeizhRMDaNVplNM"^^org.thingpedia.media-source:playable("Hook"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1HpBm13TNcyMW3PoUrlZPv"^^org.thingpedia.media-source:playable("But Anyway"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3y8rEUEUdmAcPCpPoLotnO"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2BLkpiR7oE09eY8DHUk6Bx"^^org.thingpedia.media-source:playable("The Mountains Win Again"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:5nNeSC4KNxT50MnliLuGRa"^^org.thingpedia.media-source:playable("Four"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:61HjwbPeZTesnKzkB2HPoN"^^org.thingpedia.media-source:playable("Blues Traveler"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6Rro4SnGlmVE4uzc2EIo2I"^^org.thingpedia.media-source:playable("Travelogue: Blues Traveler Classics"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1FvSXWIYbHm4plK9ytVaLd"^^org.thingpedia.media-source:playable("Traveler's Blues"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4c2ibJ30kYNcrIuSqWazIw"^^org.thingpedia.media-source:playable("Blow Up The Moon"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "blues") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3dPQuX8Gs42Y7b454ybpMR"^^org.thingpedia.media-source:playable("Seven Nation Army"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2tznHmp70DxMyr2XhWLOW0"^^org.thingpedia.media-source:playable("Cigarette Daydreams"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Pzh926pXggbMe2ZpXyMV7"^^org.thingpedia.media-source:playable("Ain't No Rest for the Wicked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0QULNNd9z5s35entfiiXoa"^^org.thingpedia.media-source:playable("Drunk (And I Don't Wanna Go Home)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4iya38ctQ1httyA6NOG9oW"^^org.thingpedia.media-source:playable("Light My Love"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "jazz") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2grjqo0Frpf2okIBiifQKs"^^org.thingpedia.media-source:playable("September"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1ko2lVN0vKGUl9zrU0qSlT"^^org.thingpedia.media-source:playable("Just the Two of Us (feat. Bill Withers)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Hhv2vrOTy89HFRcjU3QOx"^^org.thingpedia.media-source:playable("At Last"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4TTV7EcfroSLWzXRY6gLv6"^^org.thingpedia.media-source:playable("Alexander Hamilton"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:29U7stRjqHU6rMiS8BfaI9"^^org.thingpedia.media-source:playable("What A Wonderful World"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played jazz music recordings on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play Bjork.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("bjork")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3pHeBYl1yujXcZqqfF1UyQ"^^org.thingpedia.media-source:artist("Blues Traveler")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:500Tkm3vJmVtdUwdCVxCTb"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27IRo2rYeizhRMDaNVplNM"^^org.thingpedia.media-source:playable("Hook"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1HpBm13TNcyMW3PoUrlZPv"^^org.thingpedia.media-source:playable("But Anyway"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3y8rEUEUdmAcPCpPoLotnO"^^org.thingpedia.media-source:playable("Run-Around"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2BLkpiR7oE09eY8DHUk6Bx"^^org.thingpedia.media-source:playable("The Mountains Win Again"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:5nNeSC4KNxT50MnliLuGRa"^^org.thingpedia.media-source:playable("Four"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:61HjwbPeZTesnKzkB2HPoN"^^org.thingpedia.media-source:playable("Blues Traveler"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6Rro4SnGlmVE4uzc2EIo2I"^^org.thingpedia.media-source:playable("Travelogue: Blues Traveler Classics"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1FvSXWIYbHm4plK9ytVaLd"^^org.thingpedia.media-source:playable("Traveler's Blues"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4c2ibJ30kYNcrIuSqWazIw"^^org.thingpedia.media-source:playable("Blow Up The Moon"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "blues") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3dPQuX8Gs42Y7b454ybpMR"^^org.thingpedia.media-source:playable("Seven Nation Army"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2tznHmp70DxMyr2XhWLOW0"^^org.thingpedia.media-source:playable("Cigarette Daydreams"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Pzh926pXggbMe2ZpXyMV7"^^org.thingpedia.media-source:playable("Ain't No Rest for the Wicked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0QULNNd9z5s35entfiiXoa"^^org.thingpedia.media-source:playable("Drunk (And I Don't Wanna Go Home)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4iya38ctQ1httyA6NOG9oW"^^org.thingpedia.media-source:playable("Light My Love"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "jazz") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2grjqo0Frpf2okIBiifQKs"^^org.thingpedia.media-source:playable("September"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1ko2lVN0vKGUl9zrU0qSlT"^^org.thingpedia.media-source:playable("Just the Two of Us (feat. Bill Withers)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Hhv2vrOTy89HFRcjU3QOx"^^org.thingpedia.media-source:playable("At Last"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4TTV7EcfroSLWzXRY6gLv6"^^org.thingpedia.media-source:playable("Alexander Hamilton"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:29U7stRjqHU6rMiS8BfaI9"^^org.thingpedia.media-source:playable("What A Wonderful World"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:538ZIoOw6wW1xdjuIaQHOS"^^org.thingpedia.media-source:artist("Brant Bjork")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3CNVaHOEJiktEnC3POAVN8"^^org.thingpedia.media-source:playable("Automatic Fantastic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3N6T1Ou8z57HKlSMfyTEac"^^org.thingpedia.media-source:playable("Lazy Bones"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7xxkaZADoO4sHbvjebXjij"^^org.thingpedia.media-source:playable("Low Desert Punk"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:58wcOjSCfKbunXdfVQdpe9"^^org.thingpedia.media-source:playable("Too Many Chiefs - Not Enough Indians"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1vaGwe7pdYMEcERC2s0eOs"^^org.thingpedia.media-source:playable("Chocolatize"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1ryZqUZiY09DvOO7Fht9Lu"^^org.thingpedia.media-source:playable("Jalamanta"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4AEDZokdCRZEDdJKdnQSQn"^^org.thingpedia.media-source:playable("Mankind Woman"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3mxDFwM071NvOFBScGday6"^^org.thingpedia.media-source:playable("Gods & Goddesses"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:5svHG5XDfCpthCG6JWm4qi"^^org.thingpedia.media-source:playable("Brant Bjork"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1ZMIcvk2Mxow7HI9VUKBWD"^^org.thingpedia.media-source:playable("Saved by Magic"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music recordings by Brant Bjork on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play hyperballad.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "hyperballad" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/06ebd40e41a81201c67acfa0d2ac9fdd
U: How you doing?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great, thanks for asking! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what time is it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(15, 33, 59) }
C: ]];
A: Right now, it's 3:33 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: how are you?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(15, 33, 59) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great, thanks for asking! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: put on some Tedeschi trucks music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("tedeschi trucks")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/f68d7420986b64843883215a5eea77a0
U: Play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/dae8bb2d04a7a8cc729a1f4567dba478
U: Play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/c4231e8a7ca2ce12ed480a9e7544369f
U: ciao
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/182506
U: i am fine, thanks
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/182058
U: open spotify and play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log/181984
U: start media
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log/181965
U: sing me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() => @org.thingpedia.media-player.play(playable=id);
====
# log/181923
U: turn on music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log/181873
U: helllo
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/181646
U: hey linux
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/181619
U: play something funky
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "funky") => @org.thingpedia.media-player.play(playable=id);
====
# log/181618
U: play playlist space jam
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "space jam" => @org.thingpedia.media-player.play(playable=id);
====
# log/181595
U: play playlist gezellige achtergrondmuziek
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "gezellige achtergrondmuziek" => @org.thingpedia.media-player.play(playable=id);
====
# log/181594
U: play gezellige achtergrondmuziek
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "gezellige achtergrondmuziek" => @org.thingpedia.media-player.play(playable=id);
====
# log/181557
U: play space jam playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "space jam" => @org.thingpedia.media-player.play(playable=id);
====
# log/181553
U: play a random playslist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() => @org.thingpedia.media-player.play(playable=id);
====
# log/181543
U: play other music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log/181514
U: play chill music on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "chill") => @org.thingpedia.media-player.play(playable=id);
====
# log/181510
U: okay bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/181505
U: play modjadji from chicco
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("chicco")) && id =~ "modjadji" => @org.thingpedia.media-player.play(playable=id);
====
# log/181504
U: play modjadji chicco
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("chicco")) && id =~ "modjadji" => @org.thingpedia.media-player.play(playable=id);
====
# log/181500
U: play funky vodka
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "funky vodka" => @org.thingpedia.media-player.play(playable=id);
====
# log/181499
U: play kerst hits
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "kerst hits" => @org.thingpedia.media-player.play(playable=id);
====
# log/181489
U: play something funky on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "funky") => @org.thingpedia.media-player.play(playable=id);
====
# log/181484
U: play summer on you on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "summer on you" => @org.thingpedia.media-player.play(playable=id);
====
# log/181419
U: show me a cat and a dog
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
UT: @com.thedogapi.dog();
====
# log/181418
U: a cat and a dog
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
UT: @com.thedogapi.dog();
====
# log/181401
U: thank you but later
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/fae417de629064360edae4f479593e15
U: Can you tell me how many reviews Tartines has?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [review_count] of @com.yelp.restaurant() filter id =~ "tartines";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [review_count] of @com.yelp.restaurant() filter id =~ "tartines"
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8186 },
C:   { id="TdXsIPBVRLP3DR-A3sKdpg"^^com.yelp:restaurant("Tartine Manufactory"), review_count=1304 },
C:   { id="45W9g3pArmsMlOK8pYnKcA"^^com.yelp:restaurant("Tartine Inner Sunset"), review_count=214 },
C:   { id="-3fK2BLviJhDkZugVAjA5A"^^com.yelp:restaurant("Cafe La Tartine"), review_count=748 }
C: ]];
A: Tartine Bakery has 8,186 reviews.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: can you tell me the phone number and address of Tartine Bakery?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [geo, phone] of @com.yelp.restaurant() filter id == null^^com.yelp:restaurant("tartine bakery");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [review_count] of @com.yelp.restaurant() filter id =~ "tartines"
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8186 },
C:   { id="TdXsIPBVRLP3DR-A3sKdpg"^^com.yelp:restaurant("Tartine Manufactory"), review_count=1304 },
C:   { id="45W9g3pArmsMlOK8pYnKcA"^^com.yelp:restaurant("Tartine Inner Sunset"), review_count=214 },
C:   { id="-3fK2BLviJhDkZugVAjA5A"^^com.yelp:restaurant("Cafe La Tartine"), review_count=748 }
C: ]];
C: [geo, phone] of @com.yelp.restaurant() filter id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number }
C: ]];
A: Tartine Bakery is a restaurant at 600 Guerrero St, San Francisco, CA with phone number (415) 487-2600.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: can you tell me the weather there?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [review_count] of @com.yelp.restaurant() filter id =~ "tartines"
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8186 },
C:   { id="TdXsIPBVRLP3DR-A3sKdpg"^^com.yelp:restaurant("Tartine Manufactory"), review_count=1304 },
C:   { id="45W9g3pArmsMlOK8pYnKcA"^^com.yelp:restaurant("Tartine Inner Sunset"), review_count=214 },
C:   { id="-3fK2BLviJhDkZugVAjA5A"^^com.yelp:restaurant("Cafe La Tartine"), review_count=748 }
C: ]];
C: [geo, phone] of @com.yelp.restaurant() filter id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"))
C: #[results=[
C:   { temperature=13.2C, wind_speed=5mps, humidity=78, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA") }
C: ]];
A: It is cloudy today in 600 Guerrero St, San Francisco, CA and the temperature is 55.8 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Send this to me on Saturday.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[new Date(enum saturday)]) => @org.thingpedia.weather.current(location=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"));
====
# recording/7c3cbc76986be93c01ecaa6156623fcf
U: play Grimes on Spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("grimes")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3LGsgpx4TfxhXbr07OFKqs"^^org.thingpedia.media-source:playable("Oblivion"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3WXhshrs1fzwF3rQE399Gq"^^org.thingpedia.media-source:playable("Kill V. Maim"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3cjvqsvvU80g7WJPMVh8iq"^^org.thingpedia.media-source:playable("Genesis"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3HED2IUaNSnbOe88a7ZdwM"^^org.thingpedia.media-source:playable("Visions"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4zyqNfmTrnvUejh8M1IEh9"^^org.thingpedia.media-source:playable("Miss Anthropocene (Deluxe Edition)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:7J84ixPVFehy6FcLk8rhk3"^^org.thingpedia.media-source:playable("Art Angels"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2FQYkZIuXLy222CVzgPbQ0"^^org.thingpedia.media-source:playable("Miss Anthropocene (Rave Edition)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music recordings by Grimes on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play violence by Grimes on Spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("grimes")) && id =~ "violence" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3LGsgpx4TfxhXbr07OFKqs"^^org.thingpedia.media-source:playable("Oblivion"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3WXhshrs1fzwF3rQE399Gq"^^org.thingpedia.media-source:playable("Kill V. Maim"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3cjvqsvvU80g7WJPMVh8iq"^^org.thingpedia.media-source:playable("Genesis"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3HED2IUaNSnbOe88a7ZdwM"^^org.thingpedia.media-source:playable("Visions"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4zyqNfmTrnvUejh8M1IEh9"^^org.thingpedia.media-source:playable("Miss Anthropocene (Deluxe Edition)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:7J84ixPVFehy6FcLk8rhk3"^^org.thingpedia.media-source:playable("Art Angels"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2FQYkZIuXLy222CVzgPbQ0"^^org.thingpedia.media-source:playable("Miss Anthropocene (Rave Edition)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) && id =~ "violence")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Violence - Original Mix on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play GUY by Lady Gaga on Spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("lady gaga")) && id =~ "guy" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3LGsgpx4TfxhXbr07OFKqs"^^org.thingpedia.media-source:playable("Oblivion"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3WXhshrs1fzwF3rQE399Gq"^^org.thingpedia.media-source:playable("Kill V. Maim"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3cjvqsvvU80g7WJPMVh8iq"^^org.thingpedia.media-source:playable("Genesis"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3HED2IUaNSnbOe88a7ZdwM"^^org.thingpedia.media-source:playable("Visions"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4zyqNfmTrnvUejh8M1IEh9"^^org.thingpedia.media-source:playable("Miss Anthropocene (Deluxe Edition)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:7J84ixPVFehy6FcLk8rhk3"^^org.thingpedia.media-source:playable("Art Angels"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2FQYkZIuXLy222CVzgPbQ0"^^org.thingpedia.media-source:playable("Miss Anthropocene (Rave Edition)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) && id =~ "violence")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1HY2Jd0NmPuamShAr6KMms"^^org.thingpedia.media-source:artist("Lady Gaga")) && id =~ "guy")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Sorry, there are no recordings at the moment matching your request. Would you like to be notified when there are new recordings?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
AT: monitor(id of (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1HY2Jd0NmPuamShAr6KMms"^^org.thingpedia.media-source:artist("Lady Gaga")) && id =~ "guy")[1])
AT: #[confirm=enum proposed];
U: Play Lady Gaga on Spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("lady gaga")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3LGsgpx4TfxhXbr07OFKqs"^^org.thingpedia.media-source:playable("Oblivion"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3WXhshrs1fzwF3rQE399Gq"^^org.thingpedia.media-source:playable("Kill V. Maim"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3cjvqsvvU80g7WJPMVh8iq"^^org.thingpedia.media-source:playable("Genesis"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3HED2IUaNSnbOe88a7ZdwM"^^org.thingpedia.media-source:playable("Visions"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4zyqNfmTrnvUejh8M1IEh9"^^org.thingpedia.media-source:playable("Miss Anthropocene (Deluxe Edition)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:7J84ixPVFehy6FcLk8rhk3"^^org.thingpedia.media-source:playable("Art Angels"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:2FQYkZIuXLy222CVzgPbQ0"^^org.thingpedia.media-source:playable("Miss Anthropocene (Rave Edition)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:053q0ukIDRgzwTr4vNSwab"^^org.thingpedia.media-source:artist("Grimes")) && id =~ "violence")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KeOFns3LGJuh1lapMm9eA"^^org.thingpedia.media-source:playable("Violence - Original Mix"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1HY2Jd0NmPuamShAr6KMms"^^org.thingpedia.media-source:artist("Lady Gaga")) && id =~ "guy")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1HY2Jd0NmPuamShAr6KMms"^^org.thingpedia.media-source:artist("Lady Gaga")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0SiywuOBRcynK0uKGWdCnn"^^org.thingpedia.media-source:playable("Bad Romance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2VxeLyX666F8uXCJ0dZF8B"^^org.thingpedia.media-source:playable("Shallow"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5R8dQOPq8haW94K7mgERlO"^^org.thingpedia.media-source:playable("Poker Face"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2x7MyWybabEz6Y6wvHuwGE"^^org.thingpedia.media-source:playable("Just Dance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:24ySl2hOPGCDcxBxFIqWBu"^^org.thingpedia.media-source:playable("Rain On Me (with Ariana Grande)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:1jpUMnKpRlng1OJN7LJauV"^^org.thingpedia.media-source:playable("The Fame"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4sLtOBOzn4s3GDUv3c5oJD"^^org.thingpedia.media-source:playable("A Star Is Born Soundtrack"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6rePArBMb5nLWEaY9aQqL4"^^org.thingpedia.media-source:playable("The Fame Monster (Deluxe Edition)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:05c49JgPmL4Uz2ZeqRx5SP"^^org.thingpedia.media-source:playable("Chromatica"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3edjzMAVB9RYRd4UcZBchx"^^org.thingpedia.media-source:playable("A Star Is Born Soundtrack (Without Dialogue)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music recordings by Lady Gaga on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: played Zhihui on Spotify by Lady Gaga.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("lady gaga")) && id =~ "zhihui" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/bc5546c78d59c512bb124ed6f458183f
U: Play the Conan O'Brien podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "conan o 'brien" => @org.thingpedia.media-player.play(playable=id);
====
# recording/c9ef55946d2c0cb786917c9e66737882
U: on Saturday play radio station KQED.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[new Date(enum saturday)]) => @com.tunein.station() filter id =~ "kqed" => @com.tunein.radio_play(id=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: ontimer(date=[new Date(enum saturday, new Time(8, 0))]) => (@com.tunein.station() filter id =~ "kqed")[1] => @com.tunein.radio_play(id=id)
C: #[results=[]];
A: Alright, I will play kqed at 8:00 AM on Saturday.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_rule_enable_success;
U: What's the weather in San Francisco at Dolores Park?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("san francisco at dolores park"));
====
# recording/875588cab53169cf08e5d61c3f14edf5
U: Play Adele.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("adele")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4dpARuHxo51G3z768sgnrY"^^org.thingpedia.media-source:artist("Adele")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0gplL1WMoJ6iYaPgMCL0gX"^^org.thingpedia.media-source:playable("Easy On Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7GgWAITsYJaRM3r50rfh5w"^^org.thingpedia.media-source:playable("When We Were Young"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1zwMYTA5nlNjZxYrvBB2pV"^^org.thingpedia.media-source:playable("Someone Like You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1c8gk2PeTE04A1pIDH9YMk"^^org.thingpedia.media-source:playable("Rolling in the Deep"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7B5Npv8NjjTCzk8PLpU66h"^^org.thingpedia.media-source:playable("Love In The Dark"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3AvPX1B1HiFROvYjLb5Qwi"^^org.thingpedia.media-source:playable("25"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:224jZ4sUX7OhAuMwaxp86S"^^org.thingpedia.media-source:playable("Easy On Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:0Lg1uZvI312TPqxNWShFXL"^^org.thingpedia.media-source:playable("21"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:59ULskOkBMij4zL8pS7mi0"^^org.thingpedia.media-source:playable("19"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6TwN6Lq9glwnG8kNp6chHY"^^org.thingpedia.media-source:playable("Skyfall"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music recordings by Adele on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4dpARuHxo51G3z768sgnrY"^^org.thingpedia.media-source:artist("Adele")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0gplL1WMoJ6iYaPgMCL0gX"^^org.thingpedia.media-source:playable("Easy On Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7GgWAITsYJaRM3r50rfh5w"^^org.thingpedia.media-source:playable("When We Were Young"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1zwMYTA5nlNjZxYrvBB2pV"^^org.thingpedia.media-source:playable("Someone Like You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1c8gk2PeTE04A1pIDH9YMk"^^org.thingpedia.media-source:playable("Rolling in the Deep"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7B5Npv8NjjTCzk8PLpU66h"^^org.thingpedia.media-source:playable("Love In The Dark"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:3AvPX1B1HiFROvYjLb5Qwi"^^org.thingpedia.media-source:playable("25"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:224jZ4sUX7OhAuMwaxp86S"^^org.thingpedia.media-source:playable("Easy On Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:0Lg1uZvI312TPqxNWShFXL"^^org.thingpedia.media-source:playable("21"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:59ULskOkBMij4zL8pS7mi0"^^org.thingpedia.media-source:playable("19"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6TwN6Lq9glwnG8kNp6chHY"^^org.thingpedia.media-source:playable("Skyfall"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6kqsNp22xUmUyfsaUt7VpB"^^org.thingpedia.media-source:playable("Center of Gravity"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5QO79kh1waicV47BqGRL3g"^^org.thingpedia.media-source:playable("Save Your Tears"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:37y7iDayfwm3WXn5BiAoRk"^^org.thingpedia.media-source:playable("Dark Red"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZaRg5Sf4TKr0YcFRLh7QJ"^^org.thingpedia.media-source:playable("Love Affair"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3ACQkIMv6nGYHRpPGyS4BK"^^org.thingpedia.media-source:playable("I Could Fall In Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5lpDAHGne3yWphLa5pio5J"^^org.thingpedia.media-source:playable("Out of Time"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7vgTNTaEz3CsBZ1N4YQalM"^^org.thingpedia.media-source:playable("Ghost Town"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1FWoak0OgTq1jrYfRKfXsj"^^org.thingpedia.media-source:playable("Loverboy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1V6gIisPpYqgFeWbMLI0bA"^^org.thingpedia.media-source:playable("Heart Attack"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
A: I played music recordings on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play lex Friedman.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("lex friedman")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/1f6c49870c518331f2bc1559d2cd61fd
U: play San Francisco 49ers podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "san francisco 49 ers" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "san francisco 49 ers")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Sorry, there are no shows at the moment matching your request. Would you like to be notified when there are new shows?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
AT: monitor(id of (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "san francisco 49 ers")[1])
AT: #[confirm=enum proposed];
U: No.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/7815ce1b17d9e147b658168cb759557b
U: Play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/dbfac7d319fbb7faabaf3f25cd801c04
U: play my favorites.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Y6XWs8xMlCngyIxNOFnsp"^^org.thingpedia.media-source:playable("Sound of da Police"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5OU9pkK0wkHJMCOBVYafye"^^org.thingpedia.media-source:playable("My Favorite Accident"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5i7fZq3chLyCHo3VeB6goD"^^org.thingpedia.media-source:playable("First of the Year (Equinox)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0y0J3pe45KwRVWCveF4q46"^^org.thingpedia.media-source:playable("Jessie & My Whetstone"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4XpQ2F8NtzWMZ3g5t8qv2Y"^^org.thingpedia.media-source:playable("No Children"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3HaslE7EEnVLVGZhLggwfB"^^org.thingpedia.media-source:playable("Brother's Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4oZ2Xkline6CvRDebjbi8Q"^^org.thingpedia.media-source:playable("Singularity"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5S3F5GL8LASIjPg2PMiU1Q"^^org.thingpedia.media-source:playable("Emerald Rush"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1rbH1KmfxUjVlt8GCjgZSE"^^org.thingpedia.media-source:playable("Neon Pattern Drum"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3oWBMOzkjjkCmV6abncBUd"^^org.thingpedia.media-source:playable("Everything Connected"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played your favorites on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/6ddfa102b3c686eb3cf899d01e7c7bb7
U: Play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/e0f3857eaa23f3766d69e39650816eab
U: play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1J03Vp93ybKIxfzYI4YJtL"^^org.thingpedia.media-source:playable("MEGALOVANIA"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3KHbBpwYdlM6uKJirvCrEA"^^org.thingpedia.media-source:playable("Determination"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4wBMMqeY2NnFnStBIPHxyG"^^org.thingpedia.media-source:playable("Oh! One True Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6eTcxkl9G7C2mwejLJ7Amm"^^org.thingpedia.media-source:playable("An Ending"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0KQnhlCVldP6qicvBy9IJ5"^^org.thingpedia.media-source:playable("Dating Fight!"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0gplL1WMoJ6iYaPgMCL0gX"^^org.thingpedia.media-source:playable("Easy On Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0gt76DuMx7F3UZJPg7jcC5"^^org.thingpedia.media-source:playable("Quiet Water"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0w5CRIokPrQAAq7OdIKesr"^^org.thingpedia.media-source:playable("SAVE The World"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0ybMBs8mKdAP9WSnFTiZvs"^^org.thingpedia.media-source:playable("ASGORE"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2FZ99j224ohiGLavqjijza"^^org.thingpedia.media-source:playable("Undertale"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
A: I played music recordings on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Stop the music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
====
# recording/6520f556153b0e65e18f16cee035d136
U: What is the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=1mps, humidity=63.5, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4519671, -122.1779927, "Menlo Park") }
C: ]];
A: It is sunny today in Menlo Park and the temperature is 60 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: What is the temperature?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=1mps, humidity=63.5, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4519671, -122.1779927, "Menlo Park") }
C: ]];
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { location=new Location(37.4519671, -122.1779927, "Menlo Park"), temperature=15.3C, status=enum sunny }
C: ]];
A: Did you mean get the temperature of current weather in Menlo Park?
A: The temperature is 60 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: What is the time?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=1mps, humidity=63.5, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4519671, -122.1779927, "Menlo Park") }
C: ]];
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { location=new Location(37.4519671, -122.1779927, "Menlo Park"), temperature=15.3C, status=enum sunny }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(20, 12, 1) }
C: ]];
A: Right now, it's 8:12 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Alarm for 8:30 PM.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[set_time($now, new Time(20, 30))]) => @org.thingpedia.builtin.thingengine.builtin.alert();
====
# recording/22983cd8bf789cdd82302625485392a8
U: genie does as you wish
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Music kardi?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "kardi";
====
# recording/abe6685647e39b4badf2d6f9a82e7b28
U: what is your name?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
A: I'm Genie, an open-source virtual assistant created at Stanford.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's the weather ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(36.1554157, 126.6794253, "Pangyo, Jongpan-ro"))
C: #[results=[
C:   { temperature=9.7C, wind_speed=7.3mps, humidity=62.1, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(36.1554157, 126.6794253, "Pangyo, Jongpan-ro") }
C: ]];
A: Where are you now?
A: It is cloudy today in Pangyo, Jongpan-ro and the temperature is 49.5 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: in celcius?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
====
# recording/e8c5ab95b290fdb5ef582cd116acc032
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/a8469ad0b100e9910a751f0ef53e9807
U: Ok, let's do something else
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: What about news?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.", question=enum general_help }
C: ]];
C: @com.smartnews.article()
C: #[results=[
C:   { id="4348051123844689400"^^com.smartnews:article, title="Far-right figures in Charlottesville court over deadly violence of 2017", source="The Guardian", summary=" A civil lawsuit alleges a conspiracy to commit racially motivated violence against nine residents of Charlottesville during the white-supremacist Unite the Right march and rally . The case, Sines v Kessler, alleges that 14 people, including Richard Spencer and podcaster Chris Cantwell, white nationalists and 10 far-right groups, violated an obscure federal law known the Ku Klux Klan Act of 1871 .", link="https://www.theguardian.com/us-news/2021/nov/07/charlottesville-virginia-court-trial-violence"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-07T08:00:14.000Z"), mention=["unite the right rally", "charlottesville virginia", "donald trump", "christopher cantwell", "sines v. kessler"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/headline_4348051123844689377.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/summary_4348051123844689377.mp3"^^tt:url },
C:   { id="4347938665184374000"^^com.smartnews:article, title="L.A County asks for Vanessa Bryant’s therapy records in lawsuit over leaked Kobe Bryant crash photos", source="NBC News", summary=" Los Angeles County wants Kobe Bryant's widow to produce all therapy records dating back to 2010 . The county says Vanessa Bryant's therapy records are necessary for its defense against a lawsuit she filed last year . Bryant's attorneys did not immediately respond to a request for comment .", link="https://www.nbcnews.com/news/us-news/l-county-asks-vanessa-bryant-s-therapy-records-lawsuit-over-n1283407"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-06T23:45:00.000Z"), mention=["vanessa bryant", "los angeles", "kobe bryant", "los angeles county california", "national basketball association"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/headline_4347938665184373757.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/summary_4347938665184373757.mp3"^^tt:url },
C:   { id="4347945134990566000"^^com.smartnews:article, title="U.S. administers 429.4 mln doses of COVID-19 vaccines –CDC", author="Reuters", source="Reuters", summary=" The United States has administered 429,442,508 doses of COVID-19 vaccines . The CDC tally includes two-dose vaccines from Moderna and Pfizer/BioNTech . About 23.2 million people have received a booster dose of either Moderna or Johnson & Johnson's vaccine .", link="https://www.reuters.com/world/us/us-administers-4294-mln-doses-covid-19-vaccines-cdc-2021-11-06/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-06T21:06:02.000Z"), mention=["pfizer", "united states", "biontech", "centers for disease control and prevention"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/headline_4347945134990565766.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/summary_4347945134990565766.mp3"^^tt:url },
C:   { id="4347845233073981000"^^com.smartnews:article, title="U.S. federal appeals court freezes Biden’s vaccine rule for companies", author="Mike Scarcella", source="Reuters", summary=" A U.S. federal appeals court issued a stay Saturday freezing the Biden administration's efforts . The ruling comes after numerous Republican-led states filed legal challenges against the new rule . The White House declined to comment on the ruling, and referred questions to the Labor Department .", link="https://www.reuters.com/world/us/us-federal-appeals-court-issues-stay-bidens-vaccine-rule-us-companies-2021-11-06/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-06T18:04:14.000Z"), mention=["united states", "united states court of appeals for the fifth circuit", "occupational safety and health administration", "joe biden"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/headline_4347845233073980759.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211107/voice/summary_4347845233073980759.mp3"^^tt:url },
C:   { id="4347833881274095000"^^com.smartnews:article, title="Clocks Fall Back 1 Hour Sunday, Starting 70 Days With Sunsets Before 5 P.M. In Denver", author="Chris Spears", source="CBS Denver", summary=" It will be the last sunset of the year that takes place after 5 p.m. thanks to the end of daylight saving time . Daylight saving officially ends at 2 a.m. on Sunday, Nov. 7 .", link="https://denver.cbslocal.com/2021/11/06/daylight-saving-time-denver-sunset/"^^tt:url, category=["national"^^com.smartnews:category("national")], date=new Date("2021-11-06T17:30:00.000Z"), mention=["denver", "colorado", "yoon s. byun", "portland press herald"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211106/voice/headline_4347833881274095327.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211106/voice/summary_4347833881274095327.mp3"^^tt:url }
C: ]];
A: Here is the news.
A: Far-right figures in Charlottesville court over deadly violence of 2017.
A: L.A County asks for Vanessa Bryant’s therapy records in lawsuit over leaked Kobe Bryant crash photos.
A: U.S. administers 429.4 mln doses of COVID-19 vaccines –CDC.
A: U.S. federal appeals court freezes Biden’s vaccine rule for companies.
A: Clocks Fall Back 1 Hour Sunday, Starting 70 Days With Sunsets Before 5 P.M. In Denver.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_many;
U: Anything from Europe?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article(keyword="europe");
====
# recording/f9e82de6b7b37cc25aea59dc962aa73e
U: bark
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thedogapi.dog();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.thedogapi.dog()
C: #[results=[
C:   { id="LMjrDDwSJ"^^com.thedogapi:dog("Alaskan Husky"), picture_url="https://cdn2.thedogapi.com/images/LMjrDDwSJ.jpg"^^tt:picture }
C: ]];
A: Here is a picture of a Alaskan Husky.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: meow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
====
# recording/566cc810c353dd9137fc61e3502036ad
U: What can you do?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Tell me a joke, please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, news, podcasts, weather, reminders, and managing IoT devices.", question=enum general_help }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="wA5wX0wXLmb"^^com.icanhazdadjoke:id, text="What animal is always at a game of cricket? A bat." }
C: ]];
A: What animal is always at a game of cricket? A bat.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather at New York
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("new york"));
====
# recording/028cc0b10dd8c923bce9c8d32e5ffc5a
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="9prWnjyImyd"^^com.icanhazdadjoke:id, text="Why do bears have hairy coats? Fur protection." }
C: ]];
A: Why do bears have hairy coats? Fur protection.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: find me a restaurant in palo alto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter geo == new Location("palo alto");
====
# recording/942f1db5b4c002b54f9261e23726200a
U: what time is it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 56, 53) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(2, 4, 59) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(2, 15, 45) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(2, 21, 6) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(2, 23, 26) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(2, 33, 43) }
C: ]];
A: Right now, it's 2:33 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: What's the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/9ae89696d6c0c5a517eeded4841e1280
U: play Bay curious podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "bay curious" => @org.thingpedia.media-player.play(playable=id);
====
# recording/7b17f7d3ad7585f1717231a8aebe413b
U: Get me the news about San Francisco art.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article(keyword="san francisco art");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article(keyword="san francisco art")
C: #[results=[
C:   { id="4334840903001710600"^^com.smartnews:article, title="Dinosaurs have next in the art of San Francisco painter Michael Kerbow", author="Mary Corbin", source="48 hills", summary=" San Francisco painter Michael Kerbow wants to make art that matters . His paintings aim to distill what he sees happening today and what possibly awaits us tomorrow .", link="https://48hills.org/2021/10/dinosaurs-have-next-in-the-art-of-san-francisco-painter-michael-kerbow/"^^tt:url, category=["art"^^com.smartnews:category("art")], date=new Date("2021-10-01T21:04:06.000Z"), mention=["michael kerbow", "san francisco", "united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211003/voice/headline_4334840903001710421.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211003/voice/summary_4334840903001710421.mp3"^^tt:url, keyword="san francisco art" },
C:   { id="4334579186652948000"^^com.smartnews:article, title="Art Showcase Featuring Resilience During COVID-19 Opens in San Francisco", author="Bay City News", source="NBC Bay Area", summary=" The exhibition will feature art and photography from CatchLight fellows and San Francisco's COVID Command Center artists in residence that capture the hopeful spirit of San Franciscans during the pandemic .", link="https://www.nbcbayarea.com/news/local/san-francisco/art-showcase-featuring-resilience-during-covid-19-opens-in-san-francisco/2670828/"^^tt:url, category=["art"^^com.smartnews:category("art")], date=new Date("2021-09-30T20:37:35.000Z"), mention=["san francisco", "san franciscans", "san francisco arts commission", "catch light", "android operating system"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211005/voice/headline_4334579186652947861.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211005/voice/summary_4334579186652947861.mp3"^^tt:url, keyword="san francisco art" }
C: ]];
A: Here is the news.
A: Dinosaurs have next in the art of San Francisco painter Michael Kerbow.
A: Art Showcase Featuring Resilience During COVID-19 Opens in San Francisco.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_two;
U: play radio station KQED.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.tunein.station() filter id =~ "kqed" => @com.tunein.radio_play(id=id);
====
# recording/d52af9e6e38688353e77589f62c6bac4
U: on Saturday send me radio station KQED.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[new Date(enum saturday)]) => @com.tunein.station() filter id =~ "kqed";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: ontimer(date=[new Date(enum saturday, new Time(8, 0))]) => @com.tunein.station() filter id =~ "kqed"
C: #[results=[]];
A: Alright, I will get kqed at 8:00 AM on Saturday.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_rule_enable_success;
U: Play POD San Francisco podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "pod san francisco" => @org.thingpedia.media-player.play(playable=id);
====
# recording/8fcdcc87959a96e7ad8c31d09de552dd
U: Play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/5551da2f9135461bdc628e22f2f81b9f
U: Can you recommend any great places to eat near Dolores Park?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter geo == new Location("dolores park");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/nPUUXYVVa3CHJh5yzH8Xnw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/tartine-bakery-san-francisco-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cafes"^^com.yelp:restaurant_cuisine("Cafes")], price=enum moderate, rating=4, review_count=8185, geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number },
C:   { id="KkAVX3Wb7E3lP5F_f_8pXg"^^com.yelp:restaurant("Liholiho Yacht Club"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/DluAA2YbM8k6qRM_mwbiNw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/liholiho-yacht-club-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum expensive, rating=4.5, review_count=2488, geo=new Location(37.7618143, -122.42296790220479, "3560 18th St, San Francisco, CA"), phone="+14155897266"^^tt:phone_number },
C:   { id="SGRmnarrNuVEsAjYdEoA0w"^^com.yelp:restaurant("El Farolito"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/kYemXiMcYje-Da7AjPtWcg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-farolito-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4, review_count=5063, geo=new Location(37.75265, -122.41812, "2779 Mission St, San Francisco, CA"), phone="+14158247877"^^tt:phone_number },
C:   { id="n6L5VIGunR51-D55C-eYeQ"^^com.yelp:restaurant("Foreign Cinema"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/cw5y2LSOIE-EVNjKK_d7SQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/foreign-cinema-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "mediterranean"^^com.yelp:restaurant_cuisine("Mediterranean")], price=enum expensive, rating=4, review_count=5022, geo=new Location(37.75637, -122.41925, "2534 Mission St, San Francisco, CA"), phone="+14156487600"^^tt:phone_number },
C:   { id="XQLmEdXoMzOpffwoFaBtaQ"^^com.yelp:restaurant("Kitchen Story"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/XIhdtd0fB2P_v_qhh1hWbg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/kitchen-story-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "newamerican"^^com.yelp:restaurant_cuisine("American (New)")], price=enum moderate, rating=4, review_count=3591, geo=new Location(37.7642352, -122.4306936, "3499 16th St, San Francisco, CA"), phone="+14155254905"^^tt:phone_number },
C:   { id="4KfQnlcSu4bbTqnvGdGptw"^^com.yelp:restaurant("Beretta"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HKxMJ8q8fzOY76hy7ACIag/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/beretta-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian"), "pizza"^^com.yelp:restaurant_cuisine("Pizza"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3830, geo=new Location(37.753869, -122.420611, "1199 Valencia St, San Francisco, CA"), phone="+14156951199"^^tt:phone_number },
C:   { id="1hMD7RQogPDWpE-p3LKjXA"^^com.yelp:restaurant("Loló"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/QimJjz8ECFnevPcssJYfTw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/lol%C3%B3-san-francisco-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=2283, geo=new Location(37.7573462, -122.4214034, "974 Valencia St, San Francisco, CA"), phone="+14156435656"^^tt:phone_number },
C:   { id="ZDvIMjJ-7I0561ckM4pAeA"^^com.yelp:restaurant("Anchor Oyster Bar"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/oKLPo1042ojJJC9OcCzAMw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/anchor-oyster-bar-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4.5, review_count=1552, geo=new Location(37.759689, -122.434609, "579 Castro St, San Francisco, CA"), phone="+14154313990"^^tt:phone_number },
C:   { id="JARsJVKLPgs_yC3cwDnp7g"^^com.yelp:restaurant("La Taqueria"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/7LqVKYVg2GdEFKI2CFL4cA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-taqueria-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=4256, geo=new Location(37.75088, -122.41805, "2889 Mission St, San Francisco, CA"), phone="+14152857117"^^tt:phone_number },
C:   { id="CYttYTEiQuhSfo3SEh79fA"^^com.yelp:restaurant("Shizen Vegan Sushi Bar & Izakaya"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/-1BWnyjrsDmTmXH_3wZl_w/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/shizen-vegan-sushi-bar-and-izakaya-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "vegan"^^com.yelp:restaurant_cuisine("Vegan"), "izakaya"^^com.yelp:restaurant_cuisine("Izakaya")], price=enum moderate, rating=4.5, review_count=1801, geo=new Location(37.768326, -122.421682, "370 14th St, San Francisco, CA"), phone="+14156785767"^^tt:phone_number }
C: ]]
C: #[count=19];
A: I see Tartine Bakery, Liholiho Yacht Club, and El Farolito. Tartine Bakery is rated 4 stars, Liholiho Yacht Club is rated 4.5 stars, and El Farolito is rated 4 stars.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: How many reviews does tartine have?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [review_count] of @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") && id == null^^com.yelp:restaurant("tartine");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/nPUUXYVVa3CHJh5yzH8Xnw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/tartine-bakery-san-francisco-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cafes"^^com.yelp:restaurant_cuisine("Cafes")], price=enum moderate, rating=4, review_count=8185, geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number },
C:   { id="KkAVX3Wb7E3lP5F_f_8pXg"^^com.yelp:restaurant("Liholiho Yacht Club"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/DluAA2YbM8k6qRM_mwbiNw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/liholiho-yacht-club-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum expensive, rating=4.5, review_count=2488, geo=new Location(37.7618143, -122.42296790220479, "3560 18th St, San Francisco, CA"), phone="+14155897266"^^tt:phone_number },
C:   { id="SGRmnarrNuVEsAjYdEoA0w"^^com.yelp:restaurant("El Farolito"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/kYemXiMcYje-Da7AjPtWcg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-farolito-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4, review_count=5063, geo=new Location(37.75265, -122.41812, "2779 Mission St, San Francisco, CA"), phone="+14158247877"^^tt:phone_number },
C:   { id="n6L5VIGunR51-D55C-eYeQ"^^com.yelp:restaurant("Foreign Cinema"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/cw5y2LSOIE-EVNjKK_d7SQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/foreign-cinema-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "mediterranean"^^com.yelp:restaurant_cuisine("Mediterranean")], price=enum expensive, rating=4, review_count=5022, geo=new Location(37.75637, -122.41925, "2534 Mission St, San Francisco, CA"), phone="+14156487600"^^tt:phone_number },
C:   { id="XQLmEdXoMzOpffwoFaBtaQ"^^com.yelp:restaurant("Kitchen Story"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/XIhdtd0fB2P_v_qhh1hWbg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/kitchen-story-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "newamerican"^^com.yelp:restaurant_cuisine("American (New)")], price=enum moderate, rating=4, review_count=3591, geo=new Location(37.7642352, -122.4306936, "3499 16th St, San Francisco, CA"), phone="+14155254905"^^tt:phone_number },
C:   { id="4KfQnlcSu4bbTqnvGdGptw"^^com.yelp:restaurant("Beretta"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HKxMJ8q8fzOY76hy7ACIag/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/beretta-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian"), "pizza"^^com.yelp:restaurant_cuisine("Pizza"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3830, geo=new Location(37.753869, -122.420611, "1199 Valencia St, San Francisco, CA"), phone="+14156951199"^^tt:phone_number },
C:   { id="1hMD7RQogPDWpE-p3LKjXA"^^com.yelp:restaurant("Loló"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/QimJjz8ECFnevPcssJYfTw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/lol%C3%B3-san-francisco-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=2283, geo=new Location(37.7573462, -122.4214034, "974 Valencia St, San Francisco, CA"), phone="+14156435656"^^tt:phone_number },
C:   { id="ZDvIMjJ-7I0561ckM4pAeA"^^com.yelp:restaurant("Anchor Oyster Bar"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/oKLPo1042ojJJC9OcCzAMw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/anchor-oyster-bar-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4.5, review_count=1552, geo=new Location(37.759689, -122.434609, "579 Castro St, San Francisco, CA"), phone="+14154313990"^^tt:phone_number },
C:   { id="JARsJVKLPgs_yC3cwDnp7g"^^com.yelp:restaurant("La Taqueria"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/7LqVKYVg2GdEFKI2CFL4cA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-taqueria-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=4256, geo=new Location(37.75088, -122.41805, "2889 Mission St, San Francisco, CA"), phone="+14152857117"^^tt:phone_number },
C:   { id="CYttYTEiQuhSfo3SEh79fA"^^com.yelp:restaurant("Shizen Vegan Sushi Bar & Izakaya"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/-1BWnyjrsDmTmXH_3wZl_w/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/shizen-vegan-sushi-bar-and-izakaya-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "vegan"^^com.yelp:restaurant_cuisine("Vegan"), "izakaya"^^com.yelp:restaurant_cuisine("Izakaya")], price=enum moderate, rating=4.5, review_count=1801, geo=new Location(37.768326, -122.421682, "370 14th St, San Francisco, CA"), phone="+14156785767"^^tt:phone_number }
C: ]]
C: #[count=19];
C: [review_count] of @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") && id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8185 }
C: ]];
A: Tartine Bakery has 8,185 reviews.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: How's the weather there?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/nPUUXYVVa3CHJh5yzH8Xnw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/tartine-bakery-san-francisco-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cafes"^^com.yelp:restaurant_cuisine("Cafes")], price=enum moderate, rating=4, review_count=8185, geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number },
C:   { id="KkAVX3Wb7E3lP5F_f_8pXg"^^com.yelp:restaurant("Liholiho Yacht Club"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/DluAA2YbM8k6qRM_mwbiNw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/liholiho-yacht-club-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum expensive, rating=4.5, review_count=2488, geo=new Location(37.7618143, -122.42296790220479, "3560 18th St, San Francisco, CA"), phone="+14155897266"^^tt:phone_number },
C:   { id="SGRmnarrNuVEsAjYdEoA0w"^^com.yelp:restaurant("El Farolito"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/kYemXiMcYje-Da7AjPtWcg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-farolito-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4, review_count=5063, geo=new Location(37.75265, -122.41812, "2779 Mission St, San Francisco, CA"), phone="+14158247877"^^tt:phone_number },
C:   { id="n6L5VIGunR51-D55C-eYeQ"^^com.yelp:restaurant("Foreign Cinema"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/cw5y2LSOIE-EVNjKK_d7SQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/foreign-cinema-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "mediterranean"^^com.yelp:restaurant_cuisine("Mediterranean")], price=enum expensive, rating=4, review_count=5022, geo=new Location(37.75637, -122.41925, "2534 Mission St, San Francisco, CA"), phone="+14156487600"^^tt:phone_number },
C:   { id="XQLmEdXoMzOpffwoFaBtaQ"^^com.yelp:restaurant("Kitchen Story"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/XIhdtd0fB2P_v_qhh1hWbg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/kitchen-story-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "newamerican"^^com.yelp:restaurant_cuisine("American (New)")], price=enum moderate, rating=4, review_count=3591, geo=new Location(37.7642352, -122.4306936, "3499 16th St, San Francisco, CA"), phone="+14155254905"^^tt:phone_number },
C:   { id="4KfQnlcSu4bbTqnvGdGptw"^^com.yelp:restaurant("Beretta"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HKxMJ8q8fzOY76hy7ACIag/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/beretta-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian"), "pizza"^^com.yelp:restaurant_cuisine("Pizza"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3830, geo=new Location(37.753869, -122.420611, "1199 Valencia St, San Francisco, CA"), phone="+14156951199"^^tt:phone_number },
C:   { id="1hMD7RQogPDWpE-p3LKjXA"^^com.yelp:restaurant("Loló"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/QimJjz8ECFnevPcssJYfTw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/lol%C3%B3-san-francisco-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=2283, geo=new Location(37.7573462, -122.4214034, "974 Valencia St, San Francisco, CA"), phone="+14156435656"^^tt:phone_number },
C:   { id="ZDvIMjJ-7I0561ckM4pAeA"^^com.yelp:restaurant("Anchor Oyster Bar"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/oKLPo1042ojJJC9OcCzAMw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/anchor-oyster-bar-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4.5, review_count=1552, geo=new Location(37.759689, -122.434609, "579 Castro St, San Francisco, CA"), phone="+14154313990"^^tt:phone_number },
C:   { id="JARsJVKLPgs_yC3cwDnp7g"^^com.yelp:restaurant("La Taqueria"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/7LqVKYVg2GdEFKI2CFL4cA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-taqueria-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=4256, geo=new Location(37.75088, -122.41805, "2889 Mission St, San Francisco, CA"), phone="+14152857117"^^tt:phone_number },
C:   { id="CYttYTEiQuhSfo3SEh79fA"^^com.yelp:restaurant("Shizen Vegan Sushi Bar & Izakaya"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/-1BWnyjrsDmTmXH_3wZl_w/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/shizen-vegan-sushi-bar-and-izakaya-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "vegan"^^com.yelp:restaurant_cuisine("Vegan"), "izakaya"^^com.yelp:restaurant_cuisine("Izakaya")], price=enum moderate, rating=4.5, review_count=1801, geo=new Location(37.768326, -122.421682, "370 14th St, San Francisco, CA"), phone="+14156785767"^^tt:phone_number }
C: ]]
C: #[count=19];
C: [review_count] of @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") && id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8185 }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[
C:   { temperature=14.5C, wind_speed=6.9mps, humidity=89.2, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") }
C: ]];
A: It is cloudy today in Mission Dolores Park, San Francisco, California and the temperature is 58 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Send that to me on Saturday.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[new Date(enum saturday)]) => @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/nPUUXYVVa3CHJh5yzH8Xnw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/tartine-bakery-san-francisco-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cafes"^^com.yelp:restaurant_cuisine("Cafes")], price=enum moderate, rating=4, review_count=8185, geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number },
C:   { id="KkAVX3Wb7E3lP5F_f_8pXg"^^com.yelp:restaurant("Liholiho Yacht Club"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/DluAA2YbM8k6qRM_mwbiNw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/liholiho-yacht-club-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum expensive, rating=4.5, review_count=2488, geo=new Location(37.7618143, -122.42296790220479, "3560 18th St, San Francisco, CA"), phone="+14155897266"^^tt:phone_number },
C:   { id="SGRmnarrNuVEsAjYdEoA0w"^^com.yelp:restaurant("El Farolito"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/kYemXiMcYje-Da7AjPtWcg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-farolito-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4, review_count=5063, geo=new Location(37.75265, -122.41812, "2779 Mission St, San Francisco, CA"), phone="+14158247877"^^tt:phone_number },
C:   { id="n6L5VIGunR51-D55C-eYeQ"^^com.yelp:restaurant("Foreign Cinema"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/cw5y2LSOIE-EVNjKK_d7SQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/foreign-cinema-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "mediterranean"^^com.yelp:restaurant_cuisine("Mediterranean")], price=enum expensive, rating=4, review_count=5022, geo=new Location(37.75637, -122.41925, "2534 Mission St, San Francisco, CA"), phone="+14156487600"^^tt:phone_number },
C:   { id="XQLmEdXoMzOpffwoFaBtaQ"^^com.yelp:restaurant("Kitchen Story"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/XIhdtd0fB2P_v_qhh1hWbg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/kitchen-story-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "newamerican"^^com.yelp:restaurant_cuisine("American (New)")], price=enum moderate, rating=4, review_count=3591, geo=new Location(37.7642352, -122.4306936, "3499 16th St, San Francisco, CA"), phone="+14155254905"^^tt:phone_number },
C:   { id="4KfQnlcSu4bbTqnvGdGptw"^^com.yelp:restaurant("Beretta"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HKxMJ8q8fzOY76hy7ACIag/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/beretta-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian"), "pizza"^^com.yelp:restaurant_cuisine("Pizza"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3830, geo=new Location(37.753869, -122.420611, "1199 Valencia St, San Francisco, CA"), phone="+14156951199"^^tt:phone_number },
C:   { id="1hMD7RQogPDWpE-p3LKjXA"^^com.yelp:restaurant("Loló"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/QimJjz8ECFnevPcssJYfTw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/lol%C3%B3-san-francisco-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=2283, geo=new Location(37.7573462, -122.4214034, "974 Valencia St, San Francisco, CA"), phone="+14156435656"^^tt:phone_number },
C:   { id="ZDvIMjJ-7I0561ckM4pAeA"^^com.yelp:restaurant("Anchor Oyster Bar"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/oKLPo1042ojJJC9OcCzAMw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/anchor-oyster-bar-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4.5, review_count=1552, geo=new Location(37.759689, -122.434609, "579 Castro St, San Francisco, CA"), phone="+14154313990"^^tt:phone_number },
C:   { id="JARsJVKLPgs_yC3cwDnp7g"^^com.yelp:restaurant("La Taqueria"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/7LqVKYVg2GdEFKI2CFL4cA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-taqueria-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=4256, geo=new Location(37.75088, -122.41805, "2889 Mission St, San Francisco, CA"), phone="+14152857117"^^tt:phone_number },
C:   { id="CYttYTEiQuhSfo3SEh79fA"^^com.yelp:restaurant("Shizen Vegan Sushi Bar & Izakaya"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/-1BWnyjrsDmTmXH_3wZl_w/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/shizen-vegan-sushi-bar-and-izakaya-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "vegan"^^com.yelp:restaurant_cuisine("Vegan"), "izakaya"^^com.yelp:restaurant_cuisine("Izakaya")], price=enum moderate, rating=4.5, review_count=1801, geo=new Location(37.768326, -122.421682, "370 14th St, San Francisco, CA"), phone="+14156785767"^^tt:phone_number }
C: ]]
C: #[count=19];
C: [review_count] of @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") && id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8185 }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[
C:   { temperature=14.5C, wind_speed=6.9mps, humidity=89.2, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") }
C: ]];
C: ontimer(date=[new Date(enum saturday, new Time(8, 0))]) => @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[]];
A: Alright, I will get the current weather in Mission Dolores Park, San Francisco, California at 8:00 AM on Saturday.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_rule_enable_success;
U: tell me the news about San Francisco art.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article(keyword="san francisco art");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/nPUUXYVVa3CHJh5yzH8Xnw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/tartine-bakery-san-francisco-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cafes"^^com.yelp:restaurant_cuisine("Cafes")], price=enum moderate, rating=4, review_count=8185, geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number },
C:   { id="KkAVX3Wb7E3lP5F_f_8pXg"^^com.yelp:restaurant("Liholiho Yacht Club"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/DluAA2YbM8k6qRM_mwbiNw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/liholiho-yacht-club-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum expensive, rating=4.5, review_count=2488, geo=new Location(37.7618143, -122.42296790220479, "3560 18th St, San Francisco, CA"), phone="+14155897266"^^tt:phone_number },
C:   { id="SGRmnarrNuVEsAjYdEoA0w"^^com.yelp:restaurant("El Farolito"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/kYemXiMcYje-Da7AjPtWcg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-farolito-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4, review_count=5063, geo=new Location(37.75265, -122.41812, "2779 Mission St, San Francisco, CA"), phone="+14158247877"^^tt:phone_number },
C:   { id="n6L5VIGunR51-D55C-eYeQ"^^com.yelp:restaurant("Foreign Cinema"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/cw5y2LSOIE-EVNjKK_d7SQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/foreign-cinema-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "mediterranean"^^com.yelp:restaurant_cuisine("Mediterranean")], price=enum expensive, rating=4, review_count=5022, geo=new Location(37.75637, -122.41925, "2534 Mission St, San Francisco, CA"), phone="+14156487600"^^tt:phone_number },
C:   { id="XQLmEdXoMzOpffwoFaBtaQ"^^com.yelp:restaurant("Kitchen Story"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/XIhdtd0fB2P_v_qhh1hWbg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/kitchen-story-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "newamerican"^^com.yelp:restaurant_cuisine("American (New)")], price=enum moderate, rating=4, review_count=3591, geo=new Location(37.7642352, -122.4306936, "3499 16th St, San Francisco, CA"), phone="+14155254905"^^tt:phone_number },
C:   { id="4KfQnlcSu4bbTqnvGdGptw"^^com.yelp:restaurant("Beretta"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HKxMJ8q8fzOY76hy7ACIag/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/beretta-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian"), "pizza"^^com.yelp:restaurant_cuisine("Pizza"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3830, geo=new Location(37.753869, -122.420611, "1199 Valencia St, San Francisco, CA"), phone="+14156951199"^^tt:phone_number },
C:   { id="1hMD7RQogPDWpE-p3LKjXA"^^com.yelp:restaurant("Loló"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/QimJjz8ECFnevPcssJYfTw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/lol%C3%B3-san-francisco-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=2283, geo=new Location(37.7573462, -122.4214034, "974 Valencia St, San Francisco, CA"), phone="+14156435656"^^tt:phone_number },
C:   { id="ZDvIMjJ-7I0561ckM4pAeA"^^com.yelp:restaurant("Anchor Oyster Bar"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/oKLPo1042ojJJC9OcCzAMw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/anchor-oyster-bar-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4.5, review_count=1552, geo=new Location(37.759689, -122.434609, "579 Castro St, San Francisco, CA"), phone="+14154313990"^^tt:phone_number },
C:   { id="JARsJVKLPgs_yC3cwDnp7g"^^com.yelp:restaurant("La Taqueria"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/7LqVKYVg2GdEFKI2CFL4cA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-taqueria-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=4256, geo=new Location(37.75088, -122.41805, "2889 Mission St, San Francisco, CA"), phone="+14152857117"^^tt:phone_number },
C:   { id="CYttYTEiQuhSfo3SEh79fA"^^com.yelp:restaurant("Shizen Vegan Sushi Bar & Izakaya"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/-1BWnyjrsDmTmXH_3wZl_w/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/shizen-vegan-sushi-bar-and-izakaya-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "vegan"^^com.yelp:restaurant_cuisine("Vegan"), "izakaya"^^com.yelp:restaurant_cuisine("Izakaya")], price=enum moderate, rating=4.5, review_count=1801, geo=new Location(37.768326, -122.421682, "370 14th St, San Francisco, CA"), phone="+14156785767"^^tt:phone_number }
C: ]]
C: #[count=19];
C: [review_count] of @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") && id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8185 }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[
C:   { temperature=14.5C, wind_speed=6.9mps, humidity=89.2, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") }
C: ]];
C: ontimer(date=[new Date(enum saturday, new Time(8, 0))]) => @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[]];
C: @com.smartnews.article(keyword="san francisco art")
C: #[results=[
C:   { id="4334840903001710600"^^com.smartnews:article, title="Dinosaurs have next in the art of San Francisco painter Michael Kerbow", author="Mary Corbin", source="48 hills", summary=" San Francisco painter Michael Kerbow wants to make art that matters . His paintings aim to distill what he sees happening today and what possibly awaits us tomorrow .", link="https://48hills.org/2021/10/dinosaurs-have-next-in-the-art-of-san-francisco-painter-michael-kerbow/"^^tt:url, category=["art"^^com.smartnews:category("art")], date=new Date("2021-10-01T21:04:06.000Z"), mention=["michael kerbow", "san francisco", "united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211003/voice/headline_4334840903001710421.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211003/voice/summary_4334840903001710421.mp3"^^tt:url, keyword="san francisco art" },
C:   { id="4334579186652948000"^^com.smartnews:article, title="Art Showcase Featuring Resilience During COVID-19 Opens in San Francisco", author="Bay City News", source="NBC Bay Area", summary=" The exhibition will feature art and photography from CatchLight fellows and San Francisco's COVID Command Center artists in residence that capture the hopeful spirit of San Franciscans during the pandemic .", link="https://www.nbcbayarea.com/news/local/san-francisco/art-showcase-featuring-resilience-during-covid-19-opens-in-san-francisco/2670828/"^^tt:url, category=["art"^^com.smartnews:category("art")], date=new Date("2021-09-30T20:37:35.000Z"), mention=["san francisco", "san franciscans", "san francisco arts commission", "catch light", "android operating system"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211005/voice/headline_4334579186652947861.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211005/voice/summary_4334579186652947861.mp3"^^tt:url, keyword="san francisco art" }
C: ]];
A: Here is the news.
A: Dinosaurs have next in the art of San Francisco painter Michael Kerbow.
A: Art Showcase Featuring Resilience During COVID-19 Opens in San Francisco.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_two;
U: Play radio station KQED.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.tunein.station() filter id =~ "kqed" => @com.tunein.radio_play(id=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/nPUUXYVVa3CHJh5yzH8Xnw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/tartine-bakery-san-francisco-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cafes"^^com.yelp:restaurant_cuisine("Cafes")], price=enum moderate, rating=4, review_count=8185, geo=new Location(37.76131, -122.42431, "600 Guerrero St, San Francisco, CA"), phone="+14154872600"^^tt:phone_number },
C:   { id="KkAVX3Wb7E3lP5F_f_8pXg"^^com.yelp:restaurant("Liholiho Yacht Club"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/DluAA2YbM8k6qRM_mwbiNw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/liholiho-yacht-club-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum expensive, rating=4.5, review_count=2488, geo=new Location(37.7618143, -122.42296790220479, "3560 18th St, San Francisco, CA"), phone="+14155897266"^^tt:phone_number },
C:   { id="SGRmnarrNuVEsAjYdEoA0w"^^com.yelp:restaurant("El Farolito"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/kYemXiMcYje-Da7AjPtWcg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-farolito-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4, review_count=5063, geo=new Location(37.75265, -122.41812, "2779 Mission St, San Francisco, CA"), phone="+14158247877"^^tt:phone_number },
C:   { id="n6L5VIGunR51-D55C-eYeQ"^^com.yelp:restaurant("Foreign Cinema"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/cw5y2LSOIE-EVNjKK_d7SQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/foreign-cinema-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "mediterranean"^^com.yelp:restaurant_cuisine("Mediterranean")], price=enum expensive, rating=4, review_count=5022, geo=new Location(37.75637, -122.41925, "2534 Mission St, San Francisco, CA"), phone="+14156487600"^^tt:phone_number },
C:   { id="XQLmEdXoMzOpffwoFaBtaQ"^^com.yelp:restaurant("Kitchen Story"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/XIhdtd0fB2P_v_qhh1hWbg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/kitchen-story-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "newamerican"^^com.yelp:restaurant_cuisine("American (New)")], price=enum moderate, rating=4, review_count=3591, geo=new Location(37.7642352, -122.4306936, "3499 16th St, San Francisco, CA"), phone="+14155254905"^^tt:phone_number },
C:   { id="4KfQnlcSu4bbTqnvGdGptw"^^com.yelp:restaurant("Beretta"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HKxMJ8q8fzOY76hy7ACIag/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/beretta-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian"), "pizza"^^com.yelp:restaurant_cuisine("Pizza"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3830, geo=new Location(37.753869, -122.420611, "1199 Valencia St, San Francisco, CA"), phone="+14156951199"^^tt:phone_number },
C:   { id="1hMD7RQogPDWpE-p3LKjXA"^^com.yelp:restaurant("Loló"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/QimJjz8ECFnevPcssJYfTw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/lol%C3%B3-san-francisco-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=2283, geo=new Location(37.7573462, -122.4214034, "974 Valencia St, San Francisco, CA"), phone="+14156435656"^^tt:phone_number },
C:   { id="ZDvIMjJ-7I0561ckM4pAeA"^^com.yelp:restaurant("Anchor Oyster Bar"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/oKLPo1042ojJJC9OcCzAMw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/anchor-oyster-bar-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4.5, review_count=1552, geo=new Location(37.759689, -122.434609, "579 Castro St, San Francisco, CA"), phone="+14154313990"^^tt:phone_number },
C:   { id="JARsJVKLPgs_yC3cwDnp7g"^^com.yelp:restaurant("La Taqueria"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/7LqVKYVg2GdEFKI2CFL4cA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-taqueria-san-francisco-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=4256, geo=new Location(37.75088, -122.41805, "2889 Mission St, San Francisco, CA"), phone="+14152857117"^^tt:phone_number },
C:   { id="CYttYTEiQuhSfo3SEh79fA"^^com.yelp:restaurant("Shizen Vegan Sushi Bar & Izakaya"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/-1BWnyjrsDmTmXH_3wZl_w/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/shizen-vegan-sushi-bar-and-izakaya-san-francisco?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "vegan"^^com.yelp:restaurant_cuisine("Vegan"), "izakaya"^^com.yelp:restaurant_cuisine("Izakaya")], price=enum moderate, rating=4.5, review_count=1801, geo=new Location(37.768326, -122.421682, "370 14th St, San Francisco, CA"), phone="+14156785767"^^tt:phone_number }
C: ]]
C: #[count=19];
C: [review_count] of @com.yelp.restaurant() filter geo == new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") && id == "ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery")
C: #[results=[
C:   { id="ri7UUYmx21AgSpRsf4-9QA"^^com.yelp:restaurant("Tartine Bakery"), review_count=8185 }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[
C:   { temperature=14.5C, wind_speed=6.9mps, humidity=89.2, cloudiness=100, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California") }
C: ]];
C: ontimer(date=[new Date(enum saturday, new Time(8, 0))]) => @org.thingpedia.weather.current(location=new Location(37.7597203, -122.4271322952394, "Mission Dolores Park, San Francisco, California"))
C: #[results=[]];
C: @com.smartnews.article(keyword="san francisco art")
C: #[results=[
C:   { id="4334840903001710600"^^com.smartnews:article, title="Dinosaurs have next in the art of San Francisco painter Michael Kerbow", author="Mary Corbin", source="48 hills", summary=" San Francisco painter Michael Kerbow wants to make art that matters . His paintings aim to distill what he sees happening today and what possibly awaits us tomorrow .", link="https://48hills.org/2021/10/dinosaurs-have-next-in-the-art-of-san-francisco-painter-michael-kerbow/"^^tt:url, category=["art"^^com.smartnews:category("art")], date=new Date("2021-10-01T21:04:06.000Z"), mention=["michael kerbow", "san francisco", "united states"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211003/voice/headline_4334840903001710421.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211003/voice/summary_4334840903001710421.mp3"^^tt:url, keyword="san francisco art" },
C:   { id="4334579186652948000"^^com.smartnews:article, title="Art Showcase Featuring Resilience During COVID-19 Opens in San Francisco", author="Bay City News", source="NBC Bay Area", summary=" The exhibition will feature art and photography from CatchLight fellows and San Francisco's COVID Command Center artists in residence that capture the hopeful spirit of San Franciscans during the pandemic .", link="https://www.nbcbayarea.com/news/local/san-francisco/art-showcase-featuring-resilience-during-covid-19-opens-in-san-francisco/2670828/"^^tt:url, category=["art"^^com.smartnews:category("art")], date=new Date("2021-09-30T20:37:35.000Z"), mention=["san francisco", "san franciscans", "san francisco arts commission", "catch light", "android operating system"], headline_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211005/voice/headline_4334579186652947861.mp3"^^tt:url, summary_audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/211005/voice/summary_4334579186652947861.mp3"^^tt:url, keyword="san francisco art" }
C: ]];
C: (@com.tunein.station() filter id =~ "kqed")[1] => @com.tunein.radio_play(id=id)
C: #[results=[
C:   { id="station:s34804"^^com.tunein:station("KQED-FM") }
C: ]];
A: I played KQED-FM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Send KQED to me on Saturday.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[new Date(enum saturday)]) => @com.tunein.station() filter id =~ "kqed";
====
# recording/f8b1fb03bf180483bf7d60db31101cb5
U: how about some salsa music for the break?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "salsa") => @org.thingpedia.media-player.play(playable=id);
====
# recording/ff19ab7359223387c99624b826ea1ae5
U: How about some salsa music for the break?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "salsa") => @org.thingpedia.media-player.play(playable=id);
====
# recording/2c25105f3f141cc586f42cfb1e37bef7
U: thank you.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/afeebf8980c65c3237964197c00ff59f
U: Send KQED to me on Saturday.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[new Date(enum saturday)]) => @com.tunein.station() filter id =~ "kqed";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: ontimer(date=[new Date(enum saturday, new Time(8, 0))]) => @com.tunein.station() filter id =~ "kqed"
C: #[results=[]];
A: Alright, I will get kqed at 8:00 AM on Saturday.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_rule_enable_success;
U: Play Bay curious podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "bay curious" => @org.thingpedia.media-player.play(playable=id);
====
# recording/d421021af81fe5bee931ef1d553aeff8
U: set my location.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(type=enum current);
A: What place do you want?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(location);
AT: @org.thingpedia.builtin.thingengine.builtin.set_location(type=enum current);
U: Sonora, CA.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location("sonora , ca"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current }
C: ]];
A: I set your current location.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: What's the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=4.3C, wind_speed=1.3mps, humidity=76.9, cloudiness=100, fog=26.6, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
A: It is foggy today in Sonora, California and the temperature is 40 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's a good Mexican restaurant to go to around here?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("mexican")) && geo == $location.current_location;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=4.3C, wind_speed=1.3mps, humidity=76.9, cloudiness=100, fog=26.6, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @com.yelp.restaurant() filter contains(cuisines, "mexican"^^com.yelp:restaurant_cuisine("Mexican")) && geo == new Location(37.9840911, -120.3821381, "Sonora, California")
C: #[results=[
C:   { id="cUMT3-385LurvOyW4UqkrQ"^^com.yelp:restaurant("Taqueria Sonora"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/NUTIe35cHWLfEQZi1u3DAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taqueria-sonora-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "latin"^^com.yelp:restaurant_cuisine("Latin American")], price=enum cheap, rating=4.5, review_count=208, geo=new Location(37.9843909248909, -120.382722660668, "74 S Washington St, Sonora, CA"), phone="+12096947047"^^tt:phone_number },
C:   { id="G7Kr0HPGnJDt1AZYMWVkBQ"^^com.yelp:restaurant("Cazadora Restaurante"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ip9uOBEd9K53ULkQY800NA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cazadora-restaurante-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "spanish"^^com.yelp:restaurant_cuisine("Spanish")], price=enum moderate, rating=4.5, review_count=103, geo=new Location(37.9830562859695, -120.38315499099, "70 W Stockton St, Sonora, CA"), phone="+12095324000"^^tt:phone_number },
C:   { id="7fyOTlJkrGiYxJnKB-lQnQ"^^com.yelp:restaurant("El Arroyo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/T9M5_tv_UCQOCajK2d-YPQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-arroyo-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=106, geo=new Location(37.983895, -120.382388, "126 S Washington St, Sonora, CA"), phone="+12096947175"^^tt:phone_number },
C:   { id="EA4FNZdDHUefPfbR_4_cyw"^^com.yelp:restaurant("El Jardin Restaurant"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/4yEu_1To_SeY-EToawa2Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-jardin-restaurant-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3, review_count=127, geo=new Location(37.98612, -120.38413, "76 N Washington St, Sonora, CA"), phone="+12095880770"^^tt:phone_number },
C:   { id="ZXaYFDhUDoJf3yemhteiIQ"^^com.yelp:restaurant("Cocina Michoacana"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/KO8znnU3zp-kzMjyFWMuDw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cocina-michoacana-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3.5, review_count=111, geo=new Location(37.975839, -120.369462, "770 Mono Way, Sonora, CA"), phone="+12095333841"^^tt:phone_number },
C:   { id="jzsEKMDsdyk3unSmCpKvgA"^^com.yelp:restaurant("Pablito's Burrito Express"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/a5ZU_FjioANV2FwxanJDwg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/pablitos-burrito-express-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4.5, review_count=20, geo=new Location(37.9758143398168, -120.379544790179, "1155B Mono Way, Sonora, CA"), phone="+12095592708"^^tt:phone_number }
C: ]];
A: I see Taqueria Sonora, Cazadora Restaurante, and El Arroyo. Taqueria Sonora is rated 4.5 stars, Cazadora Restaurante is rated 4.5 stars, and El Arroyo is rated 4 stars.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: play some Bob.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("bob")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=4.3C, wind_speed=1.3mps, humidity=76.9, cloudiness=100, fog=26.6, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @com.yelp.restaurant() filter contains(cuisines, "mexican"^^com.yelp:restaurant_cuisine("Mexican")) && geo == new Location(37.9840911, -120.3821381, "Sonora, California")
C: #[results=[
C:   { id="cUMT3-385LurvOyW4UqkrQ"^^com.yelp:restaurant("Taqueria Sonora"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/NUTIe35cHWLfEQZi1u3DAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taqueria-sonora-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "latin"^^com.yelp:restaurant_cuisine("Latin American")], price=enum cheap, rating=4.5, review_count=208, geo=new Location(37.9843909248909, -120.382722660668, "74 S Washington St, Sonora, CA"), phone="+12096947047"^^tt:phone_number },
C:   { id="G7Kr0HPGnJDt1AZYMWVkBQ"^^com.yelp:restaurant("Cazadora Restaurante"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ip9uOBEd9K53ULkQY800NA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cazadora-restaurante-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "spanish"^^com.yelp:restaurant_cuisine("Spanish")], price=enum moderate, rating=4.5, review_count=103, geo=new Location(37.9830562859695, -120.38315499099, "70 W Stockton St, Sonora, CA"), phone="+12095324000"^^tt:phone_number },
C:   { id="7fyOTlJkrGiYxJnKB-lQnQ"^^com.yelp:restaurant("El Arroyo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/T9M5_tv_UCQOCajK2d-YPQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-arroyo-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=106, geo=new Location(37.983895, -120.382388, "126 S Washington St, Sonora, CA"), phone="+12096947175"^^tt:phone_number },
C:   { id="EA4FNZdDHUefPfbR_4_cyw"^^com.yelp:restaurant("El Jardin Restaurant"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/4yEu_1To_SeY-EToawa2Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-jardin-restaurant-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3, review_count=127, geo=new Location(37.98612, -120.38413, "76 N Washington St, Sonora, CA"), phone="+12095880770"^^tt:phone_number },
C:   { id="ZXaYFDhUDoJf3yemhteiIQ"^^com.yelp:restaurant("Cocina Michoacana"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/KO8znnU3zp-kzMjyFWMuDw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cocina-michoacana-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3.5, review_count=111, geo=new Location(37.975839, -120.369462, "770 Mono Way, Sonora, CA"), phone="+12095333841"^^tt:phone_number },
C:   { id="jzsEKMDsdyk3unSmCpKvgA"^^com.yelp:restaurant("Pablito's Burrito Express"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/a5ZU_FjioANV2FwxanJDwg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/pablitos-burrito-express-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4.5, review_count=20, geo=new Location(37.9758143398168, -120.379544790179, "1155B Mono Way, Sonora, CA"), phone="+12095592708"^^tt:phone_number }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: How you doing?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=4.3C, wind_speed=1.3mps, humidity=76.9, cloudiness=100, fog=26.6, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @com.yelp.restaurant() filter contains(cuisines, "mexican"^^com.yelp:restaurant_cuisine("Mexican")) && geo == new Location(37.9840911, -120.3821381, "Sonora, California")
C: #[results=[
C:   { id="cUMT3-385LurvOyW4UqkrQ"^^com.yelp:restaurant("Taqueria Sonora"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/NUTIe35cHWLfEQZi1u3DAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taqueria-sonora-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "latin"^^com.yelp:restaurant_cuisine("Latin American")], price=enum cheap, rating=4.5, review_count=208, geo=new Location(37.9843909248909, -120.382722660668, "74 S Washington St, Sonora, CA"), phone="+12096947047"^^tt:phone_number },
C:   { id="G7Kr0HPGnJDt1AZYMWVkBQ"^^com.yelp:restaurant("Cazadora Restaurante"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ip9uOBEd9K53ULkQY800NA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cazadora-restaurante-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "spanish"^^com.yelp:restaurant_cuisine("Spanish")], price=enum moderate, rating=4.5, review_count=103, geo=new Location(37.9830562859695, -120.38315499099, "70 W Stockton St, Sonora, CA"), phone="+12095324000"^^tt:phone_number },
C:   { id="7fyOTlJkrGiYxJnKB-lQnQ"^^com.yelp:restaurant("El Arroyo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/T9M5_tv_UCQOCajK2d-YPQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-arroyo-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=106, geo=new Location(37.983895, -120.382388, "126 S Washington St, Sonora, CA"), phone="+12096947175"^^tt:phone_number },
C:   { id="EA4FNZdDHUefPfbR_4_cyw"^^com.yelp:restaurant("El Jardin Restaurant"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/4yEu_1To_SeY-EToawa2Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-jardin-restaurant-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3, review_count=127, geo=new Location(37.98612, -120.38413, "76 N Washington St, Sonora, CA"), phone="+12095880770"^^tt:phone_number },
C:   { id="ZXaYFDhUDoJf3yemhteiIQ"^^com.yelp:restaurant("Cocina Michoacana"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/KO8znnU3zp-kzMjyFWMuDw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cocina-michoacana-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3.5, review_count=111, geo=new Location(37.975839, -120.369462, "770 Mono Way, Sonora, CA"), phone="+12095333841"^^tt:phone_number },
C:   { id="jzsEKMDsdyk3unSmCpKvgA"^^com.yelp:restaurant("Pablito's Burrito Express"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/a5ZU_FjioANV2FwxanJDwg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/pablitos-burrito-express-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4.5, review_count=20, geo=new Location(37.9758143398168, -120.379544790179, "1155B Mono Way, Sonora, CA"), phone="+12095592708"^^tt:phone_number }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great, thanks for asking! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: How's it going?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.9840911, -120.3821381, "Sonora, California"), type=enum current }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=4.3C, wind_speed=1.3mps, humidity=76.9, cloudiness=100, fog=26.6, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @com.yelp.restaurant() filter contains(cuisines, "mexican"^^com.yelp:restaurant_cuisine("Mexican")) && geo == new Location(37.9840911, -120.3821381, "Sonora, California")
C: #[results=[
C:   { id="cUMT3-385LurvOyW4UqkrQ"^^com.yelp:restaurant("Taqueria Sonora"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/NUTIe35cHWLfEQZi1u3DAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taqueria-sonora-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "latin"^^com.yelp:restaurant_cuisine("Latin American")], price=enum cheap, rating=4.5, review_count=208, geo=new Location(37.9843909248909, -120.382722660668, "74 S Washington St, Sonora, CA"), phone="+12096947047"^^tt:phone_number },
C:   { id="G7Kr0HPGnJDt1AZYMWVkBQ"^^com.yelp:restaurant("Cazadora Restaurante"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ip9uOBEd9K53ULkQY800NA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cazadora-restaurante-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "spanish"^^com.yelp:restaurant_cuisine("Spanish")], price=enum moderate, rating=4.5, review_count=103, geo=new Location(37.9830562859695, -120.38315499099, "70 W Stockton St, Sonora, CA"), phone="+12095324000"^^tt:phone_number },
C:   { id="7fyOTlJkrGiYxJnKB-lQnQ"^^com.yelp:restaurant("El Arroyo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/T9M5_tv_UCQOCajK2d-YPQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-arroyo-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=106, geo=new Location(37.983895, -120.382388, "126 S Washington St, Sonora, CA"), phone="+12096947175"^^tt:phone_number },
C:   { id="EA4FNZdDHUefPfbR_4_cyw"^^com.yelp:restaurant("El Jardin Restaurant"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/4yEu_1To_SeY-EToawa2Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-jardin-restaurant-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3, review_count=127, geo=new Location(37.98612, -120.38413, "76 N Washington St, Sonora, CA"), phone="+12095880770"^^tt:phone_number },
C:   { id="ZXaYFDhUDoJf3yemhteiIQ"^^com.yelp:restaurant("Cocina Michoacana"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/KO8znnU3zp-kzMjyFWMuDw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cocina-michoacana-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3.5, review_count=111, geo=new Location(37.975839, -120.369462, "770 Mono Way, Sonora, CA"), phone="+12095333841"^^tt:phone_number },
C:   { id="jzsEKMDsdyk3unSmCpKvgA"^^com.yelp:restaurant("Pablito's Burrito Express"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/a5ZU_FjioANV2FwxanJDwg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/pablitos-burrito-express-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4.5, review_count=20, geo=new Location(37.9758143398168, -120.379544790179, "1155B Mono Way, Sonora, CA"), phone="+12095592708"^^tt:phone_number }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great, thanks for asking! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: How you doing?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=4.3C, wind_speed=1.3mps, humidity=76.9, cloudiness=100, fog=26.6, status=enum foggy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=15;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @com.yelp.restaurant() filter contains(cuisines, "mexican"^^com.yelp:restaurant_cuisine("Mexican")) && geo == new Location(37.9840911, -120.3821381, "Sonora, California")
C: #[results=[
C:   { id="cUMT3-385LurvOyW4UqkrQ"^^com.yelp:restaurant("Taqueria Sonora"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/NUTIe35cHWLfEQZi1u3DAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taqueria-sonora-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "latin"^^com.yelp:restaurant_cuisine("Latin American")], price=enum cheap, rating=4.5, review_count=208, geo=new Location(37.9843909248909, -120.382722660668, "74 S Washington St, Sonora, CA"), phone="+12096947047"^^tt:phone_number },
C:   { id="G7Kr0HPGnJDt1AZYMWVkBQ"^^com.yelp:restaurant("Cazadora Restaurante"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ip9uOBEd9K53ULkQY800NA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cazadora-restaurante-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "spanish"^^com.yelp:restaurant_cuisine("Spanish")], price=enum moderate, rating=4.5, review_count=103, geo=new Location(37.9830562859695, -120.38315499099, "70 W Stockton St, Sonora, CA"), phone="+12095324000"^^tt:phone_number },
C:   { id="7fyOTlJkrGiYxJnKB-lQnQ"^^com.yelp:restaurant("El Arroyo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/T9M5_tv_UCQOCajK2d-YPQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-arroyo-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=106, geo=new Location(37.983895, -120.382388, "126 S Washington St, Sonora, CA"), phone="+12096947175"^^tt:phone_number },
C:   { id="EA4FNZdDHUefPfbR_4_cyw"^^com.yelp:restaurant("El Jardin Restaurant"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/4yEu_1To_SeY-EToawa2Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-jardin-restaurant-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3, review_count=127, geo=new Location(37.98612, -120.38413, "76 N Washington St, Sonora, CA"), phone="+12095880770"^^tt:phone_number },
C:   { id="ZXaYFDhUDoJf3yemhteiIQ"^^com.yelp:restaurant("Cocina Michoacana"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/KO8znnU3zp-kzMjyFWMuDw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cocina-michoacana-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3.5, review_count=111, geo=new Location(37.975839, -120.369462, "770 Mono Way, Sonora, CA"), phone="+12095333841"^^tt:phone_number },
C:   { id="jzsEKMDsdyk3unSmCpKvgA"^^com.yelp:restaurant("Pablito's Burrito Express"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/a5ZU_FjioANV2FwxanJDwg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/pablitos-burrito-express-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4.5, review_count=20, geo=new Location(37.9758143398168, -120.379544790179, "1155B Mono Way, Sonora, CA"), phone="+12095592708"^^tt:phone_number }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great, thanks for asking! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: What's the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter contains(cuisines, "mexican"^^com.yelp:restaurant_cuisine("Mexican")) && geo == new Location(37.9840911, -120.3821381, "Sonora, California")
C: #[results=[
C:   { id="cUMT3-385LurvOyW4UqkrQ"^^com.yelp:restaurant("Taqueria Sonora"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/NUTIe35cHWLfEQZi1u3DAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taqueria-sonora-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "latin"^^com.yelp:restaurant_cuisine("Latin American")], price=enum cheap, rating=4.5, review_count=208, geo=new Location(37.9843909248909, -120.382722660668, "74 S Washington St, Sonora, CA"), phone="+12096947047"^^tt:phone_number },
C:   { id="G7Kr0HPGnJDt1AZYMWVkBQ"^^com.yelp:restaurant("Cazadora Restaurante"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ip9uOBEd9K53ULkQY800NA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cazadora-restaurante-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican"), "spanish"^^com.yelp:restaurant_cuisine("Spanish")], price=enum moderate, rating=4.5, review_count=103, geo=new Location(37.9830562859695, -120.38315499099, "70 W Stockton St, Sonora, CA"), phone="+12095324000"^^tt:phone_number },
C:   { id="7fyOTlJkrGiYxJnKB-lQnQ"^^com.yelp:restaurant("El Arroyo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/T9M5_tv_UCQOCajK2d-YPQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-arroyo-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=4, review_count=106, geo=new Location(37.983895, -120.382388, "126 S Washington St, Sonora, CA"), phone="+12096947175"^^tt:phone_number },
C:   { id="EA4FNZdDHUefPfbR_4_cyw"^^com.yelp:restaurant("El Jardin Restaurant"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/4yEu_1To_SeY-EToawa2Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/el-jardin-restaurant-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3, review_count=127, geo=new Location(37.98612, -120.38413, "76 N Washington St, Sonora, CA"), phone="+12095880770"^^tt:phone_number },
C:   { id="ZXaYFDhUDoJf3yemhteiIQ"^^com.yelp:restaurant("Cocina Michoacana"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/KO8znnU3zp-kzMjyFWMuDw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cocina-michoacana-sonora?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum moderate, rating=3.5, review_count=111, geo=new Location(37.975839, -120.369462, "770 Mono Way, Sonora, CA"), phone="+12095333841"^^tt:phone_number },
C:   { id="jzsEKMDsdyk3unSmCpKvgA"^^com.yelp:restaurant("Pablito's Burrito Express"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/a5ZU_FjioANV2FwxanJDwg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/pablitos-burrito-express-sonora-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["mexican"^^com.yelp:restaurant_cuisine("Mexican")], price=enum cheap, rating=4.5, review_count=20, geo=new Location(37.9758143398168, -120.379544790179, "1155B Mono Way, Sonora, CA"), phone="+12095592708"^^tt:phone_number }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=16.8C, wind_speed=0.9mps, humidity=72.6, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
A: It is sunny today in Sonora, California and the temperature is 62 degrees Fahrenheit.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: set my location.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=16.8C, wind_speed=0.9mps, humidity=72.6, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(type=enum current);
A: What place do you want?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(location);
AT: @org.thingpedia.builtin.thingengine.builtin.set_location(type=enum current);
U: Palo Alto, CA.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location("palo alto , ca"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2QsynagSdAqZj3U9HgDzjD"^^org.thingpedia.media-source:artist("Bob Marley & The Wailers")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.9840911, -120.3821381, "Sonora, California"))
C: #[results=[
C:   { temperature=16.8C, wind_speed=0.9mps, humidity=72.6, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.9840911, -120.3821381, "Sonora, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current }
C: ]];
A: I set your current location.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: It's gone today.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b9e39a025ebb2f5ca601c4e6e60c7e7a
U: how you doing man?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great, thanks for asking! How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great, thanks for asking! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play some Bob.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("bob")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/c2aff5dcda10e7b252cee59311bebcb5
U: tell me joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="KeqOmOZDYDd"^^com.icanhazdadjoke:id, text="Why is it so windy inside an arena? All those fans." }
C: ]];
A: Why is it so windy inside an arena? All those fans.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: songs in my library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="KeqOmOZDYDd"^^com.icanhazdadjoke:id, text="Why is it so windy inside an arena? All those fans." }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library()
C: #[results=[]];
A: Sorry, there are no your favorites matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: when my switch changes stat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.switch.state());
====
# recording/a397da7756b739000eabff392a45b1f1
U: play some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/dacc7ac1da8c92ed4975bdeb265ce7be
U: get greeting
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/f9e34712903dc45f48b832a1dbac815d
U: Hi.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/185025
U: byee
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/184964
U: thank you go to sleep
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/184887
U: weather in celcius
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
UT: @org.thingpedia.weather.current();
====
# log/184662
U: can you play me a song?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() => @org.thingpedia.media-player.play(playable=id);
====
# log/184505
U: helloi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/184183
U: get weather tomorrow in celsius
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
UT: @org.thingpedia.weather.forecast();
====
# log/179683
U: play black hot rolling monkey stones playlist on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "black hot rolling monkey stones" => @org.thingpedia.media-player.play(playable=id);
====
# log/62705
U: what is the forecast for tomorrow in bradenton, fl in farenheit
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum fahrenheit);
UT: @org.thingpedia.weather.forecast(location=new Location("bradenton , fl"));
====
# log/7656
U: play kajagoogoo on spotif5
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("kajagoogoo")) => @org.thingpedia.media-player.play(playable=id);
====
# log/79730
U: do not tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/54885
U: turn my light on when motion is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion.motion()) filter state == enum detecting => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# log/157691
U: hi ho
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/6304
U: add this song to my playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
====
# log/133643
U: nice to meet you
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/96377
U: play burlap to cashmere
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("burlap to cashmere")) => @org.thingpedia.media-player.play(playable=id);
====
# log/12006
U: tweet "str:QUOTED_STRING::0:" when i get home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.home => @com.twitter.post(status="str:QUOTED_STRING::0:");
