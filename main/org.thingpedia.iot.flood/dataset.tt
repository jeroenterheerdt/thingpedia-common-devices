dataset @org.thingpedia.iot.flood language "en" {

  program := @org.thingpedia.iot.flood.flood()
  #_[utterances=["is it flooding?",
                 "check if my flood sensor says it is flooding",
                 "what does my flood sensor say?",
                 "what is the level of water?",
                 "how high is the water?"]]
  #[id=150001]
  #[name="StateThenNotify"];

  query := @org.thingpedia.iot.flood.flood()
  #_[utterances=["the flood level",
                 "whether it is flooding",
                 "if it is flooding"]]
  #[id=150002]
  #[name="State"];

  stream := monitor (@org.thingpedia.iot.flood.flood())
  #_[utterances=["when the water level changes",
                 "when starts flooding",
                 "when water raise"]]
  #[id=150003]
  #[name="MonitorState"];

  program := @org.thingpedia.iot.flood(all=true).flood()
  #_[utterances=["is there any flooding alarm?",
                 "check if all my flood sensors says it is flooding",
                 "what does my flood sensors say?"]]
  #[id=150004]
  #[name="AllStateThenNotify"];

  stream (p_state : Enum(flooding,not_flooding)) := monitor (@org.thingpedia.iot.flood.flood()), (state == p_state)
  #_[utterances=["when the flood sensor says it is ${p_state}",
                 "as soon as the flood sensor reads ${p_state}"]]
  #[id=150005]
  #[name="MonitorStatebyState"];

  stream := monitor (@org.thingpedia.iot.flood.flood()),  (state == enum(flooding))
  #_[utterances=["when it gets flooding",
                 "when the flood alert is high",
                 "if water level gets very high",
                 "when start getting high water",
                 "if it is flooding"]]
  #[id=150006]
  #[name="MonitorStatebyStateFlooding"];

  stream := monitor (@org.thingpedia.iot.flood.flood()), (state == enum(not_flooding))
  #_[utterances=["when the water level is normal",
                "if it is no longer flooding",
                "when it is not flooding anymore"]]
  #[id=150007]
  #[name="MonitorStatebyStateNotFlooding"];

  program (p_name : String) := @org.thingpedia.iot.flood(name=p_name).flood()
  #_[utterances=["check if my ${p_name} sensor says it is flooding",
                 "what does my ${p_name} flood sensor say?",
                 "how is the water level according to my ${p_name}?"]]
  #[id=150008]
  #[name="MonitorStatebyStateName"];               

  query (p_name : String) := @org.thingpedia.iot.flood(name=p_name).flood()
  #_[utterances=["the flood according to my ${p_name}",
                 "the water level as my ${p_name} says"]]
  #[id=150009]
  #[name="StateName"];   

  stream (p_name : String) := monitor(@org.thingpedia.iot.flood(name=p_name).flood())
  #_[utterances=["when my ${p_name} detects a change in the water level",
                 "as soon as the ${p_name} read raising or lowering of the water"]]
  #[id=150010]
  #[name="MonitorName"];  

  stream (p_name : String, p_state : Enum(flooding,not_flooding)) := monitor (@org.thingpedia.iot.flood(name=p_name).flood()), (state == p_state)
  #_[utterances=["when the ${p_name} flood sensor says it is ${p_state}",
                 "as soon as the ${p_name} flood sensor changes to ${p_state}"]]
  #[id=150011]
  #[name="MonitorNamebyState"];

  stream (p_name : String) := monitor (@org.thingpedia.iot.flood(name=p_name).flood()), (state == enum(flooding))
  #_[utterances=["when my ${p_name} flood sensor says it is on",
                 "when the ${p_name} flood sensor detects high water"]]
  #[id=150012]
  #[name="MonitorNamebyStateFlooding"];

  stream (p_name : String) := monitor (@org.thingpedia.iot.flood(name=p_name).flood()), (state == enum(not_flooding))
  #_[utterances=["when my ${p_name} flood sensor says it is not flooding",
                 "when the ${p_name} flood sensor detects regular water level"]]
  #[id=150013]
  #[name="MonitorNamebyStateNotFlooding"];

  stream (p_name : String, p_flood : Number) := monitor (@org.thingpedia.iot.flood(name=p_name).flood()), value >= p_flood
  #_[utterances=["when the water level is higher than ${p_flood} percent according to my ${p_name}",
                 "if the water level detected by my ${p_name} goes above ${p_flood} alert"]]
  #[id=150014]
  #[name="MonitorNamebyStatelevelupFlooding"];

  stream (p_name : String, p_flood : Number) := monitor (@org.thingpedia.iot.flood(name=p_name).flood()), value <= p_flood
  #_[utterances=["when the water level is lower than ${p_flood} percent according to my ${p_name}",
                 "if the water level detected by my ${p_name} goes below ${p_flood} percent"]]
  #[id=150015]
  #[name="MonitorNamebyStateleveldownFlooding"];
}
