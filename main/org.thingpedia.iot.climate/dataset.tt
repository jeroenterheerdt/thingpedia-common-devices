dataset @org.thingpedia.iot.climate language "en" {
    query := @org.thingpedia.iot.climate.hvac_action()
    #_[utterances=["the state of my hvac",
                   "what the HVAC is currently doing",
                   "current HVAC action"]];

    query := @org.thingpedia.iot.climate.hvac_modes_aval()
    #_[utterances=["the available modes for the HVAC system",
                   "the HVAC system has the following available modes"]];

    action (p_mode :Enum(heat,cool,heat_cool,off,auto,dry,fan_only)) := @org.thingpedia.iot.climate.set_hvac_mode(mode=p_mode)
    #_[utterances=["set my hvac to $p_mode"]];

    action := @org.thingpedia.iot.climate.set_hvac_mode(mode=enum(heat))
    #_[utterances=["turn the heating on",
                   "turn on the heater"]];

    action := @org.thingpedia.iot.climate.set_hvac_mode(mode=enum(cool))
    #_[utterances=["turn the ac on",
                   "turn on the ac",
                   "turn on the aircon",
                   "start cooling",
                   "turn the air conditioning on",
                   "turn the cooling system on"]];

    action := @org.thingpedia.iot.climate.set_hvac_mode(mode=enum(off))
    #_[utterances=["turn the heating off",
                   "turn off the heater",
                   "turn off the ac",
                   "switch off the heater",
                   "switch the aircon off"]];

    action := @org.thingpedia.iot.climate.set_hvac_mode(mode=enum(auto))
    #_[utterances=["turn the hvac to auto",
                   "set to auto the hvac",
                   "switch hvac mode to auto"]];

    action := @org.thingpedia.iot.climate.set_hvac_mode(mode=enum(dry))
    #_[utterances=["set hvac to drying",
                   "start drying",
                   "turn on the drying",
                   "turn the dry mode to on"]];

    action := @org.thingpedia.iot.climate.set_hvac_mode(mode=enum(fan_only))
    #_[utterances=["turn only the fan on",
                   "turn on the fan",
                   "start the fan of the hvac",
                   "switch the hvac fan on"]];

    query := @org.thingpedia.iot.climate.hvac_preset()
    #_[utterances=["the state of my hvac",
                   "what the HVAC is currently doing",
                   "current HVAC action"]];

    query := @org.thingpedia.iot.climate.hvac_presets_aval()
    #_[utterances=["the available presets for the HVAC system",
                   "the HVAC system has the following available presets"]];

    action (p_preset :Enum(eco,away,boost,comfort,home,sleep,activity)) := @org.thingpedia.iot.climate.set_hvac_preset(preset=p_preset)
    #_[utterances=["set my hvac to $p_preset",
                   "turn the hvac preset to $p_preset",
                   "set to $p_preset the hvac",
                   "switch hvac preset to $p_preset",
                   "change to $p_preset the preset of the hvac"]];

    query := @org.thingpedia.iot.climate.target_temperature()
    #_[utterances=["the target temperature set for my hvac",
                   "the target temperature set on my thermostat"]];

    query := @org.thingpedia.iot.climate.current_temperature()
    #_[utterances=["the current temperature read by the thermostat",
                   "the temperature around the thermostat"]];

    action := @org.thingpedia.iot.climate.set_target_temperature(value=$?)
    #_[utterances=["change the temperature on my thermostat",
                   "set temperature of my hvac"]];

    action (p_value :Measure(C)) := @org.thingpedia.iot.climate.set_target_temperature(value=p_value)
    #_[utterances=["set temperature on my thermostat to $p_value",
                   "set my thermostat to ${p_value:const}",
                   "set the temperature to ${p_value:const} on my thermostat"]];

    query := @org.thingpedia.iot.climate.min_temperature()
    #_[utterances=["the minimum temperature set on the thermostat",
                   "the minimum temperature range on the thermostat",
                   "the lowest temperature possible"]];

    query := @org.thingpedia.iot.climate.max_temperature()
    #_[utterances=["the maximum temperature set on the thermostat",
                   "the maximum temperature range on the thermostat",
                   "the highest temperature possible"]];

    action := @org.thingpedia.iot.climate.set_minmax_temperature(low=$?, high=$?)
    #_[utterances=["change the minimum and maximum temperatures on my thermostat"]];

    action (p_low :Measure(C), p_high :Measure(C)) := @org.thingpedia.iot.climate.set_minmax_temperature(low=p_low, high=p_high)
    #_[utterances=["set the temperature between ${p_low:const} and ${p_high:const} on my thermostat",
                   "set the low temperature to $p_low on my thermostat , and the high to $p_high"]];

    query := @org.thingpedia.iot.climate.target_humidity()
    #_[utterances=["the target humidity set for my hvac",
                   "the target humidity set on my thermostat"]];

    query := @org.thingpedia.iot.climate.current_humidity()
    #_[utterances=["the current humidity read by the thermostat",
                   "the humidity around the thermostat"]];

    action := @org.thingpedia.iot.climate.set_target_humidity(value=$?)
    #_[utterances=["change the humidity on my thermostat",
                   "set humidity of my hvac"]];

    action (p_value :Number) := @org.thingpedia.iot.climate.set_target_humidity(value=p_value)
    #_[utterances=["set humidity on my thermostat to ${p_value:const}",
                   "set my thermostat to ${p_value:const}",
                   "set the humidity to ${p_value:const} on my thermostat"]];

    query := @org.thingpedia.iot.climate.min_humidity()
    #_[utterances=["the minimum humidity set on the thermostat",
                   "the minimum humidity range on the thermostat",
                   "the lowest humidity possible"]];

    query := @org.thingpedia.iot.climate.max_humidity()
    #_[utterances=["the maximum humidity set on the thermostat",
                   "the maximum humidity range on the thermostat",
                   "the highest humidity possible"]];

    query := @org.thingpedia.iot.climate.fan_mode()
    #_[utterances=["the state of my fan",
                   "what the fan is currently doing",
                   "current fan action"]];

    query := @org.thingpedia.iot.climate.fan_modes_aval()
    #_[utterances=["the available presets for the fan ",
                   "the fan has the following available presets"]];

    action (p_mode :Enum(on,off,auto,low,medium,high,middle,focus,diffuse)) := @org.thingpedia.iot.climate.set_fan_mode(mode=p_mode)
    #_[utterances=["set the fan to $p_mode",
                   "turn the fan $p_mode",
                   "set to $p_mode the fan",
                   "switch fan $p_mode"]];

    query := @org.thingpedia.iot.climate.swing_mode()
    #_[utterances=["the state of my swing",
                   "what the swing is currently doing",
                   "current swing action"]];

    query := @org.thingpedia.iot.climate.swing_modes_aval()
    #_[utterances=["the available presets for the swing ",
                   "the swing has the following available presets"]];

    action (p_mode :Enum(off,vertical,horizontal,both)) := @org.thingpedia.iot.climate.set_swing_mode(mode=p_mode)
    #_[utterances=["set the swing to $p_mode",
                   "set to $p_mode the swing",
                   "turn the swing $p_mode",
                   "switch swing $p_mode"
                   ]];

    action := @org.thingpedia.iot.climate.set_swing_mode(mode=enum(both))
    #_[utterances=["turn the swing on both",
                   "switch swing to both ways"]];

    action (p_value :Enum(on,off)) := @org.thingpedia.iot.climate.set_aux_heat(value=p_value)
    #_[utterances=["set the auxiliary heater to ${p_value}",
                   "turn the auxiliary heater ${p_value}",
                   "set to ${p_value} the auxiliary heater",
                   "switch auxiliary heater ${p_value}"]];

    action (p_value :Enum(on,off)) := @org.thingpedia.iot.climate.set_hvac_onoff(value=p_value)
    #_[utterances=["set the HVAC to $p_value",
                   "turn the HVAC $p_value",
                   "set to $p_value the HVAC",
                   "switch HVAC $p_value"]];

    action (p_name : String, p_mode :Enum(heat,cool,heat_cool,off,auto,dry,fan_only)) := @org.thingpedia.iot.climate(name=p_name).set_hvac_mode(mode=p_mode)
    #_[utterances=["set my ${p_name:const} to $p_mode",
                   "turn the ${p_name:const} heating $p_mode",
                   "turn the ${p_name:const} ac $p_mode",
                   "turn $p_mode the ${p_name:const} ac",
                   "turn $p_mode the ${p_name:const} heater",
                   "turn $p_mode the ${p_name:const} aircon",
                   "turn the ${p_name:const} air conditioning $p_mode",
                   "turn the ${p_name:const} cooling system $p_mode",
                   "set to $p_mode the ${p_name:const}",
                   "switch ${p_name:const} mode to $p_mode"]];

    action (p_name : String) := @org.thingpedia.iot.climate(name=p_name).set_hvac_mode(mode=enum(dry))
    #_[utterances=["set ${p_name:const} to drying",
                   "start drying with ${p_name:const}",
                   "turn on the drying on ${p_name:const}",
                   "turn the dry mode to on for ${p_name:const}"]];

    action (p_name : String) := @org.thingpedia.iot.climate(name=p_name).set_hvac_mode(mode=enum(fan_only))
    #_[utterances=["turn only the ${p_name:const} fan on",
                   "turn on the ${p_name:const} fan",
                   "start the fan of the ${p_name:const}",
                   "switch the ${p_name:const} fan on"]];

    action (p_name : String, p_preset :Enum(eco,away,boost,comfort,home,sleep,activity)) := @org.thingpedia.iot.climate(name=p_name).set_hvac_preset(preset=p_preset)
    #_[utterances=["set my ${p_name:const} to $p_preset",
                   "turn the ${p_name:const} preset to $p_preset",
                   "set to $p_preset the ${p_name:const}",
                   "switch ${p_name:const} preset to $p_preset",
                   "change to $p_preset the preset of the ${p_name:const}"]];

    action (p_name : String) := @org.thingpedia.iot.climate(name=p_name).set_target_temperature(value=$?)
    #_[utterances=["change the temperature on my ${p_name:const}",
                   "set temperature of my ${p_name:const}"]];

    action (p_name : String, p_value :Measure(C)) := @org.thingpedia.iot.climate(name=p_name).set_target_temperature(value=p_value)
    #_[utterances=["set temperature on my ${p_name:const} to $p_value",
                   "set my ${p_name:const} to ${p_value:const}",
                   "set the temperature to ${p_value:const} on my ${p_name:const}"]];

    action (p_name : String) := @org.thingpedia.iot.climate(name=p_name).set_minmax_temperature(low=$?, high=$?)
    #_[utterances=["change the minimum and maximum temperatures on my ${p_name:const}"]];

    action (p_name : String, p_low :Measure(C), p_high :Measure(C)) := @org.thingpedia.iot.climate(name=p_name).set_minmax_temperature(low=p_low, high=p_high)
    #_[utterances=["set the temperature between ${p_low:const} and ${p_high:const} on my ${p_name:const} ",
                   "set the low temperature to $p_low on my ${p_name:const}, and the high to $p_high"]];

    action (p_name : String) := @org.thingpedia.iot.climate(name=p_name).set_target_humidity(value=$?)
    #_[utterances=["change the humidity on my ${p_name:const} ",
                   "set humidity of my ${p_name:const} "]];

    action (p_name : String, p_value :Number) := @org.thingpedia.iot.climate(name=p_name).set_target_humidity(value=p_value)
    #_[utterances=["set humidity on my ${p_name:const}  to ${p_value:const}",
                   "set my ${p_name:const}  to ${p_value:const}",
                   "set the humidity to ${p_value:const} on my ${p_name:const} "]];

    action (p_name : String, p_mode :Enum(on,off,auto,low,medium,high,middle,focus,diffuse)) := @org.thingpedia.iot.climate(name=p_name).set_fan_mode(mode=p_mode)
    #_[utterances=["set the ${p_name:const} fan to $p_mode",
                   "turn the ${p_name:const} fan $p_mode",
                   "set to $p_mode the ${p_name:const} fan",
                   "switch ${p_name:const} fan $p_mode"]];

    action (p_name : String, p_mode :Enum(off,vertical,horizontal,both)) := @org.thingpedia.iot.climate(name=p_name).set_swing_mode(mode=p_mode)
    #_[utterances=["set the ${p_name} swing to $p_mode",
                   "turn the ${p_name:const} swing $p_mode",
                   "set to $p_mode the ${p_name:const} swing",
                   "switch ${p_name:const} swing $p_mode"]];

    action (p_name : String, p_value :Enum(on,off)) := @org.thingpedia.iot.climate(name=p_name).set_aux_heat(value=p_value)
    #_[utterances=["set the ${p_name:const} auxiliary heater to $p_value",
                   "turn the ${p_name:const} auxiliary heater $p_value",
                   "set to $p_value the ${p_name:const} auxiliary heater",
                   "switch ${p_name:const} auxiliary heater $p_value"]];

    action (p_name : String, p_value :Enum(on,off)) := @org.thingpedia.iot.climate(name=p_name).set_hvac_onoff(value=p_value)
    #_[utterances=["set the ${p_name:const} to ${p_value}",
                   "turn the ${p_name:const} ${p_value}",
                   "set to ${p_value} the ${p_name:const}",
                   "switch ${p_name:const} ${p_value}"]];

}
