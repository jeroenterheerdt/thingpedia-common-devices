====
# log/116890
U: thanks almond
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/69494
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/111416
U: hi there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/123243
U: thanks
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/120370
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/18761
U: good afternoon
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/110691
U: hey ada
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/20872
U: thank you!
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/2253
U: never mind
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/825
U: goodbye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/8465
U: good night
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/18480
U: good evening
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/58552
U: goodnight
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/9708
U: reset
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5e8ef3f5446ef9a3ceb9a9d5d0cbf9c6
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/b2eb3422447a53d285645a0d43f11862
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/011c3e9fa75b2d1dbaa7329d5872da3d
U: Thank you, I like that music.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/a6bdb647534ed0a5a29f997c49d4d598
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6348bd611b59e53055b947a050457268
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/158327
U: hello, almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# online/359894
U: notify me of mail once every 2 ms
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: timer(interval=2ms) => @com.gmail.inbox();
====
# recording/4d7d4033eff156190f76d63cc4fed839
U: tell a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="9hyAsrzAItc"^^com.icanhazdadjoke:id, text="Where’s the bin? Dad: I haven’t been anywhere!" }
C: ]];
A: Where’s the bin? Dad: I haven’t been anywhere!
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="9hyAsrzAItc"^^com.icanhazdadjoke:id, text="Where’s the bin? Dad: I haven’t been anywhere!" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="HtcNuHJBQCd"^^com.icanhazdadjoke:id, text="How many kids with ADD does it take to change a lightbulb? Let's go ride bikes!" }
C: ]];
A: How many kids with ADD does it take to change a lightbulb? Let's go ride bikes!
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="9hyAsrzAItc"^^com.icanhazdadjoke:id, text="Where’s the bin? Dad: I haven’t been anywhere!" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="HtcNuHJBQCd"^^com.icanhazdadjoke:id, text="How many kids with ADD does it take to change a lightbulb? Let's go ride bikes!" }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=16C, wind_speed=3.6mps, humidity=35, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
A: The current weather in Redwood City, California is sunny. The temperature is 60.8 F and the humidity is 35 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: how old are you
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_age);
====
# recording/eff39ac4ab8dd4a34704bc4fd1e33b37
U: can you tell me a joke?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="Sn39Elb2LBd"^^com.icanhazdadjoke:id, text="What is this movie about? It is about 2 hours long." }
C: ]];
A: What is this movie about? It is about 2 hours long.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="Sn39Elb2LBd"^^com.icanhazdadjoke:id, text="What is this movie about? It is about 2 hours long." }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="vkV0L6wcFlb"^^com.icanhazdadjoke:id, text="Did you hear about the runner who was criticized? He just took it in stride" }
C: ]];
A: Did you hear about the runner who was criticized? He just took it in stride.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: ha ha
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_cool);
====
# recording/f9c6c90344e6681fbb6f0e17fb8a9045
U: show me restaurants around berkeley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter geo == new Location("berkeley");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.8708393, -122.2728639, "Berkeley, California")
C: #[results=[
C:   { id="uvCBQevs26owAL7KW2_VIA"^^com.yelp:restaurant("Cheese Board Pizza"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/S-5Nn8BJufkVNKJ281D6FQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cheese-board-pizza-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["pizza"^^com.yelp:restaurant_cuisine("Pizza")], price=enum cheap, rating=4.5, review_count=5367, geo=new Location(37.8801315387818, -122.269357296486, "1512 Shattuck Ave, Berkeley, CA 94709"), phone="+15105493183"^^tt:phone_number },
C:   { id="Q4o6ySw2V6r0UbK-aCAfng"^^com.yelp:restaurant("Angeline's Louisiana Kitchen"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/7JmU5f54Ga5mGEdmLwKt2A/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/angelines-louisiana-kitchen-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cajun"^^com.yelp:restaurant_cuisine("Cajun/Creole"), "southern"^^com.yelp:restaurant_cuisine("Southern"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4, review_count=4318, geo=new Location(37.868282, -122.267555, "2261 Shattuck Ave, Berkeley, CA 94704"), phone="+15105486900"^^tt:phone_number },
C:   { id="2u4DSD6F8RyFXp-Crhj8OA"^^com.yelp:restaurant("Cinnaholic"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/ztLLRhCIvdIWS8j3WujXPw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cinnaholic-berkeley-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan")], price=enum cheap, rating=4.5, review_count=1686, geo=new Location(37.870305, -122.266062498093, "2132 Oxford St, Berkeley, CA 94704"), phone="+15106478684"^^tt:phone_number },
C:   { id="KoZtPdlNO2jMJ7Zc7I9JVg"^^com.yelp:restaurant("Jupiter"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/Tt3T3_pk5u0i6iDJjt4UIQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/jupiter-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["pizza"^^com.yelp:restaurant_cuisine("Pizza"), "chicken_wings"^^com.yelp:restaurant_cuisine("Chicken Wings")], price=enum moderate, rating=4, review_count=3184, geo=new Location(37.869817, -122.267597, "2181 Shattuck Ave, Berkeley, CA 94704"), phone="+15108438277"^^tt:phone_number },
C:   { id="dmZS7KKxE8GHfIHzsenqUQ"^^com.yelp:restaurant("La Note"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/JALkbjMGELKBg8l3dIHqQg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-note-berkeley-5?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["french"^^com.yelp:restaurant_cuisine("French"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3668, geo=new Location(37.8662142064674, -122.267341609173, "2377 Shattuck Ave, Berkeley, CA 94704"), phone="+15108431525"^^tt:phone_number },
C:   { id="Se9nvLiXHWI5ltMSo8klCw"^^com.yelp:restaurant("The Butchers Son"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/BjmhM0KqCJB_NwyAQxavAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/the-butchers-son-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["salad"^^com.yelp:restaurant_cuisine("Salad"), "tradamerican"^^com.yelp:restaurant_cuisine("American (Traditional)")], price=enum moderate, rating=4, review_count=1345, geo=new Location(37.8715428393541, -122.271646200946, "1954 University Ave, Berkeley, CA 94704"), phone="+15109840818"^^tt:phone_number },
C:   { id="cMyf8e6frO9PIutPvXpjow"^^com.yelp:restaurant("Chez Panisse"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/LDM_1qIyYMuI1Z9jgWSGrg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/chez-panisse-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "french"^^com.yelp:restaurant_cuisine("French")], price=enum luxury, rating=4, review_count=2845, geo=new Location(37.879664, -122.26894, "1517 Shattuck Ave, Berkeley, CA 94709"), phone="+15105485525"^^tt:phone_number },
C:   { id="sKnjZ4bb-0AWxWqJv7cHOw"^^com.yelp:restaurant("Grégoire"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/zVNybiotkBeVGWFjSNFnWw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/gregoire-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["french"^^com.yelp:restaurant_cuisine("French"), "sandwiches"^^com.yelp:restaurant_cuisine("Sandwiches")], price=enum moderate, rating=4, review_count=2277, geo=new Location(37.8785970706384, -122.268645902327, "2109 Cedar St, Berkeley, CA 94709"), phone="+15108831893"^^tt:phone_number },
C:   { id="oqyeLUSC2Z3Aczzh_4-4Yw"^^com.yelp:restaurant("Berkeley Social Club"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/31M_26DVjqn7EWndAwmVeQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/berkeley-social-club-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "korean"^^com.yelp:restaurant_cuisine("Korean")], price=enum moderate, rating=4, review_count=1333, geo=new Location(37.8718158, -122.2696171, "2050 University Ave, Berkeley, CA 94704"), phone="+15109005858"^^tt:phone_number },
C:   { id="uBuIZ8Pdk9HegYSAU0EsKA"^^com.yelp:restaurant("Great China"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/QpXekbyL5oYjoC-XWdgzxQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/great-china-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4, review_count=2186, geo=new Location(37.8676818865786, -122.26615783488, "2190 Bancroft Way, Berkeley, CA 94704"), phone="+15108437996"^^tt:phone_number }
C: ]]
C: #[count=50];
A: I see Cheese Board Pizza. It is a cheap restaurant near 1512 Shattuck Ave, Berkeley, CA 94709.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what is the address again?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [geo] of @com.yelp.restaurant() filter geo == new Location(37.8708393, -122.2728639, "Berkeley, California") && id == "uvCBQevs26owAL7KW2_VIA"^^com.yelp:restaurant("Cheese Board Pizza");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter geo == new Location(37.8708393, -122.2728639, "Berkeley, California")
C: #[results=[
C:   { id="uvCBQevs26owAL7KW2_VIA"^^com.yelp:restaurant("Cheese Board Pizza"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/S-5Nn8BJufkVNKJ281D6FQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cheese-board-pizza-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["pizza"^^com.yelp:restaurant_cuisine("Pizza")], price=enum cheap, rating=4.5, review_count=5367, geo=new Location(37.8801315387818, -122.269357296486, "1512 Shattuck Ave, Berkeley, CA 94709"), phone="+15105493183"^^tt:phone_number },
C:   { id="Q4o6ySw2V6r0UbK-aCAfng"^^com.yelp:restaurant("Angeline's Louisiana Kitchen"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/7JmU5f54Ga5mGEdmLwKt2A/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/angelines-louisiana-kitchen-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["cajun"^^com.yelp:restaurant_cuisine("Cajun/Creole"), "southern"^^com.yelp:restaurant_cuisine("Southern"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4, review_count=4318, geo=new Location(37.868282, -122.267555, "2261 Shattuck Ave, Berkeley, CA 94704"), phone="+15105486900"^^tt:phone_number },
C:   { id="2u4DSD6F8RyFXp-Crhj8OA"^^com.yelp:restaurant("Cinnaholic"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/ztLLRhCIvdIWS8j3WujXPw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/cinnaholic-berkeley-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan")], price=enum cheap, rating=4.5, review_count=1686, geo=new Location(37.870305, -122.266062498093, "2132 Oxford St, Berkeley, CA 94704"), phone="+15106478684"^^tt:phone_number },
C:   { id="KoZtPdlNO2jMJ7Zc7I9JVg"^^com.yelp:restaurant("Jupiter"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/Tt3T3_pk5u0i6iDJjt4UIQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/jupiter-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["pizza"^^com.yelp:restaurant_cuisine("Pizza"), "chicken_wings"^^com.yelp:restaurant_cuisine("Chicken Wings")], price=enum moderate, rating=4, review_count=3184, geo=new Location(37.869817, -122.267597, "2181 Shattuck Ave, Berkeley, CA 94704"), phone="+15108438277"^^tt:phone_number },
C:   { id="dmZS7KKxE8GHfIHzsenqUQ"^^com.yelp:restaurant("La Note"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/JALkbjMGELKBg8l3dIHqQg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/la-note-berkeley-5?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["french"^^com.yelp:restaurant_cuisine("French"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum moderate, rating=4, review_count=3668, geo=new Location(37.8662142064674, -122.267341609173, "2377 Shattuck Ave, Berkeley, CA 94704"), phone="+15108431525"^^tt:phone_number },
C:   { id="Se9nvLiXHWI5ltMSo8klCw"^^com.yelp:restaurant("The Butchers Son"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/BjmhM0KqCJB_NwyAQxavAw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/the-butchers-son-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["salad"^^com.yelp:restaurant_cuisine("Salad"), "tradamerican"^^com.yelp:restaurant_cuisine("American (Traditional)")], price=enum moderate, rating=4, review_count=1345, geo=new Location(37.8715428393541, -122.271646200946, "1954 University Ave, Berkeley, CA 94704"), phone="+15109840818"^^tt:phone_number },
C:   { id="cMyf8e6frO9PIutPvXpjow"^^com.yelp:restaurant("Chez Panisse"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/LDM_1qIyYMuI1Z9jgWSGrg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/chez-panisse-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["newamerican"^^com.yelp:restaurant_cuisine("American (New)"), "french"^^com.yelp:restaurant_cuisine("French")], price=enum luxury, rating=4, review_count=2845, geo=new Location(37.879664, -122.26894, "1517 Shattuck Ave, Berkeley, CA 94709"), phone="+15105485525"^^tt:phone_number },
C:   { id="sKnjZ4bb-0AWxWqJv7cHOw"^^com.yelp:restaurant("Grégoire"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/zVNybiotkBeVGWFjSNFnWw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/gregoire-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["french"^^com.yelp:restaurant_cuisine("French"), "sandwiches"^^com.yelp:restaurant_cuisine("Sandwiches")], price=enum moderate, rating=4, review_count=2277, geo=new Location(37.8785970706384, -122.268645902327, "2109 Cedar St, Berkeley, CA 94709"), phone="+15108831893"^^tt:phone_number },
C:   { id="oqyeLUSC2Z3Aczzh_4-4Yw"^^com.yelp:restaurant("Berkeley Social Club"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/31M_26DVjqn7EWndAwmVeQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/berkeley-social-club-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch"), "korean"^^com.yelp:restaurant_cuisine("Korean")], price=enum moderate, rating=4, review_count=1333, geo=new Location(37.8718158, -122.2696171, "2050 University Ave, Berkeley, CA 94704"), phone="+15109005858"^^tt:phone_number },
C:   { id="uBuIZ8Pdk9HegYSAU0EsKA"^^com.yelp:restaurant("Great China"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/QpXekbyL5oYjoC-XWdgzxQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/great-china-berkeley?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4, review_count=2186, geo=new Location(37.8676818865786, -122.26615783488, "2190 Bancroft Way, Berkeley, CA 94704"), phone="+15108437996"^^tt:phone_number }
C: ]]
C: #[count=50];
C: [geo] of @com.yelp.restaurant() filter geo == new Location(37.8708393, -122.2728639, "Berkeley, California") && id == "uvCBQevs26owAL7KW2_VIA"^^com.yelp:restaurant("Cheese Board Pizza")
C: #[results=[
C:   { id="uvCBQevs26owAL7KW2_VIA"^^com.yelp:restaurant("Cheese Board Pizza"), geo=new Location(37.8801315387818, -122.269357296486, "1512 Shattuck Ave, Berkeley, CA 94709") }
C: ]];
A: Cheese Board Pizza is a restaurant near 1512 Shattuck Ave, Berkeley, CA 94709.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what is the weather like there?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location(37.8801315387818, -122.269357296486, "1512 Shattuck Ave, Berkeley, CA 94709"));
====
# recording/ed3ace50937bcbe1b0e7d09427a1b375
U: tell me the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=11.1C, wind_speed=3.6mps, humidity=50.8, cloudiness=39.1, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
A: It is cloudy today in Cantor Arts Center and the temperature is 52 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: change my location
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=11.1C, wind_speed=3.6mps, humidity=50.8, cloudiness=39.1, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(type=enum current);
A: What location do you want?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(location);
AT: @org.thingpedia.builtin.thingengine.builtin.set_location(type=enum current);
U: Stanford
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location("stanford"));
====
# recording/7bc283be6848a55798d4e5ad70b2d202
U: tell me the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=11C, wind_speed=3.6mps, humidity=50.8, cloudiness=39.1, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
A: It is cloudy today in Stanford, Palo Alto and the temperature is 51.8 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: where am I?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
====
# online/55592327
U: notify me when the door opens and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592330
U: notify me when someone opens the door and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592331
U: notify me when someone opens the door while i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592610
U: alert me when somebody opens the door and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592613
U: update me when my door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592615
U: tell me when my door is opened and i am out of home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592686
U: if i am not at home and my door is open, alert me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592697
U: tell me if i am not at home and someone opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592700
U: alert me if i am not at home and someone opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592702
U: update me if i am not at home and someone opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# log/54730
U: turn the light on when motion is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion.motion()) filter state == enum detecting => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# log/59476
U: if movement in room office, turn on light
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion(name="office").motion()) filter state == enum detecting => @org.thingpedia.iot.light-bulb(name="room office").set_power(power=enum on);
====
# log/76789
U: when i arrive home turn on the lights
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.home => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# recording/6b62ca72ae439e9508a62a66f95e9d2c
U: get a cat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.thecatapi.cat()
C: #[results=[
C:   { id="AdsrndOAi"^^com.thecatapi:cat, picture_url="https://s3.us-west-2.amazonaws.com/cdn2.thecatapi.com/images/AdsrndOAi.jpg"^^tt:picture, link="http://thecatapi.com/?id=AdsrndOAi"^^tt:url }
C: ]];
A: Here is a cat picture.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play hello
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "hello" => @org.thingpedia.media-player.play(playable=id);
====
# recording/15391f435601a0f7743b69a61beaae2b
U: what's the definition of covid
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @info.owlbot.get(word="covid");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
A: Sorry, Request failed with status code 404.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: where am i now
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error="Sorry, I cannot access your location in this version of Almond."];
A: Sorry, Sorry, I cannot access your location in this version of Almond.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: can you speak
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error="Sorry, I cannot access your location in this version of Almond."];
C: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on)
C: #[results=[]]
C: #[error=enum unsupported];
A: Sorry, voice output is not supported on this platform.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: can you listen to me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_voice_input(status=enum on);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error="Sorry, I cannot access your location in this version of Almond."];
C: @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on)
C: #[results=[]]
C: #[error=enum unsupported];
C: @org.thingpedia.builtin.thingengine.builtin.set_voice_input(status=enum on)
C: #[results=[]]
C: #[error=enum unsupported];
A: Sorry, voice input is not supported on this platform.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: can you help me with home assistant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum troubleshooting_home_assistant);
====
# recording/777edda821529592a0899ffdeadf56eb
U: show me a quote
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.forismatic.quotes.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.forismatic.quotes.get()
C: #[results=[
C:   { author="Plutarch ", text="What we achieve inwardly will change outer reality.  ", link="http://forismatic.com/en/67cf5ed025/"^^tt:url }
C: ]];
A: Plutarch wrote: What we achieve inwardly will change outer reality.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.forismatic.quotes.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.forismatic.quotes.get()
C: #[results=[
C:   { author="Plutarch ", text="What we achieve inwardly will change outer reality.  ", link="http://forismatic.com/en/67cf5ed025/"^^tt:url }
C: ]];
C: @com.forismatic.quotes.get()
C: #[results=[
C:   { author="Agatha Christie", text="Good advice is always certain to be ignored, but that's no reason not to give it.", link="http://forismatic.com/en/e4d22ed81c/"^^tt:url }
C: ]];
A: Agatha Christie wrote: Good advice is always certain to be ignored, but that's no reason not to give it.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: turn on the lights
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# recording/a0e39845561253ced0501ba1cda02157
U: get xkcd 2431
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.xkcd.comic() filter id == 2431;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.xkcd.comic() filter id == 2431
C: #[results=[
C:   { id=2431, title="Leap Year 2021", alt_text="I've lived in the present for my whole life and I'm not about to move now.", picture_url="https://imgs.xkcd.com/comics/leap_year_2021.png"^^tt:picture, link="https://xkcd.com/2431"^^tt:url, release_date=new Date("2021-03-01T00:00:00.000Z") }
C: ]];
A: 2,431 is an xkcd comic from 1 Monday titled Leap Year 2021.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: tell me the news
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.xkcd.comic() filter id == 2431
C: #[results=[
C:   { id=2431, title="Leap Year 2021", alt_text="I've lived in the present for my whole life and I'm not about to move now.", picture_url="https://imgs.xkcd.com/comics/leap_year_2021.png"^^tt:picture, link="https://xkcd.com/2431"^^tt:url, release_date=new Date("2021-03-01T00:00:00.000Z") }
C: ]];
C: @com.smartnews.article()
C: #[results=[
C:   { id="4259748921271658525"^^com.smartnews:article, title="CDC Says Vaccinated People Can Visit Each Other Mask Free", date=new Date("2021-03-08T16:11:25.000Z"), source="Bloomberg", url="https://www.bloomberg.com/news/articles/2021-03-08/cdc-loosens-rules-for-vaccinated-people-but-discourages-travel" },
C:   { id="4259743488112853555"^^com.smartnews:article, title="Republican Sen. Roy Blunt says he won’t run for reelection in 2022", date=new Date("2021-03-08T15:50:42.000Z"), source="Bloomberg", url="https://www.bloomberg.com/news/articles/2021-03-08/gop-senator-blunt-says-he-won-t-seek-re-election-in-2022" },
C:   { id="4259179482146933923"^^com.smartnews:article, title="How To Get Someone To Stop Texting You Immediately With One Reply", date=new Date("2021-03-07T00:30:03.000Z"), source="YourTango", author="Christine Schoenwald", url="https://www.yourtango.com/2015276841/how-to-get-someone-to-stop-texting-you-with-one-reply" },
C:   { id="4259661098128510254"^^com.smartnews:article, title="FBI warns that extremists 'seek affiliation' with police to further their goals", date=new Date("2021-03-08T10:05:03.000Z"), source="ABC News", url="https://abcnews.go.com/US/white-supremacists-seek-affiliation-law-enforcement-goals-internal/story?id=76309051" },
C:   { id="4259724860520933142"^^com.smartnews:article, title="Dr. Fauci says putting one of these in your home can help stop the coronavirus", date=new Date("2021-03-08T14:00:09.000Z"), source="BGR", author="Yoni Heisler", url="https://bgr.com/2021/03/08/covid-update-fauci-hepa-filter-coronavirus-safety/" },
C:   { id="4259734433977865973"^^com.smartnews:article, title="Supreme Court rejects final Trump bid to nullify 2020 election results", date=new Date("2021-03-08T14:59:32.000Z"), source="The Hill", author="John Kruzel", url="https://thehill.com/regulation/court-battles/542082-supreme-court-rejects-final-trump-bid-to-nullify-2020-election" },
C:   { id="4259517849967531264"^^com.smartnews:article, title="Jeff Bezos’ ex-wife marries Seattle science teacher as Amazon boss says: ‘He is a great guy’", date=new Date("2021-03-08T00:40:55.000Z"), source="The Independent", author="Graeme Massie", url="https://www.independent.co.uk/news/world/americas/jeff-bezos-ex-wife-mackenzie-scott-b1813750.html" },
C:   { id="4258719275369368285"^^com.smartnews:article, title="Katy Perry and Orlando Bloom vacation in Hawaii with baby Daisy Dove", date=new Date("2021-03-05T19:16:05.000Z"), source="Page Six", author="Eileen Reslen", url="https://pagesix.com/2021/03/05/katy-perry-and-orlando-bloom-vacation-with-daisy-dove/" },
C:   { id="4259761133570760718"^^com.smartnews:article, title="Exclusive: EU preparing sanctions on Myanmar military businesses, documents show", date=new Date("2021-03-08T13:11:47.000Z"), source="Reuters", author="Gabriela Baczynska", url="https://www.reuters.com/article/us-myanmar-politics-eu-idUSKBN2B01D1" },
C:   { id="4259740943361514540"^^com.smartnews:article, title="Yellen says Biden COVID bill to fuel 'very strong' U.S. recovery", date=new Date("2021-03-08T14:57:29.000Z"), source="Reuters", author="David Lawder", url="https://www.reuters.com/article/us-usa-economy-yellen-idUSKBN2B01MJ" }
C: ]]
C: #[count=32];
A: The latest news is CDC Says Vaccinated People Can Visit Each Other Mask Free. It is a new articles from Bloomberg published today at 8:11:25 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what's the definition of coronavirus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @info.owlbot.get(word="coronavirus");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.xkcd.comic() filter id == 2431
C: #[results=[
C:   { id=2431, title="Leap Year 2021", alt_text="I've lived in the present for my whole life and I'm not about to move now.", picture_url="https://imgs.xkcd.com/comics/leap_year_2021.png"^^tt:picture, link="https://xkcd.com/2431"^^tt:url, release_date=new Date("2021-03-01T00:00:00.000Z") }
C: ]];
C: @com.smartnews.article()
C: #[results=[
C:   { id="4259748921271658525"^^com.smartnews:article, title="CDC Says Vaccinated People Can Visit Each Other Mask Free", date=new Date("2021-03-08T16:11:25.000Z"), source="Bloomberg", url="https://www.bloomberg.com/news/articles/2021-03-08/cdc-loosens-rules-for-vaccinated-people-but-discourages-travel" },
C:   { id="4259743488112853555"^^com.smartnews:article, title="Republican Sen. Roy Blunt says he won’t run for reelection in 2022", date=new Date("2021-03-08T15:50:42.000Z"), source="Bloomberg", url="https://www.bloomberg.com/news/articles/2021-03-08/gop-senator-blunt-says-he-won-t-seek-re-election-in-2022" },
C:   { id="4259179482146933923"^^com.smartnews:article, title="How To Get Someone To Stop Texting You Immediately With One Reply", date=new Date("2021-03-07T00:30:03.000Z"), source="YourTango", author="Christine Schoenwald", url="https://www.yourtango.com/2015276841/how-to-get-someone-to-stop-texting-you-with-one-reply" },
C:   { id="4259661098128510254"^^com.smartnews:article, title="FBI warns that extremists 'seek affiliation' with police to further their goals", date=new Date("2021-03-08T10:05:03.000Z"), source="ABC News", url="https://abcnews.go.com/US/white-supremacists-seek-affiliation-law-enforcement-goals-internal/story?id=76309051" },
C:   { id="4259724860520933142"^^com.smartnews:article, title="Dr. Fauci says putting one of these in your home can help stop the coronavirus", date=new Date("2021-03-08T14:00:09.000Z"), source="BGR", author="Yoni Heisler", url="https://bgr.com/2021/03/08/covid-update-fauci-hepa-filter-coronavirus-safety/" },
C:   { id="4259734433977865973"^^com.smartnews:article, title="Supreme Court rejects final Trump bid to nullify 2020 election results", date=new Date("2021-03-08T14:59:32.000Z"), source="The Hill", author="John Kruzel", url="https://thehill.com/regulation/court-battles/542082-supreme-court-rejects-final-trump-bid-to-nullify-2020-election" },
C:   { id="4259517849967531264"^^com.smartnews:article, title="Jeff Bezos’ ex-wife marries Seattle science teacher as Amazon boss says: ‘He is a great guy’", date=new Date("2021-03-08T00:40:55.000Z"), source="The Independent", author="Graeme Massie", url="https://www.independent.co.uk/news/world/americas/jeff-bezos-ex-wife-mackenzie-scott-b1813750.html" },
C:   { id="4258719275369368285"^^com.smartnews:article, title="Katy Perry and Orlando Bloom vacation in Hawaii with baby Daisy Dove", date=new Date("2021-03-05T19:16:05.000Z"), source="Page Six", author="Eileen Reslen", url="https://pagesix.com/2021/03/05/katy-perry-and-orlando-bloom-vacation-with-daisy-dove/" },
C:   { id="4259761133570760718"^^com.smartnews:article, title="Exclusive: EU preparing sanctions on Myanmar military businesses, documents show", date=new Date("2021-03-08T13:11:47.000Z"), source="Reuters", author="Gabriela Baczynska", url="https://www.reuters.com/article/us-myanmar-politics-eu-idUSKBN2B01D1" },
C:   { id="4259740943361514540"^^com.smartnews:article, title="Yellen says Biden COVID bill to fuel 'very strong' U.S. recovery", date=new Date("2021-03-08T14:57:29.000Z"), source="Reuters", author="David Lawder", url="https://www.reuters.com/article/us-usa-economy-yellen-idUSKBN2B01MJ" }
C: ]]
C: #[count=32];
C: @info.owlbot.get(word="coronavirus")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
A: Sorry, Request failed with status code 404.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: what will be the weather tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
====
# online/131451
U: get my security camera then play music on my speaker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.security-camera.current_event() => notify;
UT: now => @org.thingpedia.iot.speaker.play_music();
====
# online/130233
U: get xkcd and post on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.xkcd.get_comic() => notify;
UT: now => @com.twitter.post(status=$?);
====
# online/135922
U: if there is a file in "str:QUOTED_STRING::0:" in my dropbox which is not a folder and was last modified on 1/2/2018 and is smaller than 13 kbs then post a picture on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.dropbox.list_folder(folder_name="str:QUOTED_STRING::0:")), ((file_size <= 13KB && is_folder == false) && modified_time == new Date("2018-01-02T08:00:00.000Z")) => notify;
UT: now => @com.twitter.post_picture(caption=$?, picture_url=$?);
====
# online/120499
U: if i receive a tweet with hashtag bdaycelebrationscontinu then send a message on slack
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.twitter.home_timeline() filter contains(hashtags, "bdaycelebrationscontinu"^^tt:hashtag)) => @com.slack.send();
====
# online/120586
U: send me wall street journal technology on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.gmail.send_email(message=$result);
====
# online/121042
U: tweet wall street journal headlines
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum opinions)) => @com.twitter.post(status=$result);
====
# online/121060
U: post my instagram pictures on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121071
U: post my new instagram pictures on tumblr
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.tumblr.blog.post_picture(picture_url=picture_url);
====
# online/121082
U: post on tumblr "str:QUOTED_STRING::0:" if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.tumblr.blog.post_text(title="str:QUOTED_STRING::0:");
====
# online/121084
U: post on tumblr if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.tumblr.blog.post_text();
====
# online/121103
U: if someone tweets with hashtag foreverjuntas then post it on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.twitter.home_timeline() filter contains(hashtags, "foreverjuntas"^^tt:hashtag)) => @com.facebook.post(status=$result);
====
# online/121550
U: post my ig pictures on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121552
U: ig pictures to facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/123118
U: translate new wall street journal technology posts
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.yandex.translate.translate(text=$result);
====
# online/127890
U: get the washington post and translate it to xhosa
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("xhosa"), text=$result);
====
# online/131798
U: if someone commits to github and the message contains "str:QUOTED_STRING::0:" then play "str:QUOTED_STRING::1:" from youtube
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.github.get_commit() filter message =~ "str:QUOTED_STRING::0:") => @com.youtube.search_videos(query="str:QUOTED_STRING::1:") => @org.thingpedia.iot.tv.play_url(url=video_url);
====
# online/141671
U: get the washington post and translate it to str:ENTITY_tt:iso_lang_code::0:
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language="str:ENTITY_tt:iso_lang_code::0:"^^tt:iso_lang_code, text=$result);
====
# online/359917
U: if i receive a gmail and its title has "str:QUOTED_STRING::0:" in it, send the content to twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(email_id of @com.gmail.inbox() filter subject =~ "str:QUOTED_STRING::0:") => @com.twitter.post(status=$result);
====
# online/359919
U: if i send a new picture to instagram, send this new picture to facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/1448703
U: get my calendar events when i move to palo alto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == new Location("palo alto") => @org.thingpedia.icalendar.list_events();
====
# online/1448704
U: get my calendar events when i move to
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == new Location(2, 2) => @org.thingpedia.icalendar.list_events();
====
# online/1520128
U: tweet my instagram pictures
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/1684068
U: share your instagram pics as native twitter photos
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(caption=caption, picture_url=picture_url);
====
# online/1684094
U: send new york times breaking news to str:EMAIL_ADDRESS::0:
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.nytimes.get_front_page()) => @com.gmail.send_email(message=$result, subject=title, to="str:EMAIL_ADDRESS::0:"^^tt:email_address);
====
# online/53256259
U: when i upload a new instagram picture with hashtag 45likes, post it to twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter contains(hashtags, "45likes"^^tt:hashtag)) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/55592357
U: open the window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592384
U: close my shutter when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592495
U: close my damper when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592641
U: open my windows when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592649
U: open my living room window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="living room").set_openclose(state=enum open);
====
# online/57061574
U: turn off the vacuum when i enter the room
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.occupancy.occupancy()) filter state == enum detecting => @org.thingpedia.iot.vacuum.set_power(power=enum off);
====
# online/57061594
U: send an alert when i leave home and the fan is on
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.fan.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum on;
====
# online/62110233
U: auto translate all new washington post articles to italian
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("italian"), text=title);
====
# log/54331
U: close the shades when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13defaultTemperature => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# log/108641
U: message me on slack when a new article appears on the new york times front page
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.nytimes.get_front_page()) => @com.slack.send();
====
# log/158336
U: when the temperature changes turn on the air con
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) => @org.thingpedia.iot.climate.set_hvac_mode(mode=enum cool);
====
# recording/f106519ffba8bc870e58396d5c99e032
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="6hqHJmyPmyd"^^com.icanhazdadjoke:id, text="What kind of music do mummy's like? Rap" }
C: ]];
A: What kind of music do mummy's like? Rap.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.twitter.post(status="What kind of music do mummy's like? Rap");
====
# recording/cb7afd794d37c88bc83f658acb47808e
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="4wHB51ws4Ed"^^com.icanhazdadjoke:id, text="Last night me and my girlfriend watched three DVDs back to back. Luckily I was the one facing the TV." }
C: ]];
C: [artists] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "hey jude"
C: #[results=[
C:   { id="spotify:track:0aym2LBJBk9DAYuHHutrIl"^^org.thingpedia.media-source:playable("Hey Jude - Remastered 2015"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")] },
C:   { id="spotify:track:3m7V717IKZqZLW5qUIOxdD"^^org.thingpedia.media-source:playable("Hey Jude - Remastered 2009"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")] },
C:   { id="spotify:track:1eT2CjXwFXNx6oY5ydvzKU"^^org.thingpedia.media-source:playable("Hey Jude"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")] },
C:   { id="spotify:album:7BVMsDI63cIp4HzLmUYAKv"^^org.thingpedia.media-source:playable("Hey Jude: Classic Soft Rock Instrumentals on Piano"), artists=["spotify:artist:0cylxW7HGdK9xMdubw2oYW"^^org.thingpedia.media-source:artist("The O'Neill Brothers Group")] },
C:   { id="spotify:album:3X18KtOFTJO0zOWVXddfAh"^^org.thingpedia.media-source:playable("Hey Jude (feat. Kina Grannis)"), artists=["spotify:artist:470WlqN9HSRDGNaMufeHHF"^^org.thingpedia.media-source:artist("Imaginary Future")] }
C: ]];
C: sort(distance(geo, new Location(37.4863239, -122.232523, "Redwood City, California")) asc of @com.yelp.restaurant() filter contains(cuisines, "italian"^^com.yelp:restaurant_cuisine("Italian")))[1]
C: #[results=[
C:   { id="v1oiV0N7j9n-Fm_HakYlrA"^^com.yelp:restaurant("Vino Santo Bistro"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/AQ3-6GAEq_qzKJ9u7LKycQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/vino-santo-bistro-redwood-city-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian")], price=enum moderate, rating=4, review_count=393, geo=new Location(37.4868316650391, -122.227058410645, "2030 Broadway St, Redwood City, CA 94063"), phone="+16507800793"^^tt:phone_number, distance=56.460896274938605m }
C: ]];
C: [rating] of sort(distance(geo, new Location(37.4863239, -122.232523, "Redwood City, California")) asc of @com.yelp.restaurant() filter contains(cuisines, "italian"^^com.yelp:restaurant_cuisine("Italian")))[1]
C: #[results=[
C:   { id="v1oiV0N7j9n-Fm_HakYlrA"^^com.yelp:restaurant("Vino Santo Bistro"), rating=4 }
C: ]];
C: @com.bing.web_search(query="coronavirus")
C: #[results=[
C:   { query="coronavirus", title="Coronavirus Disease 2019 (COVID-19) | CDC", description="Coronavirus (COVID-19) Home Page. Links with this icon indicate that you are leaving the CDC website.. The Centers for Disease Control and Prevention (CDC) cannot attest to the accuracy of a non-federal website.", link="https://www.cdc.gov/coronavirus/2019-ncov/index.html"^^tt:url },
C:   { query="coronavirus", title="What Is Coronavirus? | Johns Hopkins Medicine", description="Coronaviruses are a type of virus. There are many different kinds, and some cause disease. A coronavirus identified in 2019, SARS-CoV-2, has caused a pandemic of respiratory illness, called COVID-19. What You Need to Know", link="https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus"^^tt:url },
C:   { query="coronavirus", title="Symptoms of Coronavirus | CDC", description="COVID-19 is caused by infection with a new coronavirus (called SARS-CoV-2), and flu is caused by infection with influenza viruses. COVID-19 seems to spread more easily than flu and causes more serious illnesses in some people. It can also take longer before people show symptoms and people can be contagious for longer. More information about ...", link="https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/symptoms.html"^^tt:url },
C:   { query="coronavirus", title="COVID Live Update: 146,522,088 Cases and 3,103,366 Deaths ...", description="Live statistics and coronavirus news tracking the number of confirmed cases, recovered patients, tests, and death toll due to the COVID-19 coronavirus from Wuhan, China. Coronavirus counter with new cases, deaths, and number of tests per 1 Million population. Historical data and info. Daily charts, graphs, news and updates", link="https://www.worldometers.info/coronavirus/"^^tt:url },
C:   { query="coronavirus", title="Coronavirus (COVID-19) live map tracker from Microsoft Bing", description="Track COVID-19 local and global coronavirus cases with active, recoveries and death rate on the map, with daily news and video.", link="https://bing.com/covid"^^tt:url }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="xHQucUvszd"^^com.icanhazdadjoke:id, text="To the guy who invented zero... thanks for nothing." }
C: ]];
A: To the guy who invented zero... Thanks for nothing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: throw a dice
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="4wHB51ws4Ed"^^com.icanhazdadjoke:id, text="Last night me and my girlfriend watched three DVDs back to back. Luckily I was the one facing the TV." }
C: ]];
C: [artists] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "hey jude"
C: #[results=[
C:   { id="spotify:track:0aym2LBJBk9DAYuHHutrIl"^^org.thingpedia.media-source:playable("Hey Jude - Remastered 2015"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")] },
C:   { id="spotify:track:3m7V717IKZqZLW5qUIOxdD"^^org.thingpedia.media-source:playable("Hey Jude - Remastered 2009"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")] },
C:   { id="spotify:track:1eT2CjXwFXNx6oY5ydvzKU"^^org.thingpedia.media-source:playable("Hey Jude"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")] },
C:   { id="spotify:album:7BVMsDI63cIp4HzLmUYAKv"^^org.thingpedia.media-source:playable("Hey Jude: Classic Soft Rock Instrumentals on Piano"), artists=["spotify:artist:0cylxW7HGdK9xMdubw2oYW"^^org.thingpedia.media-source:artist("The O'Neill Brothers Group")] },
C:   { id="spotify:album:3X18KtOFTJO0zOWVXddfAh"^^org.thingpedia.media-source:playable("Hey Jude (feat. Kina Grannis)"), artists=["spotify:artist:470WlqN9HSRDGNaMufeHHF"^^org.thingpedia.media-source:artist("Imaginary Future")] }
C: ]];
C: sort(distance(geo, new Location(37.4863239, -122.232523, "Redwood City, California")) asc of @com.yelp.restaurant() filter contains(cuisines, "italian"^^com.yelp:restaurant_cuisine("Italian")))[1]
C: #[results=[
C:   { id="v1oiV0N7j9n-Fm_HakYlrA"^^com.yelp:restaurant("Vino Santo Bistro"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/AQ3-6GAEq_qzKJ9u7LKycQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/vino-santo-bistro-redwood-city-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["italian"^^com.yelp:restaurant_cuisine("Italian")], price=enum moderate, rating=4, review_count=393, geo=new Location(37.4868316650391, -122.227058410645, "2030 Broadway St, Redwood City, CA 94063"), phone="+16507800793"^^tt:phone_number, distance=56.460896274938605m }
C: ]];
C: [rating] of sort(distance(geo, new Location(37.4863239, -122.232523, "Redwood City, California")) asc of @com.yelp.restaurant() filter contains(cuisines, "italian"^^com.yelp:restaurant_cuisine("Italian")))[1]
C: #[results=[
C:   { id="v1oiV0N7j9n-Fm_HakYlrA"^^com.yelp:restaurant("Vino Santo Bistro"), rating=4 }
C: ]];
C: @com.bing.web_search(query="coronavirus")
C: #[results=[
C:   { query="coronavirus", title="Coronavirus Disease 2019 (COVID-19) | CDC", description="Coronavirus (COVID-19) Home Page. Links with this icon indicate that you are leaving the CDC website.. The Centers for Disease Control and Prevention (CDC) cannot attest to the accuracy of a non-federal website.", link="https://www.cdc.gov/coronavirus/2019-ncov/index.html"^^tt:url },
C:   { query="coronavirus", title="What Is Coronavirus? | Johns Hopkins Medicine", description="Coronaviruses are a type of virus. There are many different kinds, and some cause disease. A coronavirus identified in 2019, SARS-CoV-2, has caused a pandemic of respiratory illness, called COVID-19. What You Need to Know", link="https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus"^^tt:url },
C:   { query="coronavirus", title="Symptoms of Coronavirus | CDC", description="COVID-19 is caused by infection with a new coronavirus (called SARS-CoV-2), and flu is caused by infection with influenza viruses. COVID-19 seems to spread more easily than flu and causes more serious illnesses in some people. It can also take longer before people show symptoms and people can be contagious for longer. More information about ...", link="https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/symptoms.html"^^tt:url },
C:   { query="coronavirus", title="COVID Live Update: 146,522,088 Cases and 3,103,366 Deaths ...", description="Live statistics and coronavirus news tracking the number of confirmed cases, recovered patients, tests, and death toll due to the COVID-19 coronavirus from Wuhan, China. Coronavirus counter with new cases, deaths, and number of tests per 1 Million population. Historical data and info. Daily charts, graphs, news and updates", link="https://www.worldometers.info/coronavirus/"^^tt:url },
C:   { query="coronavirus", title="Coronavirus (COVID-19) live map tracker from Microsoft Bing", description="Track COVID-19 local and global coronavirus cases with active, recoveries and death rate on the map, with daily news and video.", link="https://bing.com/covid"^^tt:url }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="xHQucUvszd"^^com.icanhazdadjoke:id, text="To the guy who invented zero... thanks for nothing." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=3 }
C: ]];
A: 3.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: can you play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/47aa1f36f43d8342f52db10f9ce50b82
U: cool, thanks
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6dadb186b7e4adb5fb9ea3546d7e835c
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hi, how can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/d1e3878b6fd3c673a87d3da6ccb09566
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/773cf5d6ab5788e9632e73b809482650
U: hoy
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/9f6a2e548f079d04640971f744eb2570
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/ff640ca5fb879fcc0630d0ea25544c0a
U: play wolfgang amadeus mozart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("wolfgang amadeus mozart")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music by Wolfgang Amadeus Mozart on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: previous song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous();
====
# recording/5bc15a4a2e8823d083946d9c4de231c6
U: play sigur ros
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("sigur ros")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:6UUrUCIZtQeOf8tC0WuzRy"^^org.thingpedia.media-source:artist("Sigur Rós")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0yQPpUq5BJyqah5m2Q5Stt"^^org.thingpedia.media-source:playable("Hoppípolla"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07eGxuz8bL6QMsRqEe1Adu"^^org.thingpedia.media-source:playable("Svefn-g-englar"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:55gISxV37mffOW2DbSskT3"^^org.thingpedia.media-source:playable("Starálfur"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1QUiA9aecDOOnf32A9ZrtW"^^org.thingpedia.media-source:playable("Untitled #3 - Samskeyti"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3OAf2iksV6MRLzqtUglTDq"^^org.thingpedia.media-source:playable("Sæglópur"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2zkZGzzWOzGwi1rtWv7mhZ"^^org.thingpedia.media-source:playable("Sigur 3 (Untitled)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0YTfMKGPhWhjS9wgzWvfaf"^^org.thingpedia.media-source:playable("Glósóli"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Rr3lN1BgJtrWNAp97wizI"^^org.thingpedia.media-source:playable("Varðeldur"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0S9w3jx4cO9rSBcGwB16in"^^org.thingpedia.media-source:playable("Olsen olsen"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3XNjxPoUphJfUD5BShkYat"^^org.thingpedia.media-source:playable("Gobbledigook"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=49];
A: I played music by Sigur Rós on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add to playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify.add_song_to_playlist(song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:6UUrUCIZtQeOf8tC0WuzRy"^^org.thingpedia.media-source:artist("Sigur Rós")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0yQPpUq5BJyqah5m2Q5Stt"^^org.thingpedia.media-source:playable("Hoppípolla"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07eGxuz8bL6QMsRqEe1Adu"^^org.thingpedia.media-source:playable("Svefn-g-englar"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:55gISxV37mffOW2DbSskT3"^^org.thingpedia.media-source:playable("Starálfur"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1QUiA9aecDOOnf32A9ZrtW"^^org.thingpedia.media-source:playable("Untitled #3 - Samskeyti"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3OAf2iksV6MRLzqtUglTDq"^^org.thingpedia.media-source:playable("Sæglópur"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2zkZGzzWOzGwi1rtWv7mhZ"^^org.thingpedia.media-source:playable("Sigur 3 (Untitled)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0YTfMKGPhWhjS9wgzWvfaf"^^org.thingpedia.media-source:playable("Glósóli"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Rr3lN1BgJtrWNAp97wizI"^^org.thingpedia.media-source:playable("Varðeldur"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0S9w3jx4cO9rSBcGwB16in"^^org.thingpedia.media-source:playable("Olsen olsen"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3XNjxPoUphJfUD5BShkYat"^^org.thingpedia.media-source:playable("Gobbledigook"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=49];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
A: What playlist do you want to add to?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(playlist);
AT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
U: FLow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="flow", song=id);
====
# recording/17424146a60653a9e24c06aa063b822c
U: set my location to new york
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location("new york"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(40.7306458, -73.9866136, "New York City, New York"), type=enum current)
C: #[results=[]];
A: I set your current location for you to New York City, New York.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: tell me the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(40.7306458, -73.9866136, "New York City, New York"), type=enum current)
C: #[results=[]];
C: @org.thingpedia.weather.current(location=new Location(40.7306458, -73.9866136, "New York City, New York"))
C: #[results=[
C:   { temperature=25C, wind_speed=3.6mps, humidity=87, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(40.7306458, -73.9866136, "New York City, New York") }
C: ]];
A: It is sunny today in New York City, New York and the temperature is 77 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the forecast for tomorrow?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(location=new Location(40.7306458, -73.9866136, "New York City, New York"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(40.7306458, -73.9866136, "New York City, New York"), type=enum current)
C: #[results=[]];
C: @org.thingpedia.weather.current(location=new Location(40.7306458, -73.9866136, "New York City, New York"))
C: #[results=[
C:   { temperature=25C, wind_speed=3.6mps, humidity=87, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(40.7306458, -73.9866136, "New York City, New York") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(40.7306458, -73.9866136, "New York City, New York"))
C: #[results=[
C:   { temperature=30.3C, wind_speed=3.2mps, humidity=69.9, cloudiness=29.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-07-16T21:00:00.000Z"), location=new Location(40.7306458, -73.9866136, "New York City, New York") }
C: ]];
A: It will be cloudy tomorrow at 2:00 PM in New York City, New York and the temperature will be 86.5 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what will the weather be next week?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(40.7306458, -73.9866136, "New York City, New York"));
====
# recording/9681704ae6cc8c1bed2b974db10a1617
U: play jump
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "jump" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "jump")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7N3PAbqfTjSEU1edb2tY8j"^^org.thingpedia.media-source:playable("Jump - 2015 Remaster"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "jump")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7N3PAbqfTjSEU1edb2tY8j"^^org.thingpedia.media-source:playable("Jump - 2015 Remaster"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Jump - 2015 Remaster on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play tony's playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "tony's playlist" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/66af0a9f06e492629278df5e75483c65
U: lol
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_cool);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.covid-vaccine.appointment(zip_code="94062")
C: #[results=[
C:   { id="vaccinespotter:7384051:1622655391072"^^org.thingpedia.covid-vaccine:vaccine_appointment("Rite Aid"), geo=new Location(37.4565, -122.229, "Rite Aid, 340 Woodside Plaza, Redwood City, CA, 94061"), link="https://www.riteaid.com/pharmacy/covid-qualifier"^^tt:url, availability_rate=1, zip_code="94062" }
C: ]];
C: @org.thingpedia.covid-vaccine.mark_valid(appointment="vaccinespotter:7384051:1622655391072"^^org.thingpedia.covid-vaccine:vaccine_appointment("Rite Aid"), validity=false)
C: #[results=[]];
C: @org.thingpedia.covid-vaccine.appointment(zip_code="94062")
C: #[results=[
C:   { id="mukesh:765866102:1624194464066"^^org.thingpedia.covid-vaccine:vaccine_appointment("PharmaCA, 871 Santa Cruz Ave, Menlo Park"), geo=new Location(37.4498999, -122.1856139, "PharmaCA, 871 Santa Cruz Ave, Menlo Park, 871 Santa Cruz Ave, Menlo Park, CA, 94025"), link="https://www.pharmacarx.com/pharmacy-locator/"^^tt:url, availability_rate=0, zip_code="94062" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="mbpbapbhiyd"^^com.icanhazdadjoke:id, text="Did you hear about the bread factory burning down? They say the business is toast." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_cool)
C: #[results=[
C:   { reply="Cool!", question=enum positive_emotion_cool }
C: ]];
A: Cool!
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what else can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.covid-vaccine.appointment(zip_code="94062")
C: #[results=[
C:   { id="vaccinespotter:7384051:1622655391072"^^org.thingpedia.covid-vaccine:vaccine_appointment("Rite Aid"), geo=new Location(37.4565, -122.229, "Rite Aid, 340 Woodside Plaza, Redwood City, CA, 94061"), link="https://www.riteaid.com/pharmacy/covid-qualifier"^^tt:url, availability_rate=1, zip_code="94062" }
C: ]];
C: @org.thingpedia.covid-vaccine.mark_valid(appointment="vaccinespotter:7384051:1622655391072"^^org.thingpedia.covid-vaccine:vaccine_appointment("Rite Aid"), validity=false)
C: #[results=[]];
C: @org.thingpedia.covid-vaccine.appointment(zip_code="94062")
C: #[results=[
C:   { id="mukesh:765866102:1624194464066"^^org.thingpedia.covid-vaccine:vaccine_appointment("PharmaCA, 871 Santa Cruz Ave, Menlo Park"), geo=new Location(37.4498999, -122.1856139, "PharmaCA, 871 Santa Cruz Ave, Menlo Park, 871 Santa Cruz Ave, Menlo Park, CA, 94025"), link="https://www.pharmacarx.com/pharmacy-locator/"^^tt:url, availability_rate=0, zip_code="94062" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="mbpbapbhiyd"^^com.icanhazdadjoke:id, text="Did you hear about the bread factory burning down? They say the business is toast." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_cool)
C: #[results=[
C:   { reply="Cool!", question=enum positive_emotion_cool }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/d992333d201d1699664f5bedb2766811
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play the playlist classics
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "classics" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "classics")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: resume playback
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.resume();
====
# recording/b6151a92051749f93de5c01ffb5fd055
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/e6299acfdcf532ffb56e69283b3b25c6
U: How is it going?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great. Thanks for asking. How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Who are you?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
A: I'm Genie, an open-source virtual assistant created at Stanford.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: where is almond?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
A: My creators are mostly at Stanford. I'm an open-source assistant in the cloud.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what is the weather in ISS?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("iss"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
A: It is cloudy today in Nummi, Turku and the temperature is 70.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is ISS?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="iss");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
C: @com.bing.web_search(query="iss")
C: #[results=[
C:   { query="iss", title="International Space Station | NASA", description="Get the latest news, images, videos and more from humanity's home in orbit -- the International Space Station.", link="https://www.nasa.gov/mission_pages/station/main/index.html"^^tt:url },
C:   { query="iss", title="International Space Station - Wikipedia", description="The International Space Station (ISS) is a modular space station (habitable artificial satellite) in low Earth orbit.It is a multinational collaborative project involving five participating space agencies: NASA (United States), Roscosmos (Russia), JAXA (Japan), ESA (Europe), and CSA (Canada). The ownership and use of the space station is established by intergovernmental treaties and agreements.", link="https://en.wikipedia.org/wiki/International_Space_Station"^^tt:url },
C:   { query="iss", title="Spot The Station | NASA", description="Watch the International Space Station pass overhead from several thousand worldwide locations. It is the third brightest object in the sky and easy to spot if you know when to look up. Visible to the naked eye, it looks like a fast-moving plane only much higher and traveling thousands of miles an hour faster!", link="https://spotthestation.nasa.gov/"^^tt:url },
C:   { query="iss", title="Live Space Station Tracking Map | Spot The Station | NASA", description="Live Space Station Tracking Map. The tracker shows where the Space Station is right now and its path 90 minutes ago (-1.5 hr) and 90 minutes ahead (+1.5 hr). The dark overlay indicates where it is nighttime in the world. ISS Tracker. ERROR: Cannot load images.", link="https://spotthestation.nasa.gov/tracking_map.cfm"^^tt:url },
C:   { query="iss", title="Home | ISS", description="ISS NEWS ISS Announces Acquisition of Genesys Research Genesys is a leading provider of product intelligence to the asset management and insurance communities, delivering to leading asset managers and insurance providers a combination of data and research solutions focused on the subadvisory and platform markets.", link="https://www.issgovernance.com/"^^tt:url }
C: ]];
A: I found International Space Station | NASA.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: who is elon?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="elon");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
C: @com.bing.web_search(query="iss")
C: #[results=[
C:   { query="iss", title="International Space Station | NASA", description="Get the latest news, images, videos and more from humanity's home in orbit -- the International Space Station.", link="https://www.nasa.gov/mission_pages/station/main/index.html"^^tt:url },
C:   { query="iss", title="International Space Station - Wikipedia", description="The International Space Station (ISS) is a modular space station (habitable artificial satellite) in low Earth orbit.It is a multinational collaborative project involving five participating space agencies: NASA (United States), Roscosmos (Russia), JAXA (Japan), ESA (Europe), and CSA (Canada). The ownership and use of the space station is established by intergovernmental treaties and agreements.", link="https://en.wikipedia.org/wiki/International_Space_Station"^^tt:url },
C:   { query="iss", title="Spot The Station | NASA", description="Watch the International Space Station pass overhead from several thousand worldwide locations. It is the third brightest object in the sky and easy to spot if you know when to look up. Visible to the naked eye, it looks like a fast-moving plane only much higher and traveling thousands of miles an hour faster!", link="https://spotthestation.nasa.gov/"^^tt:url },
C:   { query="iss", title="Live Space Station Tracking Map | Spot The Station | NASA", description="Live Space Station Tracking Map. The tracker shows where the Space Station is right now and its path 90 minutes ago (-1.5 hr) and 90 minutes ahead (+1.5 hr). The dark overlay indicates where it is nighttime in the world. ISS Tracker. ERROR: Cannot load images.", link="https://spotthestation.nasa.gov/tracking_map.cfm"^^tt:url },
C:   { query="iss", title="Home | ISS", description="ISS NEWS ISS Announces Acquisition of Genesys Research Genesys is a leading provider of product intelligence to the asset management and insurance communities, delivering to leading asset managers and insurance providers a combination of data and research solutions focused on the subadvisory and platform markets.", link="https://www.issgovernance.com/"^^tt:url }
C: ]];
C: @com.bing.web_search(query="elon")
C: #[results=[
C:   { query="elon", title="Elon University / Home", description="Elon is one of only 18 private universities in the nation with an accredited communications school. More than 1,200 students pursue undergraduate majors in journalism, strategic communications, cinema and television arts, communication design, media analytics, and sport management, along with a master’s program in interactive media. Learn More.", link="https://www.elon.edu/"^^tt:url },
C:   { query="elon", title="Elon Musk - Wikipedia", description="Elon Reeve Musk was born on June 28, 1971, in Pretoria, South Africa. His mother is Maye Musk (née Haldeman), a model and dietitian born in Saskatchewan, Canada, but raised in South Africa. His father is Errol Musk, a South African electromechanical engineer, pilot, sailor, consultant, and property developer.", link="https://en.wikipedia.org/wiki/Elon_Musk"^^tt:url },
C:   { query="elon", title="Elon Musk (@elonmusk) | Twitter", description="The latest Tweets from Elon Musk (@elonmusk). Technoking of Tesla, Imperator of Mars ?", link="https://twitter.com/elonmusk"^^tt:url },
C:   { query="elon", title="Elon Musk (@ElonMusk) | Twitter", description="We would like to show you a description here but the site won’t allow us.", link="https://twitter.com/@elonmusk"^^tt:url },
C:   { query="elon", title="Elon University / Information Technology / University Email", description="Elon University is a mid-sized private university in North Carolina that is nationally recognized as the premier student-centered environment for experiential learning.", link="https://www.elon.edu/u/fa/technology/university-email/"^^tt:url }
C: ]];
A: I found Elon University / Home.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: who is bezos?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="bezos");
====
# recording/42e165d09d78df19b10b96c8db1de5bd
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Where are you now?
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me ajoke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="uPu4MRZLmrc"^^com.icanhazdadjoke:id, text="Want to hear a chimney joke? Got stacks of em! First one's on the house" }
C: ]];
A: Want to hear a chimney joke? Got stacks of em! First one's on the house.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/6fb1627331a6193db3d3f67b84b3acb2
U: Have a great evening
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello! How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: Bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6270a6a9cc4407d5392109a0552d28a6
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="BQnyImOCIBd"^^com.icanhazdadjoke:id, text="How do hens stay fit? They always egg-cercise!" }
C: ]];
A: How do hens stay fit? They always egg-cercise!
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/385434ebca941a151090cd39632e803f
U: tell me the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(46.6166686, -64.1084895, "Alaska, PE"))
C: #[results=[
C:   { temperature=22.5C, wind_speed=5.1mps, humidity=83.8, cloudiness=4.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(46.6166686, -64.1084895, "Alaska, PE") }
C: ]];
A: Where are you now?
A: It is sunny today in Alaska, PE and the temperature is 72.5 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: how's the weather in tokyo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("tokyo"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(46.6166686, -64.1084895, "Alaska, PE"))
C: #[results=[
C:   { temperature=22.5C, wind_speed=5.1mps, humidity=83.8, cloudiness=4.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(46.6166686, -64.1084895, "Alaska, PE") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(35.6821116, 139.7656744, "Tōkyō, Tokyo"))
C: #[results=[
C:   { temperature=25.9C, wind_speed=0.6mps, humidity=85.7, cloudiness=47.7, fog=0, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=5;content_type=image/png"^^tt:picture, location=new Location(35.6821116, 139.7656744, "Tōkyō, Tokyo") }
C: ]];
A: It is raining today in Tōkyō, Tokyo and the temperature is 78.6 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: remind me to do something at 4:24
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[set_time($now, new Time(4, 24))]) => @org.thingpedia.builtin.thingengine.builtin.say();
====
# recording/ba1a32fc3ab0440eba0dbb56584bc87e
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=26.3C, wind_speed=2.8mps, humidity=42.9, cloudiness=3.1, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Where are you now?
A: It is sunny today in Palo Alto, California and the temperature is 79.3 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
====
# recording/51b91c29082d36c7cf6d739ebe7726c4
U: hi there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/e9c10f4e27f9a41beb9eb4d9098d4ec4
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Where are you now?
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="lyPZgVn3Le"^^com.icanhazdadjoke:id, text="What did the ocean say to the shore? Nothing, it just waved." }
C: ]];
A: What did the ocean say to the shore? Nothing, it just waved.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/66fb5badb46140b801e4fa90d3b3979d
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="Yg3orWS7wkb"^^com.icanhazdadjoke:id, text="\"I'm sorry.\" \"Hi sorry, I'm dad\"" }
C: ]];
A: "I'm sorry." "Hi sorry, I'm dad".
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="Yg3orWS7wkb"^^com.icanhazdadjoke:id, text="\"I'm sorry.\" \"Hi sorry, I'm dad\"" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="7wciy59MJe"^^com.icanhazdadjoke:id, text="What’s Forest Gump’s Facebook password? 1forest1" }
C: ]];
A: What’s Forest Gump’s Facebook password? 1forest1.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="Yg3orWS7wkb"^^com.icanhazdadjoke:id, text="\"I'm sorry.\" \"Hi sorry, I'm dad\"" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="7wciy59MJe"^^com.icanhazdadjoke:id, text="What’s Forest Gump’s Facebook password? 1forest1" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="ElbaF6wHlyd"^^com.icanhazdadjoke:id, text="I cut my finger cutting cheese. I know it may be a cheesy story but I feel grate now." }
C: ]];
A: I cut my finger cutting cheese. I know it may be a cheesy story but I feel grate now.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="Yg3orWS7wkb"^^com.icanhazdadjoke:id, text="\"I'm sorry.\" \"Hi sorry, I'm dad\"" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="7wciy59MJe"^^com.icanhazdadjoke:id, text="What’s Forest Gump’s Facebook password? 1forest1" }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="ElbaF6wHlyd"^^com.icanhazdadjoke:id, text="I cut my finger cutting cheese. I know it may be a cheesy story but I feel grate now." }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="oOR7hFdx5Ed"^^com.icanhazdadjoke:id, text="I wouldn't buy anything with velcro. It's a total rip-off." }
C: ]];
A: I wouldn't buy anything with velcro. It's a total rip-off.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/b4c1221e21e07f28b35113362e93f0a7
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 66.9 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 66.9 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 66.9 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 66.9 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="baFQZv4w5wc"^^com.icanhazdadjoke:id, text="My New Years resolution is to stop leaving things so late." }
C: ]];
A: My New Years resolution is to stop leaving things so late.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/0d86db403a22912b0bd13c4d6b01c63e
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="V8hFQCY8Unb"^^com.icanhazdadjoke:id, text="Where do you take someone who has been injured in a Peek-a-boo accident? To the I.C.U." }
C: ]];
A: Where do you take someone who has been injured in a Peek-a-boo accident? To the I.C.U.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: more
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
====
# recording/5599bb12e4be6d6ae1c28a242a4cb992
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=1.8mps, humidity=85.6, cloudiness=83.6, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="N7pWvcxsHBd"^^com.icanhazdadjoke:id, text="What happens to a frog's car when it breaks down? It gets toad." }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=1.8mps, humidity=85.6, cloudiness=83.6, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 61 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
====
# recording/4f794aaaba91c72961cdb49ab8f932de
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=23.8C, wind_speed=2.9mps, humidity=52.5, cloudiness=10.2, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 74.8 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what time is it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=23.8C, wind_speed=2.9mps, humidity=52.5, cloudiness=10.2, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(0, 18, 38) }
C: ]];
A: Right now, it's 5:18 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
====
# recording/b4c1325f79f3df84e530499bef121e30
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5c008f9f9a2e4061afe303e6ea867395
U: play wolfgang a mozart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("wolfgang a mozart")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/168924dbacf30e68e8ed7a1f35120bf6
U: Ask Bing for a quote from William Shakespeare.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="william shakespeare");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.bing.web_search(query="william shakespeare")
C: #[results=[
C:   { query="william shakespeare", title="William Shakespeare - Wikipedia", description="William Shakespeare (bapt. 26 April 1564 – 23 April 1616) was an English playwright, poet, and actor, widely regarded as the greatest writer in the English language and the world's greatest dramatist. He is often called England's national poet and the \"Bard of Avon\" (or simply \"the Bard\"). His extant works, including collaborations, consist of some 39 plays, 154 sonnets, three long narrative ...", link="https://en.wikipedia.org/wiki/William_Shakespeare"^^tt:url },
C:   { query="william shakespeare", title="William Shakespeare Biography", description="William Shakespeare was a renowned English poet, playwright, and actor born in 1564 in Stratford-upon-Avon.His birthday is most commonly celebrated on 23 April (see When was Shakespeare born), which is also believed to be the date he died in 1616. Shakespeare was a prolific writer during the Elizabethan and Jacobean ages of British theatre (sometimes called the English Renaissance or the Early ...", link="https://www.shakespeare.org.uk/explore-shakespeare/shakespedia/william-shakespeare/william-shakespeare-biography/"^^tt:url },
C:   { query="william shakespeare", title="About William Shakespeare | Academy of American Poets", description="William Shakespeare was born on April 23, 1564, in Stratford-upon-Avon. The son of John Shakespeare and Mary Arden, he was probably educated at the King Edward VI Grammar School in Stratford, where he learned Latin and a little Greek and read the Roman dramatists. At eighteen, he married Anne Hathaway, a woman seven or eight years his senior.", link="https://poets.org/poet/william-shakespeare"^^tt:url },
C:   { query="william shakespeare", title="William Shakespeare: 20 Facts, 37 Plays, 375 Poems, 100 ...", description="William Shakespeare wrote at least 37 plays that scholars know of, with most of them labeled is comedies, histories, or tragedies. The earliest play that is directly attributed to Shakespeare is the trilogy of \"King Henry VI,\" with Richard III also being written around the same time, between 1589 and 1591.", link="https://www.williamshakespeare.net/"^^tt:url },
C:   { query="william shakespeare", title="The Complete Works of William Shakespeare", description="Welcome to the Web's first edition of the Complete Works of William Shakespeare. This site has offered Shakespeare's plays and poetry to the Internet community since 1993. For other Shakespeare resources, visit the Mr. William Shakespeare and the Internet Web site. The original electronic source for this server was the Complete Moby(tm ...", link="http://shakespeare.mit.edu/"^^tt:url }
C: ]];
A: I found William Shakespeare - Wikipedia.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: What is the meaning of the word of judicate?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @info.owlbot.get(word="judicate");
====
# recording/64d08ac321c0e85f0b7a895d4bb24468
U: play baba riley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "baba riley" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Baba O'Riley on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/655e9cb921165bcbde06647eaf0ed9e8
U: play mozart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("mozart")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:32QzlLbdI90xZtgtHorqzB"^^org.thingpedia.media-source:artist("Baby Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0Kib1nl18LNb3nZfE1JvsM"^^org.thingpedia.media-source:playable("Twinkle Little Star (with Ocean Waves)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1tphFOMsnIiCW0vLeqmved"^^org.thingpedia.media-source:playable("Moonlight Sonata"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0KeDpZwfV153LWLOLVqIay"^^org.thingpedia.media-source:playable("Brahm Baby Lullaby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6pP8yDg5Y4xU5eubMcWNkH"^^org.thingpedia.media-source:playable("Hush Little Baby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1Y0sZjZo7hJf3o1vkM2W90"^^org.thingpedia.media-source:playable("Canon in D"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music by Baby Mozart on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play wolfgang mozart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("wolfgang mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:32QzlLbdI90xZtgtHorqzB"^^org.thingpedia.media-source:artist("Baby Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0Kib1nl18LNb3nZfE1JvsM"^^org.thingpedia.media-source:playable("Twinkle Little Star (with Ocean Waves)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1tphFOMsnIiCW0vLeqmved"^^org.thingpedia.media-source:playable("Moonlight Sonata"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0KeDpZwfV153LWLOLVqIay"^^org.thingpedia.media-source:playable("Brahm Baby Lullaby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6pP8yDg5Y4xU5eubMcWNkH"^^org.thingpedia.media-source:playable("Hush Little Baby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1Y0sZjZo7hJf3o1vkM2W90"^^org.thingpedia.media-source:playable("Canon in D"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music by Wolfgang Amadeus Mozart on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:32QzlLbdI90xZtgtHorqzB"^^org.thingpedia.media-source:artist("Baby Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0Kib1nl18LNb3nZfE1JvsM"^^org.thingpedia.media-source:playable("Twinkle Little Star (with Ocean Waves)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1tphFOMsnIiCW0vLeqmved"^^org.thingpedia.media-source:playable("Moonlight Sonata"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0KeDpZwfV153LWLOLVqIay"^^org.thingpedia.media-source:playable("Brahm Baby Lullaby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6pP8yDg5Y4xU5eubMcWNkH"^^org.thingpedia.media-source:playable("Hush Little Baby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1Y0sZjZo7hJf3o1vkM2W90"^^org.thingpedia.media-source:playable("Canon in D"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:32QzlLbdI90xZtgtHorqzB"^^org.thingpedia.media-source:artist("Baby Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0Kib1nl18LNb3nZfE1JvsM"^^org.thingpedia.media-source:playable("Twinkle Little Star (with Ocean Waves)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1tphFOMsnIiCW0vLeqmved"^^org.thingpedia.media-source:playable("Moonlight Sonata"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0KeDpZwfV153LWLOLVqIay"^^org.thingpedia.media-source:playable("Brahm Baby Lullaby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6pP8yDg5Y4xU5eubMcWNkH"^^org.thingpedia.media-source:playable("Hush Little Baby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1Y0sZjZo7hJf3o1vkM2W90"^^org.thingpedia.media-source:playable("Canon in D"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/bd2f608983fc6143e47f9a1dae5626f1
U: play the artist the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
A: I played music by The Cure on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5a5c1909fab47a4593c937b17646a71f
U: play mozart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("mozart")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:32QzlLbdI90xZtgtHorqzB"^^org.thingpedia.media-source:artist("Baby Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0Kib1nl18LNb3nZfE1JvsM"^^org.thingpedia.media-source:playable("Twinkle Little Star (with Ocean Waves)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1tphFOMsnIiCW0vLeqmved"^^org.thingpedia.media-source:playable("Moonlight Sonata"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0KeDpZwfV153LWLOLVqIay"^^org.thingpedia.media-source:playable("Brahm Baby Lullaby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6pP8yDg5Y4xU5eubMcWNkH"^^org.thingpedia.media-source:playable("Hush Little Baby"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1Y0sZjZo7hJf3o1vkM2W90"^^org.thingpedia.media-source:playable("Canon in D"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music by Baby Mozart on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/d0a27ef7d75fd1709b690b1d908188b5
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/836eb051bba5f2d095ddc908e72c93a7
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/aaa33ba9896cec36ee8da57640c6fb5d
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/af632248fa79fe682e347b9dc89a6150
U: play wolfgang amadeus mozart
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("wolfgang amadeus mozart")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music by Wolfgang Amadeus Mozart on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: previous song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:4NJhFmfw43RLBLjQvxDuRS"^^org.thingpedia.media-source:artist("Wolfgang Amadeus Mozart")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4h3B0bJAyl2GCUY9dgHvJ0"^^org.thingpedia.media-source:playable("12 Variations on \"Ah, vous dirai-je maman\", K. 265"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4dYeS61BGznDr8gVFaRy0p"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3jyFGiDfRVsrNVCxrESxLI"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: I. Allegro"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:63cvaTiNnsEAOPeUIyAZMy"^^org.thingpedia.media-source:playable("Divertimento in F Major, K. 138 \"Salzburg Symphony No. 3\": II. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2jl00YBXk8HIXvA0gmit1h"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: III. Presto"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1MLifYxP8UDnfv9mRt3qiQ"^^org.thingpedia.media-source:playable("Serenade in G, K.525 \"Eine kleine Nachtmusik\": 2. Romance (Andante)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4H82O0Eb4c8emw5IeL3jo5"^^org.thingpedia.media-source:playable("Divertimento in B-Flat Major, K. 254: I. Allegro assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1kapunxYsrU5vXPMcCdBfY"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: IV. Andante"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BebEyL3FWbQ5BSyBEnpw2"^^org.thingpedia.media-source:playable("Divertimento in E-Flat Major, K. 563: III. Menuetto (Allegretto)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0iiWFp5k0VPJdAigUezMth"^^org.thingpedia.media-source:playable("Divertimento No. 1 in D Major, K. 136: II. Andante"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous()
C: #[results=[]];
A: I played the previous song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
====
# recording/6401acf784b0b87369027e16b7a747e1
U: play michael jackson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("michael jackson")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3fMbdgg4jU18AjLCKBhRSm"^^org.thingpedia.media-source:artist("Michael Jackson")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5ChkMS8OtdzJeqyybCc9R5"^^org.thingpedia.media-source:playable("Billie Jean"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1OOtq8tRnDM8kG2gqUPjAj"^^org.thingpedia.media-source:playable("Beat It"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7oOOI85fVQvVnK5ynNMdW7"^^org.thingpedia.media-source:playable("Rock with You - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:46eu3SBuFCXWsPT39Yg3tJ"^^org.thingpedia.media-source:playable("Don't Stop 'Til You Get Enough"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2bCQHF9gdG5BNDVuEIEnNk"^^org.thingpedia.media-source:playable("Smooth Criminal - 2012 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3cybT6ri039rCxZkbsa6IR"^^org.thingpedia.media-source:playable("Rockin' Robin"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5lA3pwMkBdd24StM90QrNR"^^org.thingpedia.media-source:playable("P.Y.T. (Pretty Young Thing)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0sKlV58cODrjxGFOyf9IXY"^^org.thingpedia.media-source:playable("The Way You Make Me Feel - 2012 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4jnFqNWeJCeCRHc4HCdxfd"^^org.thingpedia.media-source:playable("Remember the Time"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5lWFrW5T3JtxVCLDb7etPu"^^org.thingpedia.media-source:playable("Bad - 2012 Remaster"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=33];
A: I played music by Michael Jackson on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/468d01d54f25e9216f9ce410e18df943
U: play travis playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "travis" => @org.thingpedia.media-player.play(playable=id);
====
# recording/41abf79a945714fe511008497bc629d5
U: Play Sandstorm by Darude
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("darude")) && id =~ "sandstorm" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0LhHRmSd1EYM5QdNeNnCoQ"^^org.thingpedia.media-source:artist("Darude")) && id =~ "sandstorm")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="10a83fba23ca39d9d843c96f868d452729b18665", display="Nicks room", playable="spotify:track:24CXuh2WNpgeSYUOvz14jk"^^org.thingpedia.media-source:playable("Sandstorm - Radio Edit"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Sandstorm - Radio Edit on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: configure home assistant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.configure(device=null^^tt:device("home assistant"));
====
# recording/218ff06ec9f035bb73287fb801635ed6
U: play yellow submarine
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "yellow submarine" => @org.thingpedia.media-player.play(playable=id);
====
# recording/e2ec417c6984b92092c336ab46a21048
U: what's the latest album by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source.album() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], release_date=new Date("2021-04-09T00:00:00.000Z"), popularity=80, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: The most recent album is Fearless (Taylor's Version). It is an album by Taylor Swift.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: play it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.play(playable="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1]
C: #[results=[
C:   { id="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], release_date=new Date("2021-04-09T00:00:00.000Z"), popularity=80, __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:album("Fearless (Taylor's Version)"))
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:4hDok0OAJd57SGIT8xuWJH"^^org.thingpedia.media-source:playable("Fearless (Taylor's Version)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played a song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0c293c5202fd7fe0500ac3c8f570260d
U: what's the weather in san mateo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("san mateo"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.5439684, -122.306678, "San Mateo, California"))
C: #[results=[
C:   { temperature=20.6C, wind_speed=2mps, humidity=47.9, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.5439684, -122.306678, "San Mateo, California") }
C: ]];
A: It is sunny today in San Mateo, California and the temperature is 20.6 C.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.5439684, -122.306678, "San Mateo, California"))
C: #[results=[
C:   { temperature=20.6C, wind_speed=2mps, humidity=47.9, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.5439684, -122.306678, "San Mateo, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="scaFQfFlqjb"^^com.icanhazdadjoke:id, text="My dentist is the best, he even has a little plaque!" }
C: ]];
A: My dentist is the best, he even has a little plaque!
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5e26b0a1fb1732d66d33e730f1f79837
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/a68abd02b17b67becd4084473e3cb639
U: play 8 mile
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "8 mile" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "8 mile")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5Z01UMMf7V1o0MzF86s6WJ"^^org.thingpedia.media-source:playable("Lose Yourself - From \"8 Mile\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Lose Yourself - From "8 Mile" Soundtrack on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/424c339660ae4d4c19cc636d26a49e89
U: show me the news
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4311178050977928700"^^com.smartnews:article, link="https://www.space.com/gravitational-wave-observatory-moon-concept/"^^tt:url, title="We could hunt gravitational waves on the moon if this wild idea takes off", date=new Date("2021-07-28T11:00:02.000Z"), source="Space", author="Mike Wall", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311178050977928563.mp3"^^tt:url, content="smartnews-sha256:38781a749362b8b98762bba3791f057406c7d6d4dd14bc061b5d9617d4307065" },
C:   { id="4311219825989915600"^^com.smartnews:article, link="https://www.kansas.com/news/coronavirus/article253084593.html"^^tt:url, title="Wichita hospital system mandates COVID vaccines for workers amid growing ICU numbers", date=new Date("2021-07-28T16:46:38.000Z"), source="The Wichita Eagle", author="Dion Lefler", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311219825989915471.mp3"^^tt:url, content="smartnews-sha256:3b0cb6e35128d0be65adb659a4df655e8a02733e32774f4d38acca595ef52e5f" },
C:   { id="4311294915339356000"^^com.smartnews:article, link="https://www.fresnobee.com/news/coronavirus/article253087468.html"^^tt:url, title="Fresno church cancels youth activities after COVID exposures at summer camp", date=new Date("2021-07-28T21:45:46.000Z"), source="The Fresno Bee", author="Tim Sheehan", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311294915339356334.mp3"^^tt:url, content="smartnews-sha256:dc2af98fc72287a940a3d1f62eb6310d6dfe18924eccb5e62a42e70e4188a991" },
C:   { id="4311094280421639000"^^com.smartnews:article, link="https://www.huffpost.com/entry/michael-fanone-voicemail_n_6100e81be4b0fd216c20006f"^^tt:url, title="Cop Shares Voicemail Threat He Received During Testimony About U.S. Capitol Riot", date=new Date("2021-07-28T08:29:12.000Z"), source="HuffPost", author="Josephine Harvey", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311094280421639029.mp3"^^tt:url, content="smartnews-sha256:e4833fc02473c79bbb0e3d284096d48837b606aece9b3c5d3bb7fd103e20fd77" },
C:   { id="4311268331547002400"^^com.smartnews:article, link="https://www.rawstory.com/proud-boy-arrested/"^^tt:url, title="Feds nab Virginia Proud Boy who charged at cops while wielding a 'large stick' during Capitol riot", date=new Date("2021-07-28T20:00:04.000Z"), source="Raw Story", author="Brad Reed", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311268331547002236.mp3"^^tt:url, content="smartnews-sha256:efd5896ad7b47151ac0aca38546ebc7ef6952997e7b944a2f4df3e2312c28436" },
C:   { id="4311287856317345300"^^com.smartnews:article, link="https://www.latimes.com/california/story/2021-07-28/usc-finds-racial-profiling-stronger-oversight-of-campus-safety-officers-urged"^^tt:url, title="USC finds racial profiling with campus security, urges more oversight", date=new Date("2021-07-28T21:16:39.000Z"), source="Los Angeles Times", author="Teresa Watanabe", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311287856317345034.mp3"^^tt:url, content="smartnews-sha256:f18be8227b5967ef772bded766bd09fbbd4d27e395e0853c5ca9cf41c2741319" },
C:   { id="4311294925128865000"^^com.smartnews:article, link="https://www.audacy.com/wfan/sports/mets/zack-scott-pitching-is-the-mets-top-deadline-priority"^^tt:url, title="Zack Scott tells Carton & Roberts that pitching is the Mets' top deadline priority", date=new Date("2021-07-28T21:42:21.000Z"), source="Audacy", author="Carton Roberts", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311294925128864799.mp3"^^tt:url, content="smartnews-sha256:b8213e1112731d4ac245aa618c7e2d4b56946d75798ea25debf7f2d1e6182456" },
C:   { id="4311302557784877000"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-07-29/older-builders-back-on-the-tools-construction-boom/100314222"^^tt:url, title="Queensland construction boom means tradies of all ages are trying to keep up", date=new Date("2021-07-28T22:07:32.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311302557784877032.mp3"^^tt:url, content="smartnews-sha256:544df438c339b3961e878ef366c012e14a1e24b2cef1c8a36359d52ff267b36e" },
C:   { id="4310815481490581500"^^com.smartnews:article, link="https://www.bloomberg.com/news/articles/2021-07-27/no-crabs-no-scallops-seafood-is-vanishing-from-menus-in-u-s"^^tt:url, title="No Crabs, No Scallops: Seafood Is Vanishing From Menus in U.S.", date=new Date("2021-07-27T13:00:00.000Z"), source="Bloomberg", author="Adam Jackson and Kate Krader", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4310815481490581423.mp3"^^tt:url, content="smartnews-sha256:e5050f59a832e8ce42c42cdd34d12e6997942dca7a7783c712e76236d1f40b59" },
C:   { id="4311302598507374600"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-07-29/abc-capricornia-turns-90-4rk-rockhampton-radio-station/100323628"^^tt:url, title="Celebrating 90 years of Aunty in central Queensland", date=new Date("2021-07-28T22:06:19.000Z"), source="Australian Broadcasting Corporation", author="By Erin Semmler and Paul Culliver", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311302598507374575.mp3"^^tt:url, content="smartnews-sha256:ac6667c85da0fcdfcc9499abb6cc5550b456c57c914f45acbfb5bb26e0b2e3f5" }
C: ]]
C: #[count=50]
C: #[more=true];
A: Here are the news.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_many;
U: What can you do?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4311178050977928700"^^com.smartnews:article, link="https://www.space.com/gravitational-wave-observatory-moon-concept/"^^tt:url, title="We could hunt gravitational waves on the moon if this wild idea takes off", date=new Date("2021-07-28T11:00:02.000Z"), source="Space", author="Mike Wall", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311178050977928563.mp3"^^tt:url, content="smartnews-sha256:38781a749362b8b98762bba3791f057406c7d6d4dd14bc061b5d9617d4307065" },
C:   { id="4311219825989915600"^^com.smartnews:article, link="https://www.kansas.com/news/coronavirus/article253084593.html"^^tt:url, title="Wichita hospital system mandates COVID vaccines for workers amid growing ICU numbers", date=new Date("2021-07-28T16:46:38.000Z"), source="The Wichita Eagle", author="Dion Lefler", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311219825989915471.mp3"^^tt:url, content="smartnews-sha256:3b0cb6e35128d0be65adb659a4df655e8a02733e32774f4d38acca595ef52e5f" },
C:   { id="4311294915339356000"^^com.smartnews:article, link="https://www.fresnobee.com/news/coronavirus/article253087468.html"^^tt:url, title="Fresno church cancels youth activities after COVID exposures at summer camp", date=new Date("2021-07-28T21:45:46.000Z"), source="The Fresno Bee", author="Tim Sheehan", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311294915339356334.mp3"^^tt:url, content="smartnews-sha256:dc2af98fc72287a940a3d1f62eb6310d6dfe18924eccb5e62a42e70e4188a991" },
C:   { id="4311094280421639000"^^com.smartnews:article, link="https://www.huffpost.com/entry/michael-fanone-voicemail_n_6100e81be4b0fd216c20006f"^^tt:url, title="Cop Shares Voicemail Threat He Received During Testimony About U.S. Capitol Riot", date=new Date("2021-07-28T08:29:12.000Z"), source="HuffPost", author="Josephine Harvey", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311094280421639029.mp3"^^tt:url, content="smartnews-sha256:e4833fc02473c79bbb0e3d284096d48837b606aece9b3c5d3bb7fd103e20fd77" },
C:   { id="4311268331547002400"^^com.smartnews:article, link="https://www.rawstory.com/proud-boy-arrested/"^^tt:url, title="Feds nab Virginia Proud Boy who charged at cops while wielding a 'large stick' during Capitol riot", date=new Date("2021-07-28T20:00:04.000Z"), source="Raw Story", author="Brad Reed", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311268331547002236.mp3"^^tt:url, content="smartnews-sha256:efd5896ad7b47151ac0aca38546ebc7ef6952997e7b944a2f4df3e2312c28436" },
C:   { id="4311287856317345300"^^com.smartnews:article, link="https://www.latimes.com/california/story/2021-07-28/usc-finds-racial-profiling-stronger-oversight-of-campus-safety-officers-urged"^^tt:url, title="USC finds racial profiling with campus security, urges more oversight", date=new Date("2021-07-28T21:16:39.000Z"), source="Los Angeles Times", author="Teresa Watanabe", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311287856317345034.mp3"^^tt:url, content="smartnews-sha256:f18be8227b5967ef772bded766bd09fbbd4d27e395e0853c5ca9cf41c2741319" },
C:   { id="4311294925128865000"^^com.smartnews:article, link="https://www.audacy.com/wfan/sports/mets/zack-scott-pitching-is-the-mets-top-deadline-priority"^^tt:url, title="Zack Scott tells Carton & Roberts that pitching is the Mets' top deadline priority", date=new Date("2021-07-28T21:42:21.000Z"), source="Audacy", author="Carton Roberts", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311294925128864799.mp3"^^tt:url, content="smartnews-sha256:b8213e1112731d4ac245aa618c7e2d4b56946d75798ea25debf7f2d1e6182456" },
C:   { id="4311302557784877000"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-07-29/older-builders-back-on-the-tools-construction-boom/100314222"^^tt:url, title="Queensland construction boom means tradies of all ages are trying to keep up", date=new Date("2021-07-28T22:07:32.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311302557784877032.mp3"^^tt:url, content="smartnews-sha256:544df438c339b3961e878ef366c012e14a1e24b2cef1c8a36359d52ff267b36e" },
C:   { id="4310815481490581500"^^com.smartnews:article, link="https://www.bloomberg.com/news/articles/2021-07-27/no-crabs-no-scallops-seafood-is-vanishing-from-menus-in-u-s"^^tt:url, title="No Crabs, No Scallops: Seafood Is Vanishing From Menus in U.S.", date=new Date("2021-07-27T13:00:00.000Z"), source="Bloomberg", author="Adam Jackson and Kate Krader", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4310815481490581423.mp3"^^tt:url, content="smartnews-sha256:e5050f59a832e8ce42c42cdd34d12e6997942dca7a7783c712e76236d1f40b59" },
C:   { id="4311302598507374600"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-07-29/abc-capricornia-turns-90-4rk-rockhampton-radio-station/100323628"^^tt:url, title="Celebrating 90 years of Aunty in central Queensland", date=new Date("2021-07-28T22:06:19.000Z"), source="Australian Broadcasting Corporation", author="By Erin Semmler and Paul Culliver", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210729/voice/summary_4311302598507374575.mp3"^^tt:url, content="smartnews-sha256:ac6667c85da0fcdfcc9499abb6cc5550b456c57c914f45acbfb5bb26e0b2e3f5" }
C: ]]
C: #[count=50]
C: #[more=true];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: What can you do?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
====
# recording/f324791053a584b5e895bfa0218b2b15
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="ClGY8xc2EBd"^^com.icanhazdadjoke:id, text="Why are graveyards so noisy? Because of all the coffin." }
C: ]];
A: Why are graveyards so noisy? Because of all the coffin.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what time is it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="ClGY8xc2EBd"^^com.icanhazdadjoke:id, text="Why are graveyards so noisy? Because of all the coffin." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(21, 33, 12) }
C: ]];
A: Right now, it's 2:33 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: configure spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.configure(device="com.spotify"^^tt:device("spotify"));
====
# recording/2f7fe32a19469324d41ae40e93672485
U: play the podcast all the presidents laywers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "all the presidents laywers" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents laywers")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Sorry, there are no shows matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3fb594b46d296931269ff000eeb92380
U: what can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: tell me a joke when i wake up
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[$time.morning]) => @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: attimer(time=[new Time(8, 30)]) => @com.icanhazdadjoke.get()
C: #[results=[]];
A: Did you mean get the joke every day in the morning?
A: Alright, I will get the joke every day at 1:30 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_rule_enable_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/8e37cfbf7c2de7c404a3fc7b6469ad66
U: stop the music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play the latest by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")))[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UAdDYrkCvVQftaKpL6q5f"^^org.thingpedia.media-source:playable("the lakes - original version"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the lakes - original version on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what is this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")))[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UAdDYrkCvVQftaKpL6q5f"^^org.thingpedia.media-source:playable("the lakes - original version"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing()
C: #[results=[
C:   { id="spotify:track:0UAdDYrkCvVQftaKpL6q5f"^^org.thingpedia.media-source:song("the lakes - original version"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift")], album="spotify:album:40cMfQDrBCDmOaWZuNEmKq"^^org.thingpedia.media-source:album("the lakes (original version)"), genres=["pop", "post-teen pop"], release_date=new Date("2021-07-24T00:00:00.000Z"), popularity=68, energy=40.6, danceability=19.7, __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean get the currently playing track?
A: Currently playing the lakes - original version.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: when was this song released
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [release_date] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing();
====
# recording/83d5f852dcb2e0e19bde12cbfaf1f82e
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: lower the volume
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.volume-control.lower_volume();
====
# recording/f01b232dab5b321bca441cb810697eab
U: play the podcast all the presidents lawyer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "all the presidents lawyer" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play the podcast all the presidents lawyer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: what's my name
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
A: Sorry, I don't know your name yet. Would you like to tell me?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: my name is giovanni
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni")
C: #[results=[]];
A: Your request was completed successfully.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's my name
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
A: Your name is giovanni.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: weather next week
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=$end_of(week));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=0.6mps, humidity=78.2, cloudiness=54.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-07-25T12:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
A: It will be cloudy on next Sunday at 5:00 AM in Redwood City, California and the temperature will be 15.3 C.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: weather on friday
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=new Date(enum friday), location=new Location(37.4863239, -122.232523, "Redwood City, California"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=0.6mps, humidity=78.2, cloudiness=54.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-07-25T12:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum friday), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=20.7C, wind_speed=0.8mps, humidity=45.4, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-23T17:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
A: It will be sunny tomorrow at 10:00 AM in Redwood City, California and the temperature will be 20.7 C.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: weather on monday
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=new Date(enum monday), location=new Location(37.4863239, -122.232523, "Redwood City, California"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=0.6mps, humidity=78.2, cloudiness=54.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-07-25T12:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum friday), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=20.7C, wind_speed=0.8mps, humidity=45.4, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-23T17:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum monday), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=23.4C, wind_speed=1.7mps, humidity=41.2, cloudiness=90.6, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-07-26T18:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
A: It will be cloudy on next Monday at 11:00 AM in Redwood City, California and the temperature will be 23.4 C.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "all the presidents lawyer")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[]]
C: #[error=enum unset];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="giovanni")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=15.3C, wind_speed=0.6mps, humidity=78.2, cloudiness=54.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-07-25T12:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum friday), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=20.7C, wind_speed=0.8mps, humidity=45.4, cloudiness=0, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-23T17:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum monday), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=23.4C, wind_speed=1.7mps, humidity=41.2, cloudiness=90.6, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-07-26T18:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: show me the news
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
====
# recording/736d68b7b8ab3e0630a12eb233d78170
U: what can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: show me the news
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.smartnews.article()
C: #[results=[
C:   { id="4312977115906583600"^^com.smartnews:article, link="https://www.yahoo.com/lifestyle/suzanne-somers-aging-130025805.html"^^tt:url, title="Suzanne Somers 'proud' of nearly-nude 'birthday suit' photo: 'I was 73 and it was natural'", date=new Date("2021-08-02T13:00:25.000Z"), source="Yahoo Lifestyle", author="Kaitlin Reilly", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4312977115906583625.mp3"^^tt:url, content="smartnews-sha256:714c6f2c87db474dc73b3c986d3d0f89b7b066022bf24bdffca76fbf628f2ccf" },
C:   { id="4312847673502730000"^^com.smartnews:article, link="https://apnews.com/article/joe-biden-business-bills-474bc149c0d9867e0b6636bf7695ea85"^^tt:url, title="$1T infrastructure bill gets first action as senators dig in", date=new Date("2021-08-02T04:35:06.000Z"), source="Associated Press", author="By KEVIN FREKING and LISA MASCARO", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4312847673502730059.mp3"^^tt:url, content="smartnews-sha256:68c9a58ff7ae96c5d1a02fff7739409f3a070f593fbfaa309876a63c73f48dfe" },
C:   { id="4312929660674511000"^^com.smartnews:article, link="https://www.texastribune.org/2021/08/02/san-antonio-water-supply-rural-wells/"^^tt:url, title="San Antonio built a pipeline to rural Central Texas to increase its water supply. Now local landowners say their wells are running dry.", date=new Date("2021-08-02T10:00:00.000Z"), source="The Texas Tribune", author="Erin Douglas", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4312929660674510976.mp3"^^tt:url, content="smartnews-sha256:ad8fb50a528d9d89e018a2d95ef29c571b1ff344a8b0a2b6c6e2932689b09906" },
C:   { id="4312649870834933000"^^com.smartnews:article, link="https://www.mashed.com/475635/fans-are-freaking-out-about-trisha-yearwoods-diamond-ring/?zsource=smartnews"^^tt:url, title="Fans Are Freaking Out About Trisha Yearwood's Diamond Ring", date=new Date("2021-08-01T15:27:49.000Z"), source="Mashed", author="Ashley Steinberg", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4312649870834933395.mp3"^^tt:url, content="smartnews-sha256:050ae0e6176564bb4d5b3452b1aadb951d8824c9262c6379940d84cfb0793c71" },
C:   { id="4313094525091320300"^^com.smartnews:article, link="https://www.upi.com/Health_News/2021/08/02/insecticide-neonicotinoid-bees-reproduction-study/2781627924388/"^^tt:url, title="Neonicotinoid insecticides harm bees even in small amounts", date=new Date("2021-08-02T16:54:59.000Z"), source="UPI", author="Kyle Barnett", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4313094525091320228.mp3"^^tt:url, content="smartnews-sha256:f17b6958e696c1f6306bf56dbd86cd1581c65d54c80d88bd4876c716d91523be" },
C:   { id="4312602642443410400"^^com.smartnews:article, link="https://metro.co.uk/2021/08/01/tokyo-olympics-who-is-competing-in-the-mens-100m-final-15020484/?ito=smart-news"^^tt:url, title="Tokyo Olympics: Who is competing in the Men’s 100m final?", date=new Date("2021-08-01T11:56:45.000Z"), source="Metro", author="Sophie Dickinson", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4312602642443410524.mp3"^^tt:url, content="smartnews-sha256:88cea9da94ba5f7015f210660259ddf9b7b4eea7629f20302f9145cbade3fdaa" },
C:   { id="4313021102122085000"^^com.smartnews:article, link="https://radaronline.com/p/alex-rodriguez-big-dick-energy-melanie-collins-dating-ibiza-private-jet-photos/"^^tt:url, title="Alex Rodriguez Has 'Big D--- Energy' Leaving Ibiza With Blonde Bombshell Melanie Collins On Private Jet", date=new Date("2021-08-02T15:38:51.000Z"), source="RadarOnline", author="Whitney Vasquez", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4313021102122084888.mp3"^^tt:url, content="smartnews-sha256:5bfe512d8a6d345703a818612cdbb54ef4f44e3db042bd5a579be43091f71819" },
C:   { id="4312859554237913000"^^com.smartnews:article, link="https://www.insider.com/tennessee-gop-rep-david-byrd-covid-months-take-virus-seriously-2021-8"^^tt:url, title="Tennessee GOP rep who rejected masks now says COVID-19 is real and dangerous after his 8-month battle with the virus", date=new Date("2021-08-02T05:23:36.000Z"), source="Insider", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4312859554237912910.mp3"^^tt:url, content="smartnews-sha256:0e906aef8f12b8ebf6f9fff986cd013880f3dee029847ba303ab46c4de4ee6d9" },
C:   { id="4313041364129427000"^^com.smartnews:article, link="https://1061kissfm.iheart.com/content/2021-08-02-watch-argument-over-seat-reclining-leads-to-brawl-on-austin-bound-flight/"^^tt:url, title="WATCH: Argument Over Seat Reclining Leads To Brawl On Austin-Bound Flight", date=new Date("2021-08-02T15:41:00.000Z"), source="KISS FM - Dallas, TX", author="Anna Gallegos", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4313041364129426834.mp3"^^tt:url, content="smartnews-sha256:8b17dceed75ce5d592de2912b133cc0e349b3fcbdc158252f3b7450e31e225f0" },
C:   { id="4313094392974946300"^^com.smartnews:article, link="https://www.charlotteobserver.com/entertainment/arts-culture/article252927728.html"^^tt:url, title="These artists have a goal for Charlotte: Prioritize diversity, equity and inclusion", date=new Date("2021-08-02T20:56:21.000Z"), source="Charlotte Observer", author="Liz Rothaus Bertrand", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210803/voice/summary_4313094392974946131.mp3"^^tt:url, content="smartnews-sha256:091462d9b58372593861815539cef21f867f56e31fc5eb236882161e86e6e134" }
C: ]]
C: #[count=50]
C: #[more=true];
A: Here are the news.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_many;
U: can you tell the date
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_date();
====
# recording/ecd08afa31db9bdabb8f13877768333c
U: what's my name
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
A: Your name is giovanni.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the temperature outside
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [temperature] of @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { location=new Location(37.4863239, -122.232523, "Redwood City, California"), temperature=22.1C, status=enum sunny }
C: ]];
A: It is sunny today in Redwood City, California and the temperature is 22.1 C.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the humidity
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [humidity] of @org.thingpedia.weather.current(location=new Location(37.4863239, -122.232523, "Redwood City, California"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="giovanni" }
C: ]];
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { location=new Location(37.4863239, -122.232523, "Redwood City, California"), temperature=22.1C, status=enum sunny }
C: ]];
C: [humidity] of @org.thingpedia.weather.current(location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { location=new Location(37.4863239, -122.232523, "Redwood City, California"), humidity=43.6, status=enum sunny }
C: ]];
A: The current weather in Redwood City, California is sunny. The humidity is 43.6 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0e03191245471940fa24714a3d6a013b
U: play the podcast all the presidents lawyer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "all the presidents lawyer" => @org.thingpedia.media-player.play(playable=id);
====
# recording/d2e020d03ed00eaffa91013aec492ad6
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/4ad00e2e2da979df18ef5edad4236e9b
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/7f51b06c25723f0aa169b9d84afe6f1e
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/8508c0923f0e01040653583e7ec27429
U: play the weekend
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("weekend")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7KxS1dL7Q7jxMkyb2ZvzXH"^^org.thingpedia.media-source:artist("Fury Weekend")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0SLVrAsEqTYcHFOKoDQGzb"^^org.thingpedia.media-source:playable("Another Brick In The Wall"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3RZZ8KnNq63Isfqo67KI4W"^^org.thingpedia.media-source:playable("Black To The Future"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4YyG15mMNRqjYCH3S7aBw0"^^org.thingpedia.media-source:playable("Knightriders"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6ElrKvNHLjtsmUqav1lrZl"^^org.thingpedia.media-source:playable("Dr. Online"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Adp5UsOveWYIsMP2ddkfJ"^^org.thingpedia.media-source:playable("Automatic Love - Extra Terra Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1r90nCKvPoWxSOLAWf0rKs"^^org.thingpedia.media-source:playable("Illumination"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3mp3rEFAkam0fvsUzcBVU1"^^org.thingpedia.media-source:playable("12 To Midnight"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6nLlrtjFPS8wBETtkKvnLZ"^^org.thingpedia.media-source:playable("Signals"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ePIF5AAQo9FvOJQdFof1z"^^org.thingpedia.media-source:playable("Euphoria"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5bPwnmPUsaSwHs7nBYAebf"^^org.thingpedia.media-source:playable("Gamechanger"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
A: Did you mean get music by weekend and then play the id on Spotify?
A: I played music by Fury Weekend on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play the weeknd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("weeknd")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7KxS1dL7Q7jxMkyb2ZvzXH"^^org.thingpedia.media-source:artist("Fury Weekend")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0SLVrAsEqTYcHFOKoDQGzb"^^org.thingpedia.media-source:playable("Another Brick In The Wall"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3RZZ8KnNq63Isfqo67KI4W"^^org.thingpedia.media-source:playable("Black To The Future"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4YyG15mMNRqjYCH3S7aBw0"^^org.thingpedia.media-source:playable("Knightriders"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6ElrKvNHLjtsmUqav1lrZl"^^org.thingpedia.media-source:playable("Dr. Online"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Adp5UsOveWYIsMP2ddkfJ"^^org.thingpedia.media-source:playable("Automatic Love - Extra Terra Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1r90nCKvPoWxSOLAWf0rKs"^^org.thingpedia.media-source:playable("Illumination"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3mp3rEFAkam0fvsUzcBVU1"^^org.thingpedia.media-source:playable("12 To Midnight"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6nLlrtjFPS8wBETtkKvnLZ"^^org.thingpedia.media-source:playable("Signals"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ePIF5AAQo9FvOJQdFof1z"^^org.thingpedia.media-source:playable("Euphoria"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5bPwnmPUsaSwHs7nBYAebf"^^org.thingpedia.media-source:playable("Gamechanger"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1Xyo4u8uXC1ZmMpatF05PJ"^^org.thingpedia.media-source:artist("The Weeknd")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:37BZB0z9T8Xu7U3e65qxFy"^^org.thingpedia.media-source:playable("Save Your Tears (with Ariana Grande) (Remix)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0VjIjW4GlUZAMYd2vXMi3b"^^org.thingpedia.media-source:playable("Blinding Lights"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fBv7CLKzipRk6EC6TWHOB"^^org.thingpedia.media-source:playable("The Hills"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7MXVkk9YMctZqd1Srtv4MB"^^org.thingpedia.media-source:playable("Starboy"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:22VdIZQfgXJea34mQxlt81"^^org.thingpedia.media-source:playable("Can't Feel My Face"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:09mEdoA6zrmBPgTEN5qXmN"^^org.thingpedia.media-source:playable("Call Out My Name"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6bnF93Rx87YqUBLSgjiMU8"^^org.thingpedia.media-source:playable("Heartless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7szuecWAPwGoV1e5vGu8tl"^^org.thingpedia.media-source:playable("In Your Eyes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ch7LmS7r2Gy2kc64wv3Bz"^^org.thingpedia.media-source:playable("Die For You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4PhsKqMdgMEUSstTDAmMpg"^^org.thingpedia.media-source:playable("Often"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=44];
A: I played music by The Weeknd on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/770260fda95f0117dc041866f722becd
U: play blink 182
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("blink 182")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:6FBDaR13swtiWwGhX1WQsP"^^org.thingpedia.media-source:artist("blink-182")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2m1hi0nfMR9vdGC8UcrnwU"^^org.thingpedia.media-source:playable("All The Small Things"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1oTo3ijRbaDAtrjJrGAPSw"^^org.thingpedia.media-source:playable("I Miss You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4LJhJ6DQS7NwE7UKtvcM52"^^org.thingpedia.media-source:playable("What's My Age Again?"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1fJFuvU2ldmeAm5nFIHcPP"^^org.thingpedia.media-source:playable("1 Date"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6WkSUgo1VdpzgtiXKlFPcY"^^org.thingpedia.media-source:playable("Dammit"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xpDh0dXrkVp0Po1qrHUd8"^^org.thingpedia.media-source:playable("Adam's Song"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2ydUT1pFhuLDnouelIv4WH"^^org.thingpedia.media-source:playable("The Rock Show"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:26AYR77170U49cMcXB7aRV"^^org.thingpedia.media-source:playable("Feeling This"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:24CRDgNOgA72JLL7PHFjgB"^^org.thingpedia.media-source:playable("Anthem Part 2"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:44TuSOP6xIAEeJmZsN3nXO"^^org.thingpedia.media-source:playable("Bored To Death"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=41];
A: I played music by blink-182 on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/746d7590e5feba828151320075dcd7ed
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: get joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="TS7U0oWnjyd"^^com.icanhazdadjoke:id, text="What is bread's favorite number?  Leaven." }
C: ]];
A: What is bread's favorite number? Leaven.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: get restaurant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant();
====
# recording/998fc6382c838508ee6df390ea9b302f
U: play megalovania
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "megalovania" => @org.thingpedia.media-player.play(playable=id);
====
# recording/046f33bc50e7433f85c79736e7d386b9
U: like the album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=album);
====
# recording/5cd240d311463a01c25c4344d9e8761e
U: How is it going?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great. Thanks for asking. How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Who are you?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
A: I'm Genie, an open-source virtual assistant created at Stanford.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: where is almond?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
A: My creators are mostly at Stanford. I'm an open-source assistant in the cloud.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what is the weather in ISS?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("iss"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
A: It is cloudy today in Nummi, Turku and the temperature is 70.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is ISS?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="iss");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
C: @com.bing.web_search(query="iss")
C: #[results=[
C:   { query="iss", title="International Space Station | NASA", description="Get the latest news, images, videos and more from humanity's home in orbit -- the International Space Station.", link="https://www.nasa.gov/mission_pages/station/main/index.html"^^tt:url },
C:   { query="iss", title="International Space Station - Wikipedia", description="The International Space Station (ISS) is a modular space station (habitable artificial satellite) in low Earth orbit.It is a multinational collaborative project involving five participating space agencies: NASA (United States), Roscosmos (Russia), JAXA (Japan), ESA (Europe), and CSA (Canada). The ownership and use of the space station is established by intergovernmental treaties and agreements.", link="https://en.wikipedia.org/wiki/International_Space_Station"^^tt:url },
C:   { query="iss", title="Spot The Station | NASA", description="Watch the International Space Station pass overhead from several thousand worldwide locations. It is the third brightest object in the sky and easy to spot if you know when to look up. Visible to the naked eye, it looks like a fast-moving plane only much higher and traveling thousands of miles an hour faster!", link="https://spotthestation.nasa.gov/"^^tt:url },
C:   { query="iss", title="Live Space Station Tracking Map | Spot The Station | NASA", description="Live Space Station Tracking Map. The tracker shows where the Space Station is right now and its path 90 minutes ago (-1.5 hr) and 90 minutes ahead (+1.5 hr). The dark overlay indicates where it is nighttime in the world. ISS Tracker. ERROR: Cannot load images.", link="https://spotthestation.nasa.gov/tracking_map.cfm"^^tt:url },
C:   { query="iss", title="Home | ISS", description="ISS NEWS ISS Announces Acquisition of Genesys Research Genesys is a leading provider of product intelligence to the asset management and insurance communities, delivering to leading asset managers and insurance providers a combination of data and research solutions focused on the subadvisory and platform markets.", link="https://www.issgovernance.com/"^^tt:url }
C: ]];
A: I found International Space Station | NASA.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: who is elon?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="elon");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
C: @com.bing.web_search(query="iss")
C: #[results=[
C:   { query="iss", title="International Space Station | NASA", description="Get the latest news, images, videos and more from humanity's home in orbit -- the International Space Station.", link="https://www.nasa.gov/mission_pages/station/main/index.html"^^tt:url },
C:   { query="iss", title="International Space Station - Wikipedia", description="The International Space Station (ISS) is a modular space station (habitable artificial satellite) in low Earth orbit.It is a multinational collaborative project involving five participating space agencies: NASA (United States), Roscosmos (Russia), JAXA (Japan), ESA (Europe), and CSA (Canada). The ownership and use of the space station is established by intergovernmental treaties and agreements.", link="https://en.wikipedia.org/wiki/International_Space_Station"^^tt:url },
C:   { query="iss", title="Spot The Station | NASA", description="Watch the International Space Station pass overhead from several thousand worldwide locations. It is the third brightest object in the sky and easy to spot if you know when to look up. Visible to the naked eye, it looks like a fast-moving plane only much higher and traveling thousands of miles an hour faster!", link="https://spotthestation.nasa.gov/"^^tt:url },
C:   { query="iss", title="Live Space Station Tracking Map | Spot The Station | NASA", description="Live Space Station Tracking Map. The tracker shows where the Space Station is right now and its path 90 minutes ago (-1.5 hr) and 90 minutes ahead (+1.5 hr). The dark overlay indicates where it is nighttime in the world. ISS Tracker. ERROR: Cannot load images.", link="https://spotthestation.nasa.gov/tracking_map.cfm"^^tt:url },
C:   { query="iss", title="Home | ISS", description="ISS NEWS ISS Announces Acquisition of Genesys Research Genesys is a leading provider of product intelligence to the asset management and insurance communities, delivering to leading asset managers and insurance providers a combination of data and research solutions focused on the subadvisory and platform markets.", link="https://www.issgovernance.com/"^^tt:url }
C: ]];
C: @com.bing.web_search(query="elon")
C: #[results=[
C:   { query="elon", title="Elon University / Home", description="Elon is one of only 18 private universities in the nation with an accredited communications school. More than 1,200 students pursue undergraduate majors in journalism, strategic communications, cinema and television arts, communication design, media analytics, and sport management, along with a master’s program in interactive media. Learn More.", link="https://www.elon.edu/"^^tt:url },
C:   { query="elon", title="Elon Musk - Wikipedia", description="Elon Reeve Musk was born on June 28, 1971, in Pretoria, South Africa. His mother is Maye Musk (née Haldeman), a model and dietitian born in Saskatchewan, Canada, but raised in South Africa. His father is Errol Musk, a South African electromechanical engineer, pilot, sailor, consultant, and property developer.", link="https://en.wikipedia.org/wiki/Elon_Musk"^^tt:url },
C:   { query="elon", title="Elon Musk (@elonmusk) | Twitter", description="The latest Tweets from Elon Musk (@elonmusk). Technoking of Tesla, Imperator of Mars ?", link="https://twitter.com/elonmusk"^^tt:url },
C:   { query="elon", title="Elon Musk (@ElonMusk) | Twitter", description="We would like to show you a description here but the site won’t allow us.", link="https://twitter.com/@elonmusk"^^tt:url },
C:   { query="elon", title="Elon University / Information Technology / University Email", description="Elon University is a mid-sized private university in North Carolina that is nationally recognized as the premier student-centered environment for experiential learning.", link="https://www.elon.edu/u/fa/technology/university-email/"^^tt:url }
C: ]];
A: I found Elon University / Home.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: who is bezos?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="bezos");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
C: @com.bing.web_search(query="iss")
C: #[results=[
C:   { query="iss", title="International Space Station | NASA", description="Get the latest news, images, videos and more from humanity's home in orbit -- the International Space Station.", link="https://www.nasa.gov/mission_pages/station/main/index.html"^^tt:url },
C:   { query="iss", title="International Space Station - Wikipedia", description="The International Space Station (ISS) is a modular space station (habitable artificial satellite) in low Earth orbit.It is a multinational collaborative project involving five participating space agencies: NASA (United States), Roscosmos (Russia), JAXA (Japan), ESA (Europe), and CSA (Canada). The ownership and use of the space station is established by intergovernmental treaties and agreements.", link="https://en.wikipedia.org/wiki/International_Space_Station"^^tt:url },
C:   { query="iss", title="Spot The Station | NASA", description="Watch the International Space Station pass overhead from several thousand worldwide locations. It is the third brightest object in the sky and easy to spot if you know when to look up. Visible to the naked eye, it looks like a fast-moving plane only much higher and traveling thousands of miles an hour faster!", link="https://spotthestation.nasa.gov/"^^tt:url },
C:   { query="iss", title="Live Space Station Tracking Map | Spot The Station | NASA", description="Live Space Station Tracking Map. The tracker shows where the Space Station is right now and its path 90 minutes ago (-1.5 hr) and 90 minutes ahead (+1.5 hr). The dark overlay indicates where it is nighttime in the world. ISS Tracker. ERROR: Cannot load images.", link="https://spotthestation.nasa.gov/tracking_map.cfm"^^tt:url },
C:   { query="iss", title="Home | ISS", description="ISS NEWS ISS Announces Acquisition of Genesys Research Genesys is a leading provider of product intelligence to the asset management and insurance communities, delivering to leading asset managers and insurance providers a combination of data and research solutions focused on the subadvisory and platform markets.", link="https://www.issgovernance.com/"^^tt:url }
C: ]];
C: @com.bing.web_search(query="elon")
C: #[results=[
C:   { query="elon", title="Elon University / Home", description="Elon is one of only 18 private universities in the nation with an accredited communications school. More than 1,200 students pursue undergraduate majors in journalism, strategic communications, cinema and television arts, communication design, media analytics, and sport management, along with a master’s program in interactive media. Learn More.", link="https://www.elon.edu/"^^tt:url },
C:   { query="elon", title="Elon Musk - Wikipedia", description="Elon Reeve Musk was born on June 28, 1971, in Pretoria, South Africa. His mother is Maye Musk (née Haldeman), a model and dietitian born in Saskatchewan, Canada, but raised in South Africa. His father is Errol Musk, a South African electromechanical engineer, pilot, sailor, consultant, and property developer.", link="https://en.wikipedia.org/wiki/Elon_Musk"^^tt:url },
C:   { query="elon", title="Elon Musk (@elonmusk) | Twitter", description="The latest Tweets from Elon Musk (@elonmusk). Technoking of Tesla, Imperator of Mars ?", link="https://twitter.com/elonmusk"^^tt:url },
C:   { query="elon", title="Elon Musk (@ElonMusk) | Twitter", description="We would like to show you a description here but the site won’t allow us.", link="https://twitter.com/@elonmusk"^^tt:url },
C:   { query="elon", title="Elon University / Information Technology / University Email", description="Elon University is a mid-sized private university in North Carolina that is nationally recognized as the premier student-centered environment for experiential learning.", link="https://www.elon.edu/u/fa/technology/university-email/"^^tt:url }
C: ]];
C: @com.bing.web_search(query="bezos")
C: #[results=[
C:   { query="bezos", title="Jeff Bezos - Wikipedia", description="Jeffrey Preston Bezos (/ ˈ b eɪ z oʊ s / BAY-zohss; né Jorgensen; born January 12, 1964) is an American business magnate, media proprietor, and investor.Bezos is the founder and executive chairman of Amazon, having previously served as chairman, president and CEO of the company. With a net worth of more than $200 billion as of June 2021, he is the richest person in the world according to ...", link="https://en.wikipedia.org/wiki/Jeff_Bezos"^^tt:url },
C:   { query="bezos", title="Jeff Bezos - Wife, Kids & Amazon - Biography", description="Bezos was born on January 12, 1964, in Albuquerque, New Mexico, to a teenage mother, Jacklyn Gise Jorgensen, and his biological father, Ted Jorgensen. The Jorgensens were married less than a year ...", link="https://www.biography.com/business-figure/jeff-bezos"^^tt:url },
C:   { query="bezos", title="Jeff Bezos - Forbes", description="Jeff Bezos founded e-commerce giant Amazon in 1994 out of his garage in Seattle. He stepped down as CEO to become executive chairman on July 5, 2021. Amazon thrived during the pandemic; revenues ...", link="https://www.forbes.com/profile/jeff-bezos/"^^tt:url },
C:   { query="bezos", title="Jeff Bezos steps down as Amazon CEO as retailer starts new ...", description="Bezos founded Amazon as an online bookstore and built it into a shopping and entertainment empire that is the second-largest private employer in the U.S., behind Walmart. Amazon, which is buying ...", link="https://www.cbsnews.com/news/jeff-bezos-amazon-ceo-steps-down/"^^tt:url },
C:   { query="bezos", title="Jeff Bezos | Biography, Amazon, & Facts | Britannica", description="Jeff Bezos, American entrepreneur who played a key role in the growth of e-commerce as the founder and chief executive officer of the online retailer Amazon.com. Under his guidance, Amazon became the largest retailer on the World Wide Web and the model for Internet sales.", link="https://www.britannica.com/biography/Jeff-Bezos"^^tt:url }
C: ]];
A: I found Jeff Bezos - Wikipedia.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: how did bezos dies?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="bezos dies");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku"))
C: #[results=[
C:   { temperature=21.5C, wind_speed=5.9mps, humidity=77.6, cloudiness=96.7, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=4;content_type=image/png"^^tt:picture, location=new Location(60.46322415, 22.302891572000966, "Nummi, Turku") }
C: ]];
C: @com.bing.web_search(query="iss")
C: #[results=[
C:   { query="iss", title="International Space Station | NASA", description="Get the latest news, images, videos and more from humanity's home in orbit -- the International Space Station.", link="https://www.nasa.gov/mission_pages/station/main/index.html"^^tt:url },
C:   { query="iss", title="International Space Station - Wikipedia", description="The International Space Station (ISS) is a modular space station (habitable artificial satellite) in low Earth orbit.It is a multinational collaborative project involving five participating space agencies: NASA (United States), Roscosmos (Russia), JAXA (Japan), ESA (Europe), and CSA (Canada). The ownership and use of the space station is established by intergovernmental treaties and agreements.", link="https://en.wikipedia.org/wiki/International_Space_Station"^^tt:url },
C:   { query="iss", title="Spot The Station | NASA", description="Watch the International Space Station pass overhead from several thousand worldwide locations. It is the third brightest object in the sky and easy to spot if you know when to look up. Visible to the naked eye, it looks like a fast-moving plane only much higher and traveling thousands of miles an hour faster!", link="https://spotthestation.nasa.gov/"^^tt:url },
C:   { query="iss", title="Live Space Station Tracking Map | Spot The Station | NASA", description="Live Space Station Tracking Map. The tracker shows where the Space Station is right now and its path 90 minutes ago (-1.5 hr) and 90 minutes ahead (+1.5 hr). The dark overlay indicates where it is nighttime in the world. ISS Tracker. ERROR: Cannot load images.", link="https://spotthestation.nasa.gov/tracking_map.cfm"^^tt:url },
C:   { query="iss", title="Home | ISS", description="ISS NEWS ISS Announces Acquisition of Genesys Research Genesys is a leading provider of product intelligence to the asset management and insurance communities, delivering to leading asset managers and insurance providers a combination of data and research solutions focused on the subadvisory and platform markets.", link="https://www.issgovernance.com/"^^tt:url }
C: ]];
C: @com.bing.web_search(query="elon")
C: #[results=[
C:   { query="elon", title="Elon University / Home", description="Elon is one of only 18 private universities in the nation with an accredited communications school. More than 1,200 students pursue undergraduate majors in journalism, strategic communications, cinema and television arts, communication design, media analytics, and sport management, along with a master’s program in interactive media. Learn More.", link="https://www.elon.edu/"^^tt:url },
C:   { query="elon", title="Elon Musk - Wikipedia", description="Elon Reeve Musk was born on June 28, 1971, in Pretoria, South Africa. His mother is Maye Musk (née Haldeman), a model and dietitian born in Saskatchewan, Canada, but raised in South Africa. His father is Errol Musk, a South African electromechanical engineer, pilot, sailor, consultant, and property developer.", link="https://en.wikipedia.org/wiki/Elon_Musk"^^tt:url },
C:   { query="elon", title="Elon Musk (@elonmusk) | Twitter", description="The latest Tweets from Elon Musk (@elonmusk). Technoking of Tesla, Imperator of Mars ?", link="https://twitter.com/elonmusk"^^tt:url },
C:   { query="elon", title="Elon Musk (@ElonMusk) | Twitter", description="We would like to show you a description here but the site won’t allow us.", link="https://twitter.com/@elonmusk"^^tt:url },
C:   { query="elon", title="Elon University / Information Technology / University Email", description="Elon University is a mid-sized private university in North Carolina that is nationally recognized as the premier student-centered environment for experiential learning.", link="https://www.elon.edu/u/fa/technology/university-email/"^^tt:url }
C: ]];
C: @com.bing.web_search(query="bezos")
C: #[results=[
C:   { query="bezos", title="Jeff Bezos - Wikipedia", description="Jeffrey Preston Bezos (/ ˈ b eɪ z oʊ s / BAY-zohss; né Jorgensen; born January 12, 1964) is an American business magnate, media proprietor, and investor.Bezos is the founder and executive chairman of Amazon, having previously served as chairman, president and CEO of the company. With a net worth of more than $200 billion as of June 2021, he is the richest person in the world according to ...", link="https://en.wikipedia.org/wiki/Jeff_Bezos"^^tt:url },
C:   { query="bezos", title="Jeff Bezos - Wife, Kids & Amazon - Biography", description="Bezos was born on January 12, 1964, in Albuquerque, New Mexico, to a teenage mother, Jacklyn Gise Jorgensen, and his biological father, Ted Jorgensen. The Jorgensens were married less than a year ...", link="https://www.biography.com/business-figure/jeff-bezos"^^tt:url },
C:   { query="bezos", title="Jeff Bezos - Forbes", description="Jeff Bezos founded e-commerce giant Amazon in 1994 out of his garage in Seattle. He stepped down as CEO to become executive chairman on July 5, 2021. Amazon thrived during the pandemic; revenues ...", link="https://www.forbes.com/profile/jeff-bezos/"^^tt:url },
C:   { query="bezos", title="Jeff Bezos steps down as Amazon CEO as retailer starts new ...", description="Bezos founded Amazon as an online bookstore and built it into a shopping and entertainment empire that is the second-largest private employer in the U.S., behind Walmart. Amazon, which is buying ...", link="https://www.cbsnews.com/news/jeff-bezos-amazon-ceo-steps-down/"^^tt:url },
C:   { query="bezos", title="Jeff Bezos | Biography, Amazon, & Facts | Britannica", description="Jeff Bezos, American entrepreneur who played a key role in the growth of e-commerce as the founder and chief executive officer of the online retailer Amazon.com. Under his guidance, Amazon became the largest retailer on the World Wide Web and the model for Internet sales.", link="https://www.britannica.com/biography/Jeff-Bezos"^^tt:url }
C: ]];
C: @com.bing.web_search(query="bezos dies")
C: #[results=[
C:   { query="bezos dies", title="Jeff Bezos Death ? | Is Jeff Bezos Dead ? - What Happened ...", description="– Dies ? – There are unconfirmed rumors spreading everywhere through social media July 8, 2020, that CEO of Amazon, Jeff Bezos has died at the age of 56. There were no reliable source to confirm these rumor neither there was any cause of death said.", link="https://deaddeath.com/jeff-bezos-death-is-jeff-bezos-dead-what-happened-to-jeff-bezos-how-did-amazon-ceo-died-what-is-cause-of-death/"^^tt:url },
C:   { query="bezos dies", title="Jeff Bezos had a brush with death in a helicopter while ...", description="Bezos was visiting a canyon near Cathedral Mountain, which is located in West Texas roughly 50 miles from the Mexico border. He wanted to buy a huge, secluded desert ranch to test-fire rocket ...", link="https://www.businessinsider.com/jeff-bezos-blue-origin-helicopter-crash-2018-3"^^tt:url },
C:   { query="bezos dies", title="Is Jeff Bezos dead? #RipJeffBezos trends over claims 'he ...", description="Is Jeff Bezos dead? #RipJeffBezos trends over claims 'he drowned in Amazon river', Internet debunks viral hoax. It seems a few bored internet users decided to trend #RIPJeffbezos, similar to the previous #rRIPEllen trend, which went viral but was eventually established as a hoax that spread like wildfire", link="https://meaww.com/jeff-bezos-dead-rip-jeff-bezos-trends-internet-claims-drown-amazon-river-viral-hoax-debunk"^^tt:url },
C:   { query="bezos dies", title="Jeff Bezos Just Predicted When Amazon Will Die (and ...", description="In a meeting with employees last week, reported by CNBC, Bezos offered a healthy tinge of realism, as his company expands in the face of substantial and increasing opposition. Indeed, he predicted ...", link="https://www.inc.com/chris-matyszczyk/jeff-bezos-just-predicted-when-amazon-will-die-and-revealed-1-product-that-might-make-it-last-longer.html"^^tt:url },
C:   { query="bezos dies", title="Jeff Bezos refused to meet his dying biological father - Blind", description="Jeff Bezos refused to meet his dying biological father. Ted Jorgensen discovered his son was Jeff Bezos when a biographer writing a book about Jeff Bezos contacted him. He was about to die and wanted to see his son one last time. He died and Jeff's only comment was, \"I've never met him...the only time I ever think about it is when the doctor ...", link="https://www.teamblind.com/post/Jeff-Bezos-refused-to-meet-his-dying-biological-father-6b1HK2Tx"^^tt:url }
C: ]];
A: I found Jeff Bezos Death ? | Is Jeff Bezos Dead ? - What Happened ..
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: how did FBI cause 9/11?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="fbi cause 9 / 11");
====
# recording/6e82fa4b10204f055f5d95df0b3af55a
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Where are you now?
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me ajoke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="uPu4MRZLmrc"^^com.icanhazdadjoke:id, text="Want to hear a chimney joke? Got stacks of em! First one's on the house" }
C: ]];
A: Want to hear a chimney joke? Got stacks of em! First one's on the house.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/e7c7ace5d05fb10bcfaddc735d6c24ff
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/69ce5ef4b7f91376fd84b98fcf3f3de0
U: how are you?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great. Thanks for asking. How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: can you run a function?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_configure_skill);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_configure_skill)
C: #[results=[
C:   { reply="You can enable new skills to expand the set of commands that I understand. Click on Configure New Skills in the My Genie page to do so.", question=enum how_to_configure_skill }
C: ]];
A: You can enable new skills to expand the set of commands that I understand. Click on Configure New Skills in the My Genie page to do so.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: open the door for me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# recording/901d03214273942e12f2bea7569775b0
U: what's the time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(18, 10, 56) }
C: ]];
A: Right now, it's 11:10 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
====
# recording/ab5d94a4f1d9307d866ec76df4bffec0
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="BQnyImOCIBd"^^com.icanhazdadjoke:id, text="How do hens stay fit? They always egg-cercise!" }
C: ]];
A: How do hens stay fit? They always egg-cercise!
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/b15608377d16d13c272dfc98c5da6463
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/f7d0c8dd113d566adddd2a44e3304227
U: what time is it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(18, 9, 57) }
C: ]];
A: Right now, it's 11:09 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: show me a cat picture
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(18, 9, 57) }
C: ]];
C: @com.thecatapi.cat()
C: #[results=[
C:   { id="bX5VJKzVM"^^com.thecatapi:cat, picture_url="https://s3.us-west-2.amazonaws.com/cdn2.thecatapi.com/images/bX5VJKzVM.jpg"^^tt:picture, link="http://thecatapi.com/?id=bX5VJKzVM"^^tt:url }
C: ]];
A: Here is a cat picture.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: show me a dog picture
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thedogapi.dog();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(18, 9, 57) }
C: ]];
C: @com.thecatapi.cat()
C: #[results=[
C:   { id="bX5VJKzVM"^^com.thecatapi:cat, picture_url="https://s3.us-west-2.amazonaws.com/cdn2.thecatapi.com/images/bX5VJKzVM.jpg"^^tt:picture, link="http://thecatapi.com/?id=bX5VJKzVM"^^tt:url }
C: ]];
C: @com.thedogapi.dog()
C: #[results=[
C:   { id="ZRQ0TYzz6"^^com.thedogapi:dog("Tibetan Terrier"), picture_url="https://cdn2.thedogapi.com/images/ZRQ0TYzz6.jpg"^^tt:picture }
C: ]];
A: Did you mean Get dog pictures?
A: Here is a picture of a Tibetan Terrier.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what's the latest song by taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")))[1];
====
# recording/a10f2a3037c2cd2f35ebf4784bc28393
U: hi there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/ae5d0cc31faf431b391116995ea6a54f
U: Tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="rHBQuXLR7h"^^com.icanhazdadjoke:id, text="Why did the cookie cry?\r\nBecause his mother was a wafer so long" }
C: ]];
A: Why did the cookie cry? Because his mother was a wafer so long.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/6420c03f75c9194e50d9c0a8780a6f3c
U: hey, you there?
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/e42fb3a7ebc533a2300d22ad86f5696a
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Where are you now?
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="lyPZgVn3Le"^^com.icanhazdadjoke:id, text="What did the ocean say to the shore? Nothing, it just waved." }
C: ]];
A: What did the ocean say to the shore? Nothing, it just waved.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/0e3849c646aa29e5b3a426f05c8908e1
U: play spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add song to rock
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify.add_song_to_playlist(playlist="rock", song=id);
====
# recording/f812a986565de71885b0ce06b3e61502
U: play taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/5f481bba0cc2a0bd79db8446255ffd80
U: can you tell me about soccer too?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.goal_smart.fixtures();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
C: @com.goal_smart.fixtures();
A: Did you mean Get soccer fixtures?
A: What team do you want out check out?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(team_id);
AT: @com.goal_smart.fixtures();
U: chelsea
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.goal_smart.fixtures(team_id=null^^com.goal_smart:soccer_team("chelsea"));
====
# recording/0fd2bcf6fd61643dcf0dcc7632ac3c1d
U: play spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/0be9132121c6ac06cabf7617a080e7b9
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/59bfa4f16693184528dd3e229e314ad2
U: what's the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=27.9C, wind_speed=2.3mps, humidity=36.8, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 82.2 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the forecast for next week?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=$end_of(week));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=27.9C, wind_speed=2.3mps, humidity=36.8, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.6C, wind_speed=0.9mps, humidity=76.1, cloudiness=32, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It will be cloudy tomorrow at 7:00 AM in Palo Alto, California and the temperature will be 60.1 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the forecast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=27.9C, wind_speed=2.3mps, humidity=36.8, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.6C, wind_speed=0.9mps, humidity=76.1, cloudiness=32, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.6C, wind_speed=0.9mps, humidity=76.1, cloudiness=32, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Did you mean get the weather forecast?
A: It will be cloudy tomorrow at 7:00 AM in Palo Alto, California and the temperature will be 60.1 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the forecast for this weekend
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=new Date(enum saturday));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=27.9C, wind_speed=2.3mps, humidity=36.8, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.6C, wind_speed=0.9mps, humidity=76.1, cloudiness=32, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.6C, wind_speed=0.9mps, humidity=76.1, cloudiness=32, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=new Date(enum saturday), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=21.6C, wind_speed=2.8mps, humidity=67.8, cloudiness=44.5, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-08-07T18:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Did you mean get the weather on start of day on Saturday?
A: It will be cloudy next Saturday at 11:00 AM in Palo Alto, California and the temperature will be 70.9 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
====
# recording/b38326ed6d93fe3d8b63325b2199ff0d
U: add this song to playlist z
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="z", song=id);
====
# recording/2519187c18544c754d76fb1b91544558
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/a9d2d62afc5f9526d74a8e1563c7f434
U: what's the weather next week in palo alto?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location("palo alto"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: Did you mean Get the the weather on the end of this week in palo alto?
A: It will be cloudy on next Sunday at 5:00 AM in Palo Alto, California and the temperature will be 58.6 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's my name?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
A: Your name is tony.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's your name
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
A: I'm Genie, an open-source virtual assistant created at Stanford.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: where am i
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
A: Sorry, I cannot access your location in this version of genie.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: i am in palo alto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location("palo alto"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current }
C: ]];
A: I set your current location to Palo Alto, California.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: where are you?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
A: My creators are mostly at Stanford. I'm an open-source assistant in the cloud.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: where am i?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
A: Sorry, I cannot access your location in this version of genie.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: what's the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=14.8C, wind_speed=1.2mps, humidity=86.1, cloudiness=24.2, fog=0.8, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T12:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
C: #[results=[
C:   { reply="My creators are mostly at Stanford. I'm an open-source assistant in the cloud.", question=enum about_almond_location }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=31.3C, wind_speed=2.2mps, humidity=32.3, cloudiness=42.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 88.3 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/d893ccb67346625cf250ec62a974e620
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/56ca29accadadcd1e19de4c9be2a7813
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/163b76dc0e8096b67b7e89871d501b91
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b68c8660d885018992451f92391b631c
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: i like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added STAY (with Justin Bieber) to your favorite.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/680018ce835fe24f5308f14a4b665506
U: play a good podcast on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0F0bomQrdLbPjz4nxRVjiI"^^org.thingpedia.media-source:playable("Ultimate Mock Draft 2021 - Pro Basketball Draft Simulation"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="invalid id"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6f07bdd793e0834f419e59fef3b93839
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/86e510936beed3b1afae9bf319dcf005
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0F0bomQrdLbPjz4nxRVjiI"^^org.thingpedia.media-source:playable("Ultimate Mock Draft 2021 - Pro Basketball Draft Simulation"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="invalid id"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/082da9896b7ea27e3ac46f7b19efbd69
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/fca3c63814637c135094754595c2f237
U: play the cure
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/a774e3e34bc609ed8607c25e9950051c
U: play madonna
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("madonna")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:6tbjWDEIzxoDsBA1FuhfPW"^^org.thingpedia.media-source:artist("Madonna")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:22sLuJYcvZOSoLLRYev1s5"^^org.thingpedia.media-source:playable("Material Girl"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1z3ugFmUKoCzGsI6jdY4Ci"^^org.thingpedia.media-source:playable("Like 1 Prayer"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3850dYVgOFIXJh5U4BFEWH"^^org.thingpedia.media-source:playable("Hung Up"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2n5y6cRV8vr6mJcuNCu2ce"^^org.thingpedia.media-source:playable("Dress You Up / Into The Groove - Live"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7uPaXeJ7a1E8OUzXzgfnNR"^^org.thingpedia.media-source:playable("Express Yourself - MDNA World Tour / Live 2012"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1ZPlNanZsJSPK5h9YZZFbZ"^^org.thingpedia.media-source:playable("Like 1 Virgin"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1oHClQEgDmmbcEx12Kc5nZ"^^org.thingpedia.media-source:playable("4 Minutes (feat. Justin Timberlake & Timbaland)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2m0M7YqCy4lXfedh18qd8N"^^org.thingpedia.media-source:playable("Into the Groove"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27QvYgBk0CHOVHthWnkuWt"^^org.thingpedia.media-source:playable("Vogue"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6r8k1vznHrzlEKYxL4dZEe"^^org.thingpedia.media-source:playable("La Isla Bonita"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=34];
A: I played music by Madonna on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/039c95a9ea87ab7e7b8d1f055160d4fa
U: time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(19, 58, 10) }
C: ]];
A: Right now, it's 12:58 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: news?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
====
# recording/914869702b865d3f0a048d2badf80036
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play artist the cure
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
A: Did you mean get music by cure and then play the id on Spotify?
A: I played music by The Cure on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/bacf90e789f94dc838c05828bb88671c
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/80c7c5854ebb7d9964311ca86222bb3c
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/8ac3856f063252eb39cb96fc22226bb4
U: play some tsol
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("tsol")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:5XwDirrHPY6KCzScs3rKGr"^^org.thingpedia.media-source:artist("Tila Tsoli")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3mT3nS7uqcSrw7rPvHs8oq"^^org.thingpedia.media-source:playable("Bimbo Doll"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Bimbo Doll on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some dead kennedy's
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("dead kennedy 's")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/5921ce13377017c5c952d82f1cbd3b70
U: pause music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/3335c5d678fdfe4a8577df4602c4462a
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/b70ee66c558d96d33455282ad8e472ba
U: play the most popular song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(popularity desc of @org.thingpedia.media-source.song())[1] => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(popularity desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played STAY (with Justin Bieber) on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/1f796479b17cbb0772301e96b3eb6744
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/bf985db56108dbe6b20308316f7e0239
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play archair expert
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "archair expert" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "archair expert")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6cprB7E9cUJNu5yaLWw85G"^^org.thingpedia.media-source:playable("Armchair Expert"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean get music that has name archair expert and then play the id on Spotify?
A: I played Armchair Expert on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play armchair podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "armchair" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "archair expert")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6cprB7E9cUJNu5yaLWw85G"^^org.thingpedia.media-source:playable("Armchair Expert"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "armchair")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:6kAsbP8pxwaU2kPibKTuHE"^^org.thingpedia.media-source:playable("Armchair Expert with Dax Shepard"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean get podcast that has name armchair and then play the id on Spotify?
A: I played Armchair Expert with Dax Shepard on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "archair expert")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6cprB7E9cUJNu5yaLWw85G"^^org.thingpedia.media-source:playable("Armchair Expert"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "armchair")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:6kAsbP8pxwaU2kPibKTuHE"^^org.thingpedia.media-source:playable("Armchair Expert with Dax Shepard"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what is the capital of malasyia
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="capital of malasyia");
====
# recording/0a24d6bf869129829e74956c8baa3611
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/59341f86458cb5a548aad557e47b1eb7
U: create new playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.create_playlist();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
A: What do you want to name your playlist?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(name);
AT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
U: secondhand
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="secondhand");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="secondhand")
C: #[results=[
C:   { name="secondhand", __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I created a new playlist for you named secondhand.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play secondhand serenade
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "secondhand serenade" => @org.thingpedia.media-player.play(playable=id);
====
# recording/a0d66813c9f8d20acb93adb3cbc0ff86
U: what time is it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: ontimer(date=[new Date("2021-09-01T15:51:00.000Z")]) => @org.thingpedia.builtin.thingengine.builtin.say(message="hello world")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(22, 52, 57) }
C: ]];
A: Right now, it's 3:52 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather in san francisco?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("san francisco"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: ontimer(date=[new Date("2021-09-01T15:51:00.000Z")]) => @org.thingpedia.builtin.thingengine.builtin.say(message="hello world")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(22, 52, 57) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.7790262, -122.419906, "San Francisco, California"))
C: #[results=[
C:   { temperature=17C, wind_speed=8.1mps, humidity=68.5, cloudiness=55.5, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.7790262, -122.419906, "San Francisco, California") }
C: ]];
A: It is cloudy today in San Francisco, California and the temperature is 62.6 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather there tomorrow?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(location=new Location(37.7790262, -122.419906, "San Francisco, California"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: ontimer(date=[new Date("2021-09-01T15:51:00.000Z")]) => @org.thingpedia.builtin.thingengine.builtin.say(message="hello world")
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(22, 52, 57) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.7790262, -122.419906, "San Francisco, California"))
C: #[results=[
C:   { temperature=17C, wind_speed=8.1mps, humidity=68.5, cloudiness=55.5, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.7790262, -122.419906, "San Francisco, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.7790262, -122.419906, "San Francisco, California"))
C: #[results=[
C:   { temperature=14.4C, wind_speed=5.3mps, humidity=85.3, cloudiness=56.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, date=new Date("2021-09-02T14:00:00.000Z"), location=new Location(37.7790262, -122.419906, "San Francisco, California") }
C: ]];
A: Did you mean get the weather forecast in San Francisco, California?
A: It will be cloudy tomorrow at 7:00 AM in San Francisco, California and the temperature will be 57.9 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's a good restaurant in san francisco mission district
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter geo == new Location("san francisco mission district");
====
# recording/546c213bb1bd8e1749841930d2c8cf16
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b6350cdc69138e1a61893f1bead0e2af
U: add this song to my spotify library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/3d2f0caaac065a28d3bd0a2f43241bf6
U: play baba riley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "baba riley" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Baba O'Riley on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/4894d95d420e9a1fa51aa9c2f425fb6a
U: play music by artist the cure
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
A: I played music by The Cure on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=27.9C, wind_speed=2.3mps, humidity=36.8, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 82.2 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: and the forecast for next week
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(date=$end_of(week));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=36];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=27.9C, wind_speed=2.3mps, humidity=36.8, cloudiness=1.6, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(week), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.6C, wind_speed=0.9mps, humidity=76.1, cloudiness=32, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-01T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It will be cloudy tomorrow at 7:00 AM in Palo Alto, California and the temperature will be 60.1 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5fd4b686facffeaa366fa55972817bea
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/de3aba27dd5a768b8ed2374acfaf4e58
U: ask yelp good chinese
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("chinese"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese"))
C: #[results=[
C:   { id="uVploy81jeEvlvPTA6cgjw"^^com.yelp:restaurant("Mandarin Roots"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/AnLZUIDEHJsFcEMyzoggzQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/mandarin-roots-palo-alto-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "tapasmallplates"^^com.yelp:restaurant_cuisine("Tapas/Small Plates")], price=enum moderate, rating=4, review_count=555, geo=new Location(37.42028, -122.13601, "3345 El Camino Real, Palo Alto, CA 94306"), phone="+16505658868"^^tt:phone_number },
C:   { id="w17EBwOBXKaYIiGf7LTD9Q"^^com.yelp:restaurant("Jing Jing Chinese Gourmet"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/fsjBluohoq0fQYUAN8fD4g/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/jing-jing-chinese-gourmet-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=3.5, review_count=403, geo=new Location(37.44514, -122.16306, "443 Emerson St, Palo Alto, CA 94301"), phone="+16503286885"^^tt:phone_number },
C:   { id="ZimdCe2xCAOOZjt1aQAMvg"^^com.yelp:restaurant("Chef Chu's"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/8Ne4RN6pc5NN-w2PRx2KMA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/chef-chus-los-altos?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "seafood"^^com.yelp:restaurant_cuisine("Seafood")], price=enum moderate, rating=4, review_count=1864, geo=new Location(37.4006, -122.11367, "1067 N San Antonio Rd, Los Altos, CA 94022"), phone="+16509482696"^^tt:phone_number },
C:   { id="aLXs35royGdxEtfRmesaTw"^^com.yelp:restaurant("Green Elephant Gourmet"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/HUD3IHMYSQMUPHv7pTN2nA/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/green-elephant-gourmet-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "burmese"^^com.yelp:restaurant_cuisine("Burmese")], price=enum moderate, rating=3.5, review_count=286, geo=new Location(37.4187397433899, -122.109109532186, "3950 Middlefield Rd, Palo Alto, CA 94303"), phone="+16504947391"^^tt:phone_number },
C:   { id="LjI8BVHVg5vNEHYuRyxtHw"^^com.yelp:restaurant("Peking Duck"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/0kzgVrhDcpPDAaeuef1y8g/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/peking-duck-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=3, review_count=352, geo=new Location(37.428471817387894, -122.14277685914219, "151 S California Ave, Palo Alto, CA 94306"), phone="+16503219388"^^tt:phone_number },
C:   { id="WWyaK9oskNOpjCsO6MA7Pw"^^com.yelp:restaurant("P.F. Chang's"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/SR0mlHWyUwVBqxBBbeGRaw/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/p-f-changs-palo-alto-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "gluten_free"^^com.yelp:restaurant_cuisine("Gluten-Free")], price=enum moderate, rating=2.5, review_count=777, geo=new Location(37.4436714574102, -122.168239921338, "900 Stanford Shopping Ctr, Bldg W, Palo Alto, CA 94304"), phone="+16503301782"^^tt:phone_number },
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=499, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number },
C:   { id="cm8oHti0SIPPqR8PcmcSvA"^^com.yelp:restaurant("Garden Fresh"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/EnKogtsi9rjeTVAbGjTY7Q/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/garden-fresh-mountain-view-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "noodles"^^com.yelp:restaurant_cuisine("Noodles"), "soup"^^com.yelp:restaurant_cuisine("Soup")], price=enum moderate, rating=4, review_count=1333, geo=new Location(37.387904, -122.089053, "1245 W El Camino Real, Mountain View, CA 94040"), phone="+16502541688"^^tt:phone_number },
C:   { id="zg83ulOQw1m18kLoNHcXUA"^^com.yelp:restaurant("Phil's Kitchen"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/rpCFoxuH71QLwDoveRY9Hg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/phils-kitchen-menlo-park?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["chinese"^^com.yelp:restaurant_cuisine("Chinese"), "hawaiian"^^com.yelp:restaurant_cuisine("Hawaiian"), "bbq"^^com.yelp:restaurant_cuisine("Barbeque")], price=enum cheap, rating=4, review_count=510, geo=new Location(37.4536749590389, -122.184342294931, "625 Oak Grove Ave, Unit B, Menlo Park, CA 94025"), phone="+16505614296"^^tt:phone_number },
C:   { id="IccyNXafP876EY6vkHetbg"^^com.yelp:restaurant("MP Mongolian BBQ"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/MBjcL710bbS2OLNOjvlwvQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/mp-mongolian-bbq-menlo-park?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["buffets"^^com.yelp:restaurant_cuisine("Buffets"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4, review_count=308, geo=new Location(37.451705, -122.178848, "700 El Camino Real, Ste 170, Menlo Park, CA 94025"), phone="+16508531118"^^tt:phone_number }
C: ]]
C: #[count=34];
A: I see Mandarin Roots, Jing Jing Chinese Gourmet, and Chef Chu's. They're moderate restaurants with Chinese food.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: smartnews
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
====
# recording/4482295ba8b48bf198df79341733fe58
U: play don't stop believing
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "don't stop believing" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "don't stop believing")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:4bHsxqR3GMrXTxEPLuK5ue"^^org.thingpedia.media-source:playable("Don't Stop Believin'"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Don't Stop Believin' on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: create playlist oval
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.create_playlist(name="oval");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "don't stop believing")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:4bHsxqR3GMrXTxEPLuK5ue"^^org.thingpedia.media-source:playable("Don't Stop Believin'"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="oval")
C: #[results=[
C:   { name="oval", __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I created a new playlist named oval.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add song to playlist oval
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="oval", song=id);
====
# recording/2f6d6fb318ad713b79b4d14b9d11e6a2
U: pause music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @com.spotify.add_item_to_library(playable=id);
====
# recording/7221dc45f037087f578205a9648c8ed9
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add this song to my library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/cbc00db36f2c9f377efa926556fa20e1
U: like song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/b122e9f8ffd82b81d399ebfe43e6344a
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/dec64aeb440113f1794b22a29fba40a2
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
====
# recording/12e23096f3aa7bab9827944c05e1e73c
U: play chopin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("chopin")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/840ddf3c20683989ccd1eb686b29567d
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5a5ddd653f49cc0fcf5ad3724774fc13
U: play playlist cyn piano
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "cyn piano" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "cyn piano")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:7yrp8Jmaj5pfzLYXPEhb5D"^^org.thingpedia.media-source:playable("Cyn Piano"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Cyn Piano on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play playlist this is nine inch nails
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "this is 9 inch nails" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "cyn piano")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:7yrp8Jmaj5pfzLYXPEhb5D"^^org.thingpedia.media-source:playable("Cyn Piano"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "this is 9 inch nails")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Did you mean get playlist that has name this is 9 inch nails and then play the id on Spotify?
A: Sorry, there are no playlist matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b60f8e1fa75e984f449d8f444fd98738
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/80421acf49fcbe6cae8830ffdbb1c1aa
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/6ca83d2cdbedc5808b3c89729919ae81
U: play five songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song()[1 : 5] => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song()[1 : 5] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6PQ88X9TkUIAUIZJHW2upE"^^org.thingpedia.media-source:playable("Bad Habits"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2JPLbjOn0wPCngEot2STUS"^^org.thingpedia.media-source:playable("Yonaguni"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the first 5 songs on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/2f7925b0958d14964a54947c01d3dcb4
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: i like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/fe19884cc3dae50060be994990f78c86
U: play music by composer elton john
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("elton john")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3PhoLpVuITZKcymswpck5b"^^org.thingpedia.media-source:artist("Elton John")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3gdewACMIVMEWVbyb8O9sY"^^org.thingpedia.media-source:playable("Rocket Man (I Think It's Going To Be 1 Long, Long Time)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2TVxnKdb3tqe1nhQWwwZCO"^^org.thingpedia.media-source:playable("Tiny Dancer"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1jDJFeK9x3OZboIAHsY9k2"^^org.thingpedia.media-source:playable("I'm Still Standing"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5Wj1rJnCLpMHdLaxsFtJLs"^^org.thingpedia.media-source:playable("Bennie And The Jets - Remastered 2014"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:38zsOOcu31XbbYj9BIPUF1"^^org.thingpedia.media-source:playable("Your Song"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7HW5WIw7ZgZORCzUxv5gW5"^^org.thingpedia.media-source:playable("Don't Go Breaking My Heart"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6WCeFNVAXUtNczb7lqLiZU"^^org.thingpedia.media-source:playable("Crocodile Rock"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4IRHwIZHzlHT1FQpRa5RdE"^^org.thingpedia.media-source:playable("Goodbye Yellow Brick Road - Remastered 2014"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:23l1kVpqMVREiwU1YAlcr4"^^org.thingpedia.media-source:playable("I Guess That's Why They Call It The Blues"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:12yHvSYFXI7PGzNecUvIDu"^^org.thingpedia.media-source:playable("Saturday Night’s Alright (For Fighting) - Remastered 2014"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=43];
A: I played music by Elton John on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add to my playlist oval
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="oval", song=id);
====
# recording/97a67e4c84147110ecb9b71fdb8bcfb5
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5e0260f6462b5e10d4934b0df43b1eba
U: play baba o'riley by the who
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("who")) && id =~ "baba o 'riley" => @org.thingpedia.media-player.play(playable=id);
====
# recording/c8827b6892af7d63a9fe0a2f9d3d450a
U: like this song on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/e376921e0221bc3dfea90dfc0c622436
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/fb6a768d27a4d13a8d18fc8f7c05967e
U: news
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[]]
C: #[error=enum unavailable];
A: Sorry, the smartnews service is unavailable. Please try again later.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: what's your name?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[]]
C: #[error=enum unavailable];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
A: I'm Genie, an open-source virtual assistant created at Stanford.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's my name?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[]]
C: #[error=enum unavailable];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
A: Your name is tony.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: where do i live?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[]]
C: #[error=enum unavailable];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
C: #[results=[
C:   { reply="I'm Genie, an open-source virtual assistant created at Stanford.", question=enum about_almond_identity }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_name()
C: #[results=[
C:   { name="tony" }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_gps()
C: #[results=[]]
C: #[error=enum unsupported_platform];
A: Did you mean Get the my current location?
A: Sorry, I cannot access your location in this version of genie.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
====
# recording/d2e7fabc96c48059db3f609a61870f99
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3535169b1cd8f4c07af668b2997aa859
U: what time is it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 25, 51) }
C: ]];
A: Right now, it's 6:25 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 25, 51) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=28C, wind_speed=2.2mps, humidity=33.2, cloudiness=75.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is cloudy today in Palo Alto, California and the temperature is 82.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 25, 51) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=28C, wind_speed=2.2mps, humidity=33.2, cloudiness=75.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some reggae
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 25, 51) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=28C, wind_speed=2.2mps, humidity=33.2, cloudiness=75.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5fwSHlTEWpluwOM0Sxnh5k"^^org.thingpedia.media-source:playable("Pepas"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2JPLbjOn0wPCngEot2STUS"^^org.thingpedia.media-source:playable("Yonaguni"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:05bfbizlM5AX6Mf1RRyMho"^^org.thingpedia.media-source:playable("AM Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6hf0RpxTbOprT5nnwzkk8e"^^org.thingpedia.media-source:playable("Qué Más Pues?"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1wIn4YjJl6OpcMUn5McoxU"^^org.thingpedia.media-source:playable("Mi Gente"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6KErFkRhU1gbVQR8waxl3W"^^org.thingpedia.media-source:playable("LA CANCIÓN"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3HV5bB2lOkBNCWJdqR5hRZ"^^org.thingpedia.media-source:playable("Me Gustas Tu"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5JgADdEmaGrh9obb2ke3xi"^^org.thingpedia.media-source:playable("Bajo La Luna"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7IWGXK4ayKVfFG29bo7qYa"^^org.thingpedia.media-source:playable("No Es Justo"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p8TANEe8KLm1AFZcUp8rc"^^org.thingpedia.media-source:playable("Sin Compromiso"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
A: Did you mean get reggae music and then play the id on Spotify?
A: I played reggae music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 25, 51) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=28C, wind_speed=2.2mps, humidity=33.2, cloudiness=75.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5fwSHlTEWpluwOM0Sxnh5k"^^org.thingpedia.media-source:playable("Pepas"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2JPLbjOn0wPCngEot2STUS"^^org.thingpedia.media-source:playable("Yonaguni"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:05bfbizlM5AX6Mf1RRyMho"^^org.thingpedia.media-source:playable("AM Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6hf0RpxTbOprT5nnwzkk8e"^^org.thingpedia.media-source:playable("Qué Más Pues?"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1wIn4YjJl6OpcMUn5McoxU"^^org.thingpedia.media-source:playable("Mi Gente"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6KErFkRhU1gbVQR8waxl3W"^^org.thingpedia.media-source:playable("LA CANCIÓN"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3HV5bB2lOkBNCWJdqR5hRZ"^^org.thingpedia.media-source:playable("Me Gustas Tu"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5JgADdEmaGrh9obb2ke3xi"^^org.thingpedia.media-source:playable("Bajo La Luna"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7IWGXK4ayKVfFG29bo7qYa"^^org.thingpedia.media-source:playable("No Es Justo"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p8TANEe8KLm1AFZcUp8rc"^^org.thingpedia.media-source:playable("Sin Compromiso"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what is the capitol of the united states
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="capitol of the united states");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(1, 25, 51) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=28C, wind_speed=2.2mps, humidity=33.2, cloudiness=75.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5fwSHlTEWpluwOM0Sxnh5k"^^org.thingpedia.media-source:playable("Pepas"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2JPLbjOn0wPCngEot2STUS"^^org.thingpedia.media-source:playable("Yonaguni"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:05bfbizlM5AX6Mf1RRyMho"^^org.thingpedia.media-source:playable("AM Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6hf0RpxTbOprT5nnwzkk8e"^^org.thingpedia.media-source:playable("Qué Más Pues?"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1wIn4YjJl6OpcMUn5McoxU"^^org.thingpedia.media-source:playable("Mi Gente"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6KErFkRhU1gbVQR8waxl3W"^^org.thingpedia.media-source:playable("LA CANCIÓN"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3HV5bB2lOkBNCWJdqR5hRZ"^^org.thingpedia.media-source:playable("Me Gustas Tu"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5JgADdEmaGrh9obb2ke3xi"^^org.thingpedia.media-source:playable("Bajo La Luna"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7IWGXK4ayKVfFG29bo7qYa"^^org.thingpedia.media-source:playable("No Es Justo"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1p8TANEe8KLm1AFZcUp8rc"^^org.thingpedia.media-source:playable("Sin Compromiso"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.bing.web_search(query="capitol of the united states")
C: #[results=[
C:   { query="capitol of the united states", title="United States Capitol - Wikipedia", description="The United States Capitol, often called The Capitol or the Capitol Building, is the meeting place of the United States Congress and the seat of the legislative branch of the U.S. federal government.It is located on Capitol Hill at the eastern end of the National Mall in Washington, D.C. Though no longer at the geographic center of the federal district, the Capitol forms the origin point for ...", link="https://en.wikipedia.org/wiki/United_States_Capitol"^^tt:url },
C:   { query="capitol of the united states", title="List of capitals in the United States - Wikipedia", description="States (highlighted in blue) that have changed their capital city at least once. This is a list of capital cities of the United States, including places that serve or have served as federal, state, insular area, territorial, colonial and Native American capitals. Washington, D.C. has been the federal capital of the United States since 1800.", link="https://en.wikipedia.org/wiki/List_of_capitals_in_the_United_States"^^tt:url },
C:   { query="capitol of the united states", title="U.S. Capitol Building | Architect of the Capitol", description="The United States Capitol Building is located in Washington, D.C., at the eastern end of the National Mall on a plateau 88 feet above the level of the Potomac River, commanding a westward view across the U.S. Capitol Reflecting Pool to the Washington Monument 1.4 miles away and the Lincoln Memorial 2.2 miles away.", link="https://www.aoc.gov/explore-capitol-campus/buildings-grounds/capitol-building"^^tt:url },
C:   { query="capitol of the united states", title="United States Capitol | Architecture, History, United ...", description="United States Capitol, meeting place of the United States Congress and one of the most familiar landmarks in Washington, D.C. Possibly the most culturally and historically important building in the United States, it has been home to Congress since 1800. The following year Thomas Jefferson became the first president to be sworn in on its steps.", link="https://www.britannica.com/topic/United-States-Capitol"^^tt:url },
C:   { query="capitol of the united states", title="What Is the Capital of the USA? - WorldAtlas", description="The capital city of the United States of America is Washington, D.C., and can be referred to formally as the District of Columbia or more informally as D.C. or Washington. In 2017, the city had a population of 6,131,977 and an approximate size of 68.34 square miles. The city was founded after the American Revolution and named after Founding Father and first President of the United States of ...", link="https://www.worldatlas.com/articles/what-is-the-capital-of-the-united-states-of-america.html"^^tt:url }
C: ]];
A: I found United States Capitol - Wikipedia.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what is the capital of the united states
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="capital of the united states");
====
# recording/d507a290e8550a945dc76cf353b03379
U: play playlist oval
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "oval" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "oval")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:3a3xrK5RMXlQ14qPMss3fg"^^org.thingpedia.media-source:playable("oval"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played oval on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play playlist This is Nine Inch Nails
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "this is 9 inch nails" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "oval")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:3a3xrK5RMXlQ14qPMss3fg"^^org.thingpedia.media-source:playable("oval"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "this is 9 inch nails")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Did you mean get playlist that has name this is 9 inch nails and then play the id on Spotify?
A: Sorry, there are no playlist matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: create playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.create_playlist();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "oval")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:3a3xrK5RMXlQ14qPMss3fg"^^org.thingpedia.media-source:playable("oval"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "this is 9 inch nails")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
A: What do you want to name your playlist?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(name);
AT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
U: One
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="one");
====
# recording/0c035a374a3e758f6a6ca47e8cc03136
U: play favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# recording/76d6aee60a8292aa375103cbca37d211
U: play latest podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(release_date desc of @org.thingpedia.media-source.show())[1] => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
A: Sorry, there are no shows matching your request.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_empty_search;
U: play whiteness podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "whiteness" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "whiteness")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3mgGCIHV5BycOT0ZRgUmcd"^^org.thingpedia.media-source:playable("Whiteness at Work"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean get podcast that has name whiteness and then play the id on Spotify?
A: I played Whiteness at Work on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "whiteness")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3mgGCIHV5BycOT0ZRgUmcd"^^org.thingpedia.media-source:playable("Whiteness at Work"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play playlist secondhand
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "secondhand" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "whiteness")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3mgGCIHV5BycOT0ZRgUmcd"^^org.thingpedia.media-source:playable("Whiteness at Work"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "secondhand")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:0BfFoqrSMr5ti6mpSHtgto"^^org.thingpedia.media-source:playable("secondhand"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played secondhand on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "whiteness")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3mgGCIHV5BycOT0ZRgUmcd"^^org.thingpedia.media-source:playable("Whiteness at Work"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "secondhand")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:0BfFoqrSMr5ti6mpSHtgto"^^org.thingpedia.media-source:playable("secondhand"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: create a new playlist gizmo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.create_playlist(name="gizmo");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: sort(release_date desc of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show())[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "whiteness")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3mgGCIHV5BycOT0ZRgUmcd"^^org.thingpedia.media-source:playable("Whiteness at Work"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "secondhand")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:playlist:0BfFoqrSMr5ti6mpSHtgto"^^org.thingpedia.media-source:playable("secondhand"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="gizmo")
C: #[results=[
C:   { name="gizmo", __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean create a new playlist with name gizmo?
A: I created a new playlist for you named gizmo.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add current song to gizmo playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="gizmo", song=id);
====
# recording/cea189516ff0b7fd0a2b64df281521b6
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/e303b8805f67d2379158fc6ae64b60c4
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/84252a03b43c2c5830472c52c7164413
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3a445da4e84e21074753fad229e00305
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played shows on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[]]
C: #[error=enum no_song_playing];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play my favorite
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# recording/887aa58786f9be544975ea9575f1fe92
U: what time is it?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(0, 39, 9) }
C: ]];
A: Right now, it's 5:39 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather in berkeley
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("berkeley"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(0, 39, 9) }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.8753497, -122.23963364918777, "University of California, Berkeley, North Street"))
C: #[results=[
C:   { temperature=16.3C, wind_speed=5.8mps, humidity=65, cloudiness=3.9, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.8753497, -122.23963364918777, "University of California, Berkeley, North Street") }
C: ]];
A: It is sunny today in University of California, Berkeley, North Street and the temperature is 61.3 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather going to be like tomorrow?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(location=new Location(37.8753497, -122.23963364918777, "University of California, Berkeley, North Street"));
====
# recording/a7e10ebfd2f957aca18527b8d921fab4
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/ce813de29b16a97119f05ba51a557994
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: resume
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.resume();
====
# recording/20dd651313b7b2fdd01d9bf40ff78425
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/c1cf3ff2a9748091d1a0866c57349a57
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/eebc7b4f87c0588dfbfbece03f7dbbac
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/a42096c2ca88251c2e444d48ebee488f
U: save this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/156989012b643e22571437d876582358
U: what's the weather in tahoe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("tahoe"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(43.6387671, -79.6102134, "Tahoe, Mississauga Transitway"))
C: #[results=[
C:   { temperature=18.2C, wind_speed=2.3mps, humidity=63.6, cloudiness=10.2, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(43.6387671, -79.6102134, "Tahoe, Mississauga Transitway") }
C: ]];
A: It is sunny today in Tahoe, Mississauga Transitway and the temperature is 64.8 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is the capital of the united states
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="capital of the united states");
====
# recording/149a6480fd6f8f13e7c342488fe96297
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/993e2ad4e40e2ab22b14cd612c688019
U: play a podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played shows on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play my favorite music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/12e4ddc0b5220f06a92464d93728d75d
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/2d38b4844808752efff5e8d5598f0ff4
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
====
# recording/4b5ff826c19f37417aa19ec2abe0dd05
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/8dd63be2cc4b78f90c25c81f9e67c071
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/5859ea7560933e850a9c8caf2257dd60
U: play podcast azaria
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "azaria" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "azaria")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0pkZD7Nve0Q28ds5muZgzz"^^org.thingpedia.media-source:playable("The Azarias Capital Podcast"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played The Azarias Capital Podcast on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "azaria")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0pkZD7Nve0Q28ds5muZgzz"^^org.thingpedia.media-source:playable("The Azarias Capital Podcast"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0F0bomQrdLbPjz4nxRVjiI"^^org.thingpedia.media-source:playable("Ultimate Mock Draft 2021 - Pro Basketball Draft Simulation"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="invalid id"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: stop podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "azaria")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0pkZD7Nve0Q28ds5muZgzz"^^org.thingpedia.media-source:playable("The Azarias Capital Podcast"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0F0bomQrdLbPjz4nxRVjiI"^^org.thingpedia.media-source:playable("Ultimate Mock Draft 2021 - Pro Basketball Draft Simulation"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="invalid id"];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter id =~ "azaria")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0pkZD7Nve0Q28ds5muZgzz"^^org.thingpedia.media-source:playable("The Azarias Capital Podcast"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0F0bomQrdLbPjz4nxRVjiI"^^org.thingpedia.media-source:playable("Ultimate Mock Draft 2021 - Pro Basketball Draft Simulation"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="invalid id"];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:0F0bomQrdLbPjz4nxRVjiI"^^org.thingpedia.media-source:playable("Ultimate Mock Draft 2021 - Pro Basketball Draft Simulation"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="invalid id"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b8b36ae8868ba5807e79ff747cf43dc3
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: previous song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the previous song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: weather today
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=23.7C, wind_speed=3.3mps, humidity=45.9, cloudiness=6.2, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 74.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: weather tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_previous()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=23.7C, wind_speed=3.3mps, humidity=45.9, cloudiness=6.2, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=15.1C, wind_speed=1.4mps, humidity=86.9, cloudiness=31.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, date=new Date("2021-08-06T14:00:00.000Z"), location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It will be cloudy tomorrow at 7:00 AM in Palo Alto, California and the temperature will be 59.2 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/34ac7e5ae59f3cf992c7527849c79903
U: play some dead kennedys
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("dead kennedys")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:30U8fYtiNpeA5KH6H87QUV"^^org.thingpedia.media-source:artist("Dead Kennedys")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2OuNnwnNQyWrF47pthWxNb"^^org.thingpedia.media-source:playable("Holiday in Cambodia"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5szJ8SMwQVEvvdk65w6M6g"^^org.thingpedia.media-source:playable("California Uber Alles"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6M4yg3BknyHmRnsvlkuHD5"^^org.thingpedia.media-source:playable("Police Truck"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0gJ4X2ojTykeaoDEDEE1Xj"^^org.thingpedia.media-source:playable("Too Drunk to Fuck"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2LF13LC1wG5XqZ2js2yC9O"^^org.thingpedia.media-source:playable("Nazi Punks Fuck Off"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1zLCRp9Co721leiKVD2dMY"^^org.thingpedia.media-source:playable("Soup is Good Food"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3PraFkxThh80PiD685IzWC"^^org.thingpedia.media-source:playable("Kill the Poor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6XDIdtt7sugfe7UHYIDWXW"^^org.thingpedia.media-source:playable("Moon Over Marin"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4AjNTrJmgry75yiihCMOP8"^^org.thingpedia.media-source:playable("I Fought the Law"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5WhHdNu7A0fm30e9VmaA8U"^^org.thingpedia.media-source:playable("California Über Alles"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=49];
A: I played music by Dead Kennedys on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/8aeb38c42f182385d4446b756c3ba791
U: play baba riley by the who
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("the who")) && id =~ "baba riley" => @org.thingpedia.media-player.play(playable=id);
====
# recording/bcb04dffae19c28141b3810d27d53938
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played shows on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[]]
C: #[error=enum no_song_playing];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0642bb49d172649be6d2d44124aaef0b
U: like this song on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/647b00d84d5e47510e7bd6daf0046524
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/8b4e0e984ad058aebde555d1d268caba
U: play song thriller
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter id =~ "thriller" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() filter id =~ "thriller")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7azo4rpSUh8nXgtonC6Pkq"^^org.thingpedia.media-source:playable("Thriller"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Thriller on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0d8dcf71ab48b069958ca30115e80aec
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/14b3840307339dfa2925dc4f2b88c4a5
U: play tony's playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "tony 's" => @org.thingpedia.media-player.play(playable=id);
====
# recording/cbabe7220874e057e203de8bfdc7d90e
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/51a6ab4c29b53852b64b59e5eec4fbac
U: play favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# recording/a1630899011f061abe54cf7dd556d160
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/58e4df5becd973459db1aaa0158e17f3
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/e3a7a76acf15898e9bef32a5d2325a08
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3a4ceecf47cb36dc6f995e2d6e400c45
U: play a podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played shows on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean stop playing?
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play a podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean get shows and then play the id on Spotify?
A: I played shows on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/c35486e24085b68bb43c11df3ae2a84e
U: pause music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/886c7b089f24f6c0f809f6db70c8a5cc
U: play my favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# recording/213c0cda6fc19685141f558eda6b63e9
U: play soundtrack gladiator
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "soundtrack gladiator" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "soundtrack gladiator")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:1raWfcURBd1Q3W3K0ojDCM"^^org.thingpedia.media-source:playable("Now We Are Free - From \"Gladiator\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean Get music that has name soundtrack gladiator and then play the id on Spotify?
A: I played Now We Are Free - From "Gladiator" Soundtrack on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add this song to playlist oval
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="oval", song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "soundtrack gladiator")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:1raWfcURBd1Q3W3K0ojDCM"^^org.thingpedia.media-source:playable("Now We Are Free - From \"Gladiator\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="oval", song=id)
C: #[results=[
C:   { playlist="oval", song="spotify:track:1raWfcURBd1Q3W3K0ojDCM"^^org.thingpedia.media-source:song("Now We Are Free - From \"Gladiator\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added a song to a playlist for you named oval named Now We Are Free - From "Gladiator" Soundtrack.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: stop music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "soundtrack gladiator")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:1raWfcURBd1Q3W3K0ojDCM"^^org.thingpedia.media-source:playable("Now We Are Free - From \"Gladiator\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="oval", song=id)
C: #[results=[
C:   { playlist="oval", song="spotify:track:1raWfcURBd1Q3W3K0ojDCM"^^org.thingpedia.media-source:song("Now We Are Free - From \"Gladiator\" Soundtrack"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/5d6c36f9ed5d7dda55d3ed6740574b41
U: Like currently playing song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/a338ebc83068b79481cf8209de4a747d
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/80f36f91fdfdb19354ce58cafd38d9cf
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add this song to playlist gizmo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="gizmo", song=id);
====
# recording/2784ee32b4115fa5fd60df67fc221189
U: play podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:5ZKHbyeo97VivPN05bXt8r"^^org.thingpedia.media-source:playable("Good Times with Mo: The Podcast Year 10"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1TZWDLIrcaPgq7kQAyOqfQ"^^org.thingpedia.media-source:playable("Year End Reflection"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:3CpR3dGT55X7ZxUfJ0mS7S"^^org.thingpedia.media-source:playable("Come Follow Me 2021 - Doctrine and Covenants"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:1d2Arg2uau2W6JXcY4gNqR"^^org.thingpedia.media-source:playable("20 Years of 24"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:show:21JT1fT5BauYygwzWhXqzm"^^org.thingpedia.media-source:playable("Commencement: Speeches For The Class of 2021"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played shows on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/d8ae69289fc61962c4763a57dde8a487
U: play spotify liked songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# recording/4080688aed7ccf1bb192adc2e2849f07
U: add this song to my library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/a076fcf3b5c19931e99dd3239ee4b202
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/80bc04a88f005844acfe9bf2df635f87
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/40d01ce36a0415ee2e5a5d1c6e9f478f
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4RVwu0g32PAqgUiJoXsdF8"^^org.thingpedia.media-source:playable("Happier Than Ever"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0RbW8kWozrVSIGb4V13o0o"^^org.thingpedia.media-source:playable("Hurricane"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added STAY (with Justin Bieber) to your favorite.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/9517aaad7dedbeca9331d925e7fad957
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6xGEDLwoReTEuSETJj17zt"^^org.thingpedia.media-source:playable("Breathe"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add this song to my library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/2e8ebf70ad42dd8b66a965df8db0eec9
U: play spanish english podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "spanish english" => @org.thingpedia.media-player.play(playable=id);
====
# recording/9af7699bc228f967f9fe91bdbb69e256
U: play spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:0eRJI4VhEm6UqIdMbf4VyX"^^org.thingpedia.media-source:playable("Year 3000"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add song to oval
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="oval", song=id);
====
# recording/22558917f992199c7ec4c009c78bdabe
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/c21f1f2d3c330286f90269e302120c3d
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/e0d329083ad82a93fbc8e51681c4d45e
U: play album Freedom of Choice by Devo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.album() filter contains(artists, null^^org.thingpedia.media-source:artist("devo")) && id =~ "freedom of choice" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter contains(artists, "spotify:artist:0UKfenbZb15sqhfPC6zbt3"^^org.thingpedia.media-source:artist("DEVO")) && id =~ "freedom of choice")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:album:6UsP4NQ9K4L4Nqxj0Qis41"^^org.thingpedia.media-source:playable("Freedom Of Choice"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Freedom Of Choice on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like the album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=album);
====
# recording/e172491e7a7863ac381ceba55285aa04
U: Play come down to us by burial.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("burial")) && id =~ "come down to us" => @org.thingpedia.media-player.play(playable=id);
====
# recording/dc8d1c30b3af34e7d91872e7573b07dd
U: Play still alive.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "still alive" => @org.thingpedia.media-player.play(playable=id);
====
# recording/1e3b70ac03a39cf4992fa930cbe1d873
U: play some punk rock
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "punk rock") => @org.thingpedia.media-player.play(playable=id);
====
# recording/054e7d7e0f2814ad710eab41e41b0687
U: Play some pop rock.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "pop rock") => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "pop rock") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5zFglKYiknIxks8geR8rcL"^^org.thingpedia.media-source:playable("Beautiful Mistakes (feat. Megan Thee Stallion)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3JvrhDOgAt6p7K8mDyZwRd"^^org.thingpedia.media-source:playable("Riptide"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0GO8y8jQk1PkHzS31d699N"^^org.thingpedia.media-source:playable("Tongue Tied"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2UbVnbE5FH6008mAm6Mmgw"^^org.thingpedia.media-source:playable("Run"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2iUmqdfGZcHIhS3b9E9EWq"^^org.thingpedia.media-source:playable("Everybody Talks"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7w87IxuO7BDcJ3YUqCyMTT"^^org.thingpedia.media-source:playable("Pumped Up Kicks"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6FE2iI43OZnszFLuLtvvmg"^^org.thingpedia.media-source:playable("Classic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4HlFJV71xXKIGcU3kRyttv"^^org.thingpedia.media-source:playable("Hey, Soul Sister"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3d8y0t70g7hw2FOWl9Z4Fm"^^org.thingpedia.media-source:playable("Ophelia"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:53BHUFdQphHiZUUG3nx9zn"^^org.thingpedia.media-source:playable("Bang!"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=41];
A: I played pop rock music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Turn it off.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
====
# recording/b499d6f342dc7de4b4ed81ea252a1a52
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Did you mean get music by slayer and then play the id on Spotify?
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: Play some against me.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("against me")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/aff9194ed397b56a8aea1b66d87a4ef4
U: play some devo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("devo")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0UKfenbZb15sqhfPC6zbt3"^^org.thingpedia.media-source:artist("DEVO")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4sscDOZCkbLSlDqcCgUJnX"^^org.thingpedia.media-source:playable("Whip It"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1RG1Pz45nlYNHka7JioyOT"^^org.thingpedia.media-source:playable("Uncontrollable Urge"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2vFaBeQqDVZW9SiJeiM4LU"^^org.thingpedia.media-source:playable("Gut Feeling / (Slap Your Mammy)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rNXiNb8IN78GL6cx9VsP7"^^org.thingpedia.media-source:playable("Girl U Want - 2009 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5FzBxhIsZBFXDTVGWtV4IQ"^^org.thingpedia.media-source:playable("(I Can't Get No) Satisfaction"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:03YadWiNth3S5n3gD1zQGB"^^org.thingpedia.media-source:playable("Step Up"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3bGG7jaMbcx8JDl3gLUvo7"^^org.thingpedia.media-source:playable("Mongoloid"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music by DEVO on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=album);
====
# recording/e4663f9dc90d0a77ef6c1f0986e2881e
U: shuffle my electric candy playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_shuffle(shuffle=enum on);
UT: @org.thingpedia.media-source.playlist() filter id =~ "electric candy" => @org.thingpedia.media-player.play(playable=id);
====
# recording/588bdf859a842c3dfcde893419d4df81
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/53581e4d339336ba24b103918cc857f0
U: Cancel.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/ecc7b1d46313c83dbfd02d98184b083e
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/35aeecfc1d5c014a4d1cbfe2b59f32a4
U: Play some songs about cats.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter contains~(genres, "cats") => @org.thingpedia.media-player.play(playable=id);
====
# recording/e5eb78ea2f9e19a329d2d07dc292727e
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add this song to my library
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added Angel Of Death to your favorite.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play my favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5WhHdNu7A0fm30e9VmaA8U"^^org.thingpedia.media-source:playable("California Über Alles"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6yIaRcvzhIrukxS4VVhil0"^^org.thingpedia.media-source:playable("Minor Threat"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5OU9pkK0wkHJMCOBVYafye"^^org.thingpedia.media-source:playable("My Favorite Accident"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5i7fZq3chLyCHo3VeB6goD"^^org.thingpedia.media-source:playable("1 of the Year (Equinox)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3idga60u7YBoOxfaiEu9Nh"^^org.thingpedia.media-source:playable("Jessie & My Whetstone"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3b9xTm2eiaCRTGqUEWuzxc"^^org.thingpedia.media-source:playable("I'm Glad Trouble Don't Last Always"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5cxnSTLzGD1t9xcdmJYFVB"^^org.thingpedia.media-source:playable("No Children"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6JXGqMLXr0WhiJ6rtI8S4W"^^org.thingpedia.media-source:playable("Hammerhead"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
A: Did you mean get my favorites and then play the id on Spotify?
A: I played your favorites on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some krs-one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("krs-one")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5WhHdNu7A0fm30e9VmaA8U"^^org.thingpedia.media-source:playable("California Über Alles"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6yIaRcvzhIrukxS4VVhil0"^^org.thingpedia.media-source:playable("Minor Threat"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5OU9pkK0wkHJMCOBVYafye"^^org.thingpedia.media-source:playable("My Favorite Accident"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5i7fZq3chLyCHo3VeB6goD"^^org.thingpedia.media-source:playable("1 of the Year (Equinox)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3idga60u7YBoOxfaiEu9Nh"^^org.thingpedia.media-source:playable("Jessie & My Whetstone"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3b9xTm2eiaCRTGqUEWuzxc"^^org.thingpedia.media-source:playable("I'm Glad Trouble Don't Last Always"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5cxnSTLzGD1t9xcdmJYFVB"^^org.thingpedia.media-source:playable("No Children"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6JXGqMLXr0WhiJ6rtI8S4W"^^org.thingpedia.media-source:playable("Hammerhead"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2gINJ8xw86xawPyGvx1bla"^^org.thingpedia.media-source:artist("KRS-One")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5xXL4i9L2ZbKBtENNh8fWY"^^org.thingpedia.media-source:playable("Step into 1 World (Rapture's Delight)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Y6XWs8xMlCngyIxNOFnsp"^^org.thingpedia.media-source:playable("Sound of da Police"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0snDRsjNRMJhm7SVja8l6J"^^org.thingpedia.media-source:playable("MC's Act Like They Don't Know"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5JPCZLbqNBonKhC53JPu4A"^^org.thingpedia.media-source:playable("1 Friend"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1yjRkRZ9N9blrca0f0UzeF"^^org.thingpedia.media-source:playable("Outta Here"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dupEkAq7v5mTay6lJBvRx"^^org.thingpedia.media-source:playable("I Can't Wake Up"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7q0xO3uiDpfqyyWXNMWspM"^^org.thingpedia.media-source:playable("Hush"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7sBxvRUzQmF7uB2ZFfjzF3"^^org.thingpedia.media-source:playable("Mortal Thought"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3BB2d2NGwpSCyrcdcBCpH7"^^org.thingpedia.media-source:playable("The MC"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0i5BepbSYym7AAIqyOhIxL"^^org.thingpedia.media-source:playable("Black Cop"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
A: Did you mean get music by krs-one and then play the id on Spotify?
A: I played music by KRS-One on Spotify for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5WhHdNu7A0fm30e9VmaA8U"^^org.thingpedia.media-source:playable("California Über Alles"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6yIaRcvzhIrukxS4VVhil0"^^org.thingpedia.media-source:playable("Minor Threat"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5OU9pkK0wkHJMCOBVYafye"^^org.thingpedia.media-source:playable("My Favorite Accident"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5i7fZq3chLyCHo3VeB6goD"^^org.thingpedia.media-source:playable("1 of the Year (Equinox)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3idga60u7YBoOxfaiEu9Nh"^^org.thingpedia.media-source:playable("Jessie & My Whetstone"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3b9xTm2eiaCRTGqUEWuzxc"^^org.thingpedia.media-source:playable("I'm Glad Trouble Don't Last Always"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5cxnSTLzGD1t9xcdmJYFVB"^^org.thingpedia.media-source:playable("No Children"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6JXGqMLXr0WhiJ6rtI8S4W"^^org.thingpedia.media-source:playable("Hammerhead"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2gINJ8xw86xawPyGvx1bla"^^org.thingpedia.media-source:artist("KRS-One")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5xXL4i9L2ZbKBtENNh8fWY"^^org.thingpedia.media-source:playable("Step into 1 World (Rapture's Delight)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Y6XWs8xMlCngyIxNOFnsp"^^org.thingpedia.media-source:playable("Sound of da Police"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0snDRsjNRMJhm7SVja8l6J"^^org.thingpedia.media-source:playable("MC's Act Like They Don't Know"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5JPCZLbqNBonKhC53JPu4A"^^org.thingpedia.media-source:playable("1 Friend"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1yjRkRZ9N9blrca0f0UzeF"^^org.thingpedia.media-source:playable("Outta Here"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dupEkAq7v5mTay6lJBvRx"^^org.thingpedia.media-source:playable("I Can't Wake Up"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7q0xO3uiDpfqyyWXNMWspM"^^org.thingpedia.media-source:playable("Hush"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7sBxvRUzQmF7uB2ZFfjzF3"^^org.thingpedia.media-source:playable("Mortal Thought"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3BB2d2NGwpSCyrcdcBCpH7"^^org.thingpedia.media-source:playable("The MC"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0i5BepbSYym7AAIqyOhIxL"^^org.thingpedia.media-source:playable("Black Cop"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5WhHdNu7A0fm30e9VmaA8U"^^org.thingpedia.media-source:playable("California Über Alles"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6yIaRcvzhIrukxS4VVhil0"^^org.thingpedia.media-source:playable("Minor Threat"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5OU9pkK0wkHJMCOBVYafye"^^org.thingpedia.media-source:playable("My Favorite Accident"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5i7fZq3chLyCHo3VeB6goD"^^org.thingpedia.media-source:playable("1 of the Year (Equinox)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3idga60u7YBoOxfaiEu9Nh"^^org.thingpedia.media-source:playable("Jessie & My Whetstone"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3b9xTm2eiaCRTGqUEWuzxc"^^org.thingpedia.media-source:playable("I'm Glad Trouble Don't Last Always"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5cxnSTLzGD1t9xcdmJYFVB"^^org.thingpedia.media-source:playable("No Children"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6JXGqMLXr0WhiJ6rtI8S4W"^^org.thingpedia.media-source:playable("Hammerhead"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:2gINJ8xw86xawPyGvx1bla"^^org.thingpedia.media-source:artist("KRS-One")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5xXL4i9L2ZbKBtENNh8fWY"^^org.thingpedia.media-source:playable("Step into 1 World (Rapture's Delight)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Y6XWs8xMlCngyIxNOFnsp"^^org.thingpedia.media-source:playable("Sound of da Police"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0snDRsjNRMJhm7SVja8l6J"^^org.thingpedia.media-source:playable("MC's Act Like They Don't Know"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5JPCZLbqNBonKhC53JPu4A"^^org.thingpedia.media-source:playable("1 Friend"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1yjRkRZ9N9blrca0f0UzeF"^^org.thingpedia.media-source:playable("Outta Here"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0dupEkAq7v5mTay6lJBvRx"^^org.thingpedia.media-source:playable("I Can't Wake Up"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7q0xO3uiDpfqyyWXNMWspM"^^org.thingpedia.media-source:playable("Hush"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7sBxvRUzQmF7uB2ZFfjzF3"^^org.thingpedia.media-source:playable("Mortal Thought"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3BB2d2NGwpSCyrcdcBCpH7"^^org.thingpedia.media-source:playable("The MC"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0i5BepbSYym7AAIqyOhIxL"^^org.thingpedia.media-source:playable("Black Cop"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id)
C: #[results=[
C:   { playable="spotify:track:3Y6XWs8xMlCngyIxNOFnsp"^^org.thingpedia.media-source:playable("Sound of da Police"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added Sound of da Police to your favorite.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=album);
====
# recording/9d69a379259aa387ee2e97d1757ea87b
U: Set location to Palo Alto, CA.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location("palo alto , ca"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_location(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current)
C: #[results=[
C:   { location=new Location(37.4443293, -122.1598465, "Palo Alto, California"), type=enum current }
C: ]];
A: I set your current location for you to Palo Alto, California.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: What's the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/b75b5eb1666f48ab61846e11505a5989
U: how you been?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
A: Great. Thanks for asking. How can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play some Slayer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: OK, so play some Slayer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
C: #[results=[
C:   { reply="Great. Thanks for asking. How can I help you?", question=enum about_almond_how_are_you }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: Did you mean get music by slayer and then play the id on Spotify?
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Next song.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/0ed3b37fab0b60bbc830ed59245b376e
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=album);
====
# recording/0f6d5e44e01db57eee9492217d5ded98
U: create a playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify.create_playlist();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
A: What do you want to name your playlist?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(name);
AT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist();
U: black squirrel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I created a new playlist for you named black squirrel.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some atmosphere
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("atmosphere")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1GAS0rb4L8VTPvizAx2O9J"^^org.thingpedia.media-source:artist("Atmosphere")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7wdx4RyIAgjRNoJLhjsnh4"^^org.thingpedia.media-source:playable("Sunshine"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:74HckRky7JmEeWqeOW7ucq"^^org.thingpedia.media-source:playable("Yesterday"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:48vRKDOBxyVChwHAjU0SOf"^^org.thingpedia.media-source:playable("The Best Day"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76xfSfbw0byLqMHykJyPru"^^org.thingpedia.media-source:playable("GodLovesUgly - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6V7c3Y5Nio1rp87a52mgtN"^^org.thingpedia.media-source:playable("God's Bathroom Floor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7jIkKFVb0xI2APdtOwE33l"^^org.thingpedia.media-source:playable("Trying To Find 1 Balance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5aaKBosgMkbgcsWxN8jWYG"^^org.thingpedia.media-source:playable("Strung (feat. Musab)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2dYmlijyh60yiIuGvoOJGf"^^org.thingpedia.media-source:playable("Clocked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:21xyw6hdV7aMWLSkfStjNN"^^org.thingpedia.media-source:playable("Woes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rnGWfmLo549sjL9eiTKfp"^^org.thingpedia.media-source:playable("Sleepless (feat. Nino Bless)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=38];
A: Did you mean get music by atmosphere and then play the id on Spotify?
A: I played music by Atmosphere on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1GAS0rb4L8VTPvizAx2O9J"^^org.thingpedia.media-source:artist("Atmosphere")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7wdx4RyIAgjRNoJLhjsnh4"^^org.thingpedia.media-source:playable("Sunshine"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:74HckRky7JmEeWqeOW7ucq"^^org.thingpedia.media-source:playable("Yesterday"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:48vRKDOBxyVChwHAjU0SOf"^^org.thingpedia.media-source:playable("The Best Day"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76xfSfbw0byLqMHykJyPru"^^org.thingpedia.media-source:playable("GodLovesUgly - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6V7c3Y5Nio1rp87a52mgtN"^^org.thingpedia.media-source:playable("God's Bathroom Floor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7jIkKFVb0xI2APdtOwE33l"^^org.thingpedia.media-source:playable("Trying To Find 1 Balance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5aaKBosgMkbgcsWxN8jWYG"^^org.thingpedia.media-source:playable("Strung (feat. Musab)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2dYmlijyh60yiIuGvoOJGf"^^org.thingpedia.media-source:playable("Clocked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:21xyw6hdV7aMWLSkfStjNN"^^org.thingpedia.media-source:playable("Woes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rnGWfmLo549sjL9eiTKfp"^^org.thingpedia.media-source:playable("Sleepless (feat. Nino Bless)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=38];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1GAS0rb4L8VTPvizAx2O9J"^^org.thingpedia.media-source:artist("Atmosphere")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7wdx4RyIAgjRNoJLhjsnh4"^^org.thingpedia.media-source:playable("Sunshine"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:74HckRky7JmEeWqeOW7ucq"^^org.thingpedia.media-source:playable("Yesterday"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:48vRKDOBxyVChwHAjU0SOf"^^org.thingpedia.media-source:playable("The Best Day"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76xfSfbw0byLqMHykJyPru"^^org.thingpedia.media-source:playable("GodLovesUgly - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6V7c3Y5Nio1rp87a52mgtN"^^org.thingpedia.media-source:playable("God's Bathroom Floor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7jIkKFVb0xI2APdtOwE33l"^^org.thingpedia.media-source:playable("Trying To Find 1 Balance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5aaKBosgMkbgcsWxN8jWYG"^^org.thingpedia.media-source:playable("Strung (feat. Musab)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2dYmlijyh60yiIuGvoOJGf"^^org.thingpedia.media-source:playable("Clocked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:21xyw6hdV7aMWLSkfStjNN"^^org.thingpedia.media-source:playable("Woes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rnGWfmLo549sjL9eiTKfp"^^org.thingpedia.media-source:playable("Sleepless (feat. Nino Bless)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=38];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1GAS0rb4L8VTPvizAx2O9J"^^org.thingpedia.media-source:artist("Atmosphere")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7wdx4RyIAgjRNoJLhjsnh4"^^org.thingpedia.media-source:playable("Sunshine"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:74HckRky7JmEeWqeOW7ucq"^^org.thingpedia.media-source:playable("Yesterday"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:48vRKDOBxyVChwHAjU0SOf"^^org.thingpedia.media-source:playable("The Best Day"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76xfSfbw0byLqMHykJyPru"^^org.thingpedia.media-source:playable("GodLovesUgly - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6V7c3Y5Nio1rp87a52mgtN"^^org.thingpedia.media-source:playable("God's Bathroom Floor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7jIkKFVb0xI2APdtOwE33l"^^org.thingpedia.media-source:playable("Trying To Find 1 Balance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5aaKBosgMkbgcsWxN8jWYG"^^org.thingpedia.media-source:playable("Strung (feat. Musab)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2dYmlijyh60yiIuGvoOJGf"^^org.thingpedia.media-source:playable("Clocked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:21xyw6hdV7aMWLSkfStjNN"^^org.thingpedia.media-source:playable("Woes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rnGWfmLo549sjL9eiTKfp"^^org.thingpedia.media-source:playable("Sleepless (feat. Nino Bless)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=38];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1GAS0rb4L8VTPvizAx2O9J"^^org.thingpedia.media-source:artist("Atmosphere")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7wdx4RyIAgjRNoJLhjsnh4"^^org.thingpedia.media-source:playable("Sunshine"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:74HckRky7JmEeWqeOW7ucq"^^org.thingpedia.media-source:playable("Yesterday"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:48vRKDOBxyVChwHAjU0SOf"^^org.thingpedia.media-source:playable("The Best Day"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76xfSfbw0byLqMHykJyPru"^^org.thingpedia.media-source:playable("GodLovesUgly - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6V7c3Y5Nio1rp87a52mgtN"^^org.thingpedia.media-source:playable("God's Bathroom Floor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7jIkKFVb0xI2APdtOwE33l"^^org.thingpedia.media-source:playable("Trying To Find 1 Balance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5aaKBosgMkbgcsWxN8jWYG"^^org.thingpedia.media-source:playable("Strung (feat. Musab)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2dYmlijyh60yiIuGvoOJGf"^^org.thingpedia.media-source:playable("Clocked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:21xyw6hdV7aMWLSkfStjNN"^^org.thingpedia.media-source:playable("Woes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rnGWfmLo549sjL9eiTKfp"^^org.thingpedia.media-source:playable("Sleepless (feat. Nino Bless)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=38];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).create_playlist(name="black squirrel")
C: #[results=[
C:   { name="black squirrel", __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1GAS0rb4L8VTPvizAx2O9J"^^org.thingpedia.media-source:artist("Atmosphere")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7wdx4RyIAgjRNoJLhjsnh4"^^org.thingpedia.media-source:playable("Sunshine"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:74HckRky7JmEeWqeOW7ucq"^^org.thingpedia.media-source:playable("Yesterday"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:48vRKDOBxyVChwHAjU0SOf"^^org.thingpedia.media-source:playable("The Best Day"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:76xfSfbw0byLqMHykJyPru"^^org.thingpedia.media-source:playable("GodLovesUgly - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6V7c3Y5Nio1rp87a52mgtN"^^org.thingpedia.media-source:playable("God's Bathroom Floor"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7jIkKFVb0xI2APdtOwE33l"^^org.thingpedia.media-source:playable("Trying To Find 1 Balance"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5aaKBosgMkbgcsWxN8jWYG"^^org.thingpedia.media-source:playable("Strung (feat. Musab)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2dYmlijyh60yiIuGvoOJGf"^^org.thingpedia.media-source:playable("Clocked"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:21xyw6hdV7aMWLSkfStjNN"^^org.thingpedia.media-source:playable("Woes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0rnGWfmLo549sjL9eiTKfp"^^org.thingpedia.media-source:playable("Sleepless (feat. Nino Bless)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=38];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played the next song for you.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add to my black squirrel playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="black squirrel", song=id);
====
# recording/87e7d01042761e0d8ce15f1b2d9a8c6f
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/563fe38f15a3e8876e3e0394bb923727
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/61bda0cc476def89d7b74e6170fd37cb
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some slayer
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:1IQ2e1buppatiN1bxUVkrk"^^org.thingpedia.media-source:artist("Slayer")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:01Mpj13vURSO3cCLprPt5T"^^org.thingpedia.media-source:playable("Raining Blood"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:61dTqhd46yMkSWmC5LAh5F"^^org.thingpedia.media-source:playable("Angel Of Death"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1f2nJKg780VxYIveVq6Xej"^^org.thingpedia.media-source:playable("South Of Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6W2KBpMMXW17r7dPyqi8Iu"^^org.thingpedia.media-source:playable("Repentless"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3Ky8IzV8IVSwijtaTWB2SK"^^org.thingpedia.media-source:playable("Seasons In The Abyss"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0esBc6VgM4lFk3SOlL3Ys4"^^org.thingpedia.media-source:playable("Disciple"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2RJba1by26f8314u8IgMta"^^org.thingpedia.media-source:playable("Bloodline"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2L2XquxTZBmzzNBCPCzq0p"^^org.thingpedia.media-source:playable("Dead Skin Mask"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4cJhBmeJ7KiBeuy7oxRnZ3"^^org.thingpedia.media-source:playable("Black Magic"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7fSOpoZTwCmS8FON3g5M4O"^^org.thingpedia.media-source:playable("War Ensemble"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: Did you mean get music by slayer and then play the id on Spotify?
A: I played music by Slayer on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/69b533faf55f166fc68aa1787059f005
U: pause music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play holiday in cambodia
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "holiday in cambodia" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "holiday in cambodia")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2OuNnwnNQyWrF47pthWxNb"^^org.thingpedia.media-source:playable("Holiday in Cambodia"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean get music that has name holiday in cambodia and then play the id on Spotify?
A: I played Holiday in Cambodia on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/d4d87574e1fe8e08cc180ccfd25ae5c3
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/bf8d20f1d33792f7f91b473ed3fc23c8
U: play my favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:15mZo1Kah03g8CTLbSsWrr"^^org.thingpedia.media-source:playable("The Whole of the Moon - 2004 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2mv6GY70UsHiTCGQZ4JfgC"^^org.thingpedia.media-source:playable("Fools Gold - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7CZiDzGVjUssMSOXrDNYHL"^^org.thingpedia.media-source:playable("Ticket To Ride - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0n9WsxAyHGJ884COiouw1G"^^org.thingpedia.media-source:playable("Vervet"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3kR5YXGreVtFOoPDOBKken"^^org.thingpedia.media-source:playable("Delusional Waste"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Tp6nX0n9aDCYmtTYqRamf"^^org.thingpedia.media-source:playable("Telling You - Elo Rub Mix, Feat. Tim Holmes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:25PA58rQD2zi7TxybWV1AD"^^org.thingpedia.media-source:playable("Telling You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2NjNkyvUvlKWXXqAwC0WPj"^^org.thingpedia.media-source:playable("Under My Skin"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3c4bJL7mARZvd387847GsC"^^org.thingpedia.media-source:playable("Precious"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
A: I played your favorites on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:15mZo1Kah03g8CTLbSsWrr"^^org.thingpedia.media-source:playable("The Whole of the Moon - 2004 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2mv6GY70UsHiTCGQZ4JfgC"^^org.thingpedia.media-source:playable("Fools Gold - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7CZiDzGVjUssMSOXrDNYHL"^^org.thingpedia.media-source:playable("Ticket To Ride - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0n9WsxAyHGJ884COiouw1G"^^org.thingpedia.media-source:playable("Vervet"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3kR5YXGreVtFOoPDOBKken"^^org.thingpedia.media-source:playable("Delusional Waste"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Tp6nX0n9aDCYmtTYqRamf"^^org.thingpedia.media-source:playable("Telling You - Elo Rub Mix, Feat. Tim Holmes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:25PA58rQD2zi7TxybWV1AD"^^org.thingpedia.media-source:playable("Telling You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2NjNkyvUvlKWXXqAwC0WPj"^^org.thingpedia.media-source:playable("Under My Skin"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3c4bJL7mARZvd387847GsC"^^org.thingpedia.media-source:playable("Precious"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: Did you mean stop playing?
A: I stopped playing.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play some reggae
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_song_from_library() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:15mZo1Kah03g8CTLbSsWrr"^^org.thingpedia.media-source:playable("The Whole of the Moon - 2004 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2mv6GY70UsHiTCGQZ4JfgC"^^org.thingpedia.media-source:playable("Fools Gold - Remastered"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:7CZiDzGVjUssMSOXrDNYHL"^^org.thingpedia.media-source:playable("Ticket To Ride - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0n9WsxAyHGJ884COiouw1G"^^org.thingpedia.media-source:playable("Vervet"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3kR5YXGreVtFOoPDOBKken"^^org.thingpedia.media-source:playable("Delusional Waste"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4Tp6nX0n9aDCYmtTYqRamf"^^org.thingpedia.media-source:playable("Telling You - Elo Rub Mix, Feat. Tim Holmes"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:25PA58rQD2zi7TxybWV1AD"^^org.thingpedia.media-source:playable("Telling You"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2NjNkyvUvlKWXXqAwC0WPj"^^org.thingpedia.media-source:playable("Under My Skin"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3c4bJL7mARZvd387847GsC"^^org.thingpedia.media-source:playable("Precious"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=20];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[
C:   { __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains~(genres, "reggae") => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5fwSHlTEWpluwOM0Sxnh5k"^^org.thingpedia.media-source:playable("Pepas"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2JPLbjOn0wPCngEot2STUS"^^org.thingpedia.media-source:playable("Yonaguni"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:05bfbizlM5AX6Mf1RRyMho"^^org.thingpedia.media-source:playable("AM Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:6hf0RpxTbOprT5nnwzkk8e"^^org.thingpedia.media-source:playable("Qué Más Pues?"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0G2zPzWqVjR68iNPmx2TBe"^^org.thingpedia.media-source:playable("Volando - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:63aj87TQG6F3RVO5nbG2VQ"^^org.thingpedia.media-source:playable("In Da Getto"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0fea68AdmYNygeTGI4RC18"^^org.thingpedia.media-source:playable("LA CANCIÓN"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:47EiUVwUp4C9fGccaPuUCS"^^org.thingpedia.media-source:playable("DÁKITI"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2XIc1pqjXV3Cr2BQUGNBck"^^org.thingpedia.media-source:playable("LA NOCHE DE ANOCHE"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:1UdoSq3BY0EMa1kUIN2ZXS"^^org.thingpedia.media-source:playable("Ambiente"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=48];
A: Did you mean get reggae music and then play them on Spotify?
A: I played reggae music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play me some of that there cure music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/95d3f80c8357e25a9e6d027ffa69d5b3
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: add song to gizmo
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="gizmo", song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:2Ls1I4GixLh0RFE6HTcirT"^^org.thingpedia.media-source:playable("If You're Over Me"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="gizmo", song=id)
C: #[results=[
C:   { playlist="gizmo", song="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:song("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I added a song to a playlist for you named gizmo with song name STAY (with Justin Bieber).
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: like song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_item_to_library(playable=id);
====
# recording/d016e147fa16592aa7b574eba8849ef2
U: play my favorites
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# recording/e993de692ea6dd92b276792d0948ea81
U: like this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# recording/04063ee6ebebb7710ae100e548d16496
U: search the web for black squirrels
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.web_search(query="black squirrels");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.bing.web_search(query="black squirrels")
C: #[results=[
C:   { query="black squirrels", title="Black squirrel - Wikipedia", description="Black squirrels are a melanistic subgroup of squirrels with black coloration on their fur. The phenomenon occurs with several species of squirrels, although it is most frequent with the eastern gray squirrel (Sciurus carolinensis) and the fox squirrel (Sciurus niger).Black morphs of the eastern gray and fox squirrels are the result of an abnormal pigment gene.", link="https://en.wikipedia.org/wiki/Black_squirrel"^^tt:url },
C:   { query="black squirrels", title="Black Squirrels: Are They More Aggressive?", description="What Is A Black Squirrel? Black squirrels are genetic variants that are found for both Grey and Fox squirrels. The melanistic genetic mutation has been studied extensively in the Grey squirrel. A study published in 2019 suggests that the mutation may have originated in Fox squirrels and was passed to Grey squirrels through interspecies breeding.", link="https://www.squirrelsatthefeeder.com/black-squirrels/"^^tt:url },
C:   { query="black squirrels", title="Cute and Cool Facts About the Relatively Rare Black Squirrels", description="Black panthers are a well-known example of adaptive melanism. This is the same condition that affects black squirrels. Black squirrels have some advantages over their lighter-colored counterparts. For example, they are better camouflaged in the dense, dark forests of the eastern United States.", link="https://animalsake.com/facts-about-black-squirrels"^^tt:url },
C:   { query="black squirrels", title="Black Squirrels | Where Do Black Squirrels Come From?", description="Little known fact: The black squirrel is considered the unofficial mascot of Kent State University. It was in 1961 when several of them were trapped in Canada and released by a number of students at Kent State University. There is a story behind this chronicled by Kent State “The Black Squirrel Festival is only the beginning of black squirrel pride in Kent.", link="https://www.removesquirrels.com/black-squirrels/"^^tt:url },
C:   { query="black squirrels", title="Black Squirrel - Profile | Distribution | Habitat | Facts ...", description="Black squirrels can be 400 to 700 grams (14 – 25 oz.), of body weight. During winter, the black squirrel loses 10% of their body weight. The black squirrel has a significantly higher cooling tolerance than the gray squirrel. Black squirrels enjoy the advantage of a better view when viewed from the top in this darkly lit habitat.", link="https://www.mammalage.com/black-squirrel/"^^tt:url }
C: ]];
A: I found Black squirrel - Wikipedia.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: what's a good restaurant in los altos
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter geo == new Location("los altos");
====
# recording/0ab59f9aab350f7d07310118457df2a7
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/021a5eb6b717ca8200ad59917364ae3c
U: test
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5HCyWlXZPP0y6Gqq8TgA20"^^org.thingpedia.media-source:playable("STAY (with Justin Bieber)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:27NovPIUIRrOZoCHxABJwK"^^org.thingpedia.media-source:playable("INDUSTRY BABY (feat. Jack Harlow)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:67BtfxlNbhBmCDR2L2l8qd"^^org.thingpedia.media-source:playable("MONTERO (Call Me By Your Name)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
C: #[results=[
C:   { reply="I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.", question=enum general_help }
C: ]];
A: I'm a new virtual assistant. At the moment, I can help you with music, jokes, and managing some IoT devices.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: tell me a joke in 10 seconds
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[$now + 10s]) => @com.icanhazdadjoke.get();
====
# log-dev/13013
U: don't forget to say thanks.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/13004
U: jennie.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/13000
U: hey jeannie. play music on spotify.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12989
U: hey jenny.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/12984
U: hey jeannie, i'm jeannie.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/12940
U: play my favorite music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12934
U: play some taylor swift.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("taylor swift")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12874
U: play some slayer.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("slayer")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12786
U: play miami by will smith.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("will smith")) && id =~ "miami" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12785
U: play welcome to miami.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "welcome to miami" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12783
U: play dance song party in the city where the heat is on all night on the beach to the break of dawn.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter id =~ "party in the city where the heat is on all night on the beach to the break of dawn" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12767
U: what does the fox say?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter id =~ "what does the fox say" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12731
U: play some workout music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "workout") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12727
U: never mind.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12725
U: play some funky music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "funky") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12697
U: add this song to playlist awesome.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(playlist="awesome", song=id);
====
# log-dev/12690
U: add this song to new playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
====
# log-dev/12674
U: play me some music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12670
U: add this song to my library.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# log-dev/12636
U: play me some mac dre?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("mac dre")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12585
U: stop. yeah, i can tell.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12574
U: ohadd this to my playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
====
# log-dev/12491
U: thank you computer.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12488
U: just cancel.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12475
U: play me some hot jams.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "hot jams") => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12466
U: you still there?
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/12442
U: play springsteen music okay
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("springsteen")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12406
U: like podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_item_to_library(playable=id);
====
# log-dev/12286
U: play my favorite
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12261
U: play my favorite music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_song_from_library() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12096
U: shut up.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12090
U: play some public enemy.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("public enemy")) => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12070
U: play npr podcast. let me know.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "npr" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12054
U: how do i get play podcast?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12051
U: play that joe rogan podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "joe rogan" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12031
U: still there.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/12029
U: stop. computer.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/12017
U: play podcast arm chair.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() filter id =~ "arm chair" => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/12015
U: play a podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/11950
U: put on a podcast.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.show() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/11935
U: play music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# log-dev/11932
U: play some disco.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains~(genres, "disco") => @org.thingpedia.media-player.play(playable=id);
